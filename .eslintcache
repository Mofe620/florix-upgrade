[{"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\index.js":"1","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\reportWebVitals.js":"2","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\store.js":"3","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\App.js":"4","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\authReducers.js":"5","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\userReducers.js":"6","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\cartReducers.js":"7","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\orderReducers.js":"8","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\Home.js":"9","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\blogReducers.js":"10","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordResetComplete..js":"11","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\About.js":"12","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\LoginScreen.js":"13","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\SignInScreen.js":"14","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\RegisterScreen.js":"15","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\paymentScreen\\PaymentScreen.js":"16","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js":"17","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\ActivateAccount.js":"18","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Footer.js":"19","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordReset.js":"20","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\DrugStore.js":"21","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Header.js":"22","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\productReducers.js":"23","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\cartScreen\\CartScreen.js":"24","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\SignUpScreen.js":"25","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\shippingScreens\\ShippingScreen.js":"26","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js":"27","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js":"28","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js":"29","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js":"30","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\ProductsScreen.js":"31","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\Contact.js":"32","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\UserProfile.js":"33","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogListScreen.js":"34","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\orderScreens\\OrderScreen.js":"35","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\FormContainer.js":"36","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Message.js":"37","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\_TextInput.js":"38","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\types.js":"39","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Loader.js":"40","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Carousel.js":"41","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\authActions.js":"42","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\blogActions.js":"43","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\CheckoutSteps.js":"44","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Paginate.js":"45","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\SearchProduct.js":"46","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\cartActions.js":"47","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\productActions.js":"48","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Product.js":"49","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\SearchBox.js":"50","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\spinners\\LoadingMain.js":"51","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\orderActions.js":"52","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\constants\\orderConstants.js":"53","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\constants\\productConstants.js":"54","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\blog\\Blog.js":"55","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\blog\\BlogCarousel.js":"56","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Rating.js":"57","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Navigation.js":"58","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Navbar.js":"59","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Sidebar.js":"60"},{"size":649,"mtime":1642131764362,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":1616789579000,"results":"63","hashOfConfig":"62"},{"size":2906,"mtime":1642133086807,"results":"64","hashOfConfig":"62"},{"size":4577,"mtime":1642805613522,"results":"65","hashOfConfig":"62"},{"size":3254,"mtime":1642623193413,"results":"66","hashOfConfig":"62"},{"size":3916,"mtime":1640628882334,"results":"67","hashOfConfig":"62"},{"size":1476,"mtime":1640626293250,"results":"68","hashOfConfig":"62"},{"size":4068,"mtime":1640626293249,"results":"69","hashOfConfig":"62"},{"size":3016,"mtime":1643231919176,"results":"70","hashOfConfig":"62"},{"size":2736,"mtime":1642133086807,"results":"71","hashOfConfig":"62"},{"size":409,"mtime":1640775967817,"results":"72","hashOfConfig":"62"},{"size":6229,"mtime":1642805267111,"results":"73","hashOfConfig":"62"},{"size":3426,"mtime":1643373518984,"results":"74","hashOfConfig":"62"},{"size":2679,"mtime":1641867597177,"results":"75","hashOfConfig":"62"},{"size":4789,"mtime":1643371663137,"results":"76","hashOfConfig":"62"},{"size":1904,"mtime":1642655434397,"results":"77","hashOfConfig":"62"},{"size":2666,"mtime":1643163173844,"results":"78","hashOfConfig":"62"},{"size":1154,"mtime":1640835154480,"results":"79","hashOfConfig":"62"},{"size":2240,"mtime":1643232290265,"results":"80","hashOfConfig":"62"},{"size":1742,"mtime":1643162602058,"results":"81","hashOfConfig":"62"},{"size":1085,"mtime":1642107779759,"results":"82","hashOfConfig":"62"},{"size":707,"mtime":1641616244436,"results":"83","hashOfConfig":"62"},{"size":4067,"mtime":1640626293249,"results":"84","hashOfConfig":"62"},{"size":6306,"mtime":1643078857459,"results":"85","hashOfConfig":"62"},{"size":3873,"mtime":1641982609511,"results":"86","hashOfConfig":"62"},{"size":3524,"mtime":1642679528539,"results":"87","hashOfConfig":"62"},{"size":12944,"mtime":1643163171310,"results":"88","hashOfConfig":"62"},{"size":4028,"mtime":1643167062411,"results":"89","hashOfConfig":"62"},{"size":5687,"mtime":1643078857459,"results":"90","hashOfConfig":"62"},{"size":3253,"mtime":1642646581688,"results":"91","hashOfConfig":"62"},{"size":3422,"mtime":1643145566785,"results":"92","hashOfConfig":"62"},{"size":2417,"mtime":1642514710124,"results":"93","hashOfConfig":"62"},{"size":3588,"mtime":1642795866935,"results":"94","hashOfConfig":"62"},{"size":3079,"mtime":1642646245048,"results":"95","hashOfConfig":"62"},{"size":10087,"mtime":1643078857545,"results":"96","hashOfConfig":"62"},{"size":378,"mtime":1616789579000,"results":"97","hashOfConfig":"62"},{"size":228,"mtime":1616789579000,"results":"98","hashOfConfig":"62"},{"size":567,"mtime":1641980673035,"results":"99","hashOfConfig":"62"},{"size":6809,"mtime":1642133086808,"results":"100","hashOfConfig":"62"},{"size":458,"mtime":1616789579000,"results":"101","hashOfConfig":"62"},{"size":1046,"mtime":1642215446625,"results":"102","hashOfConfig":"62"},{"size":8031,"mtime":1642622816420,"results":"103","hashOfConfig":"62"},{"size":3968,"mtime":1642167051645,"results":"104","hashOfConfig":"62"},{"size":1866,"mtime":1642710927115,"results":"105","hashOfConfig":"62"},{"size":867,"mtime":1642442053954,"results":"106","hashOfConfig":"62"},{"size":1376,"mtime":1643162552992,"results":"107","hashOfConfig":"62"},{"size":1322,"mtime":1641254150750,"results":"108","hashOfConfig":"62"},{"size":6169,"mtime":1642135198383,"results":"109","hashOfConfig":"62"},{"size":1190,"mtime":1643078857546,"results":"110","hashOfConfig":"62"},{"size":984,"mtime":1642390200722,"results":"111","hashOfConfig":"62"},{"size":484,"mtime":1642250077894,"results":"112","hashOfConfig":"62"},{"size":6588,"mtime":1641329361770,"results":"113","hashOfConfig":"62"},{"size":1240,"mtime":1616789579000,"results":"114","hashOfConfig":"62"},{"size":1502,"mtime":1616789579000,"results":"115","hashOfConfig":"62"},{"size":623,"mtime":1642646133126,"results":"116","hashOfConfig":"62"},{"size":888,"mtime":1642773448438,"results":"117","hashOfConfig":"62"},{"size":1886,"mtime":1616789579000,"results":"118","hashOfConfig":"62"},{"size":615,"mtime":1641816832085,"results":"119","hashOfConfig":"62"},{"size":2834,"mtime":1643145605161,"results":"120","hashOfConfig":"62"},{"size":3955,"mtime":1643374026951,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1cjfwoi",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"165","usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\index.js",[],["266","267"],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\store.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\App.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\authReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\userReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\Home.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\blogReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordResetComplete..js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\About.js",["268"],"import React from 'react'\r\nimport { Card, Col, Container, Image, ListGroup, Row } from 'react-bootstrap'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container className=\"about content\">\r\n            <div>\r\n                <h2 style={{fontWeight: \"bold\", fontSize:\"2.5rem\",marginBottom:\"10\", color:\"\"}}>Who are we?</h2>\r\n                <p className=\"about__paragraph\" >\r\n                    Flo-log, an initiative of Florix Healthcare LTD, is a tech-driven health care solution that seeks to change the narrative of the African healthcare sector in terms of product procurement and logistics. We offer an e-marketplace solution to healthcare professionals for the remote purchase of medicines and medical products from accredited distributors, with an accompanying dedicated healthcare logistics system.\r\n                </p>\r\n            </div>\r\n            <Row className=\"about__goals\">\r\n                <Col md={4} className=\"about__goal\">\r\n                    <Card>\r\n                        <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Our Vision</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>Healthcare for Africa</Card.Text>\r\n                            <Card.Text>Healthcare for Africa</Card.Text>\r\n                            <Card.Text>Healthcare for Africa</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={4} className=\"about__goal\">\r\n                    <Card>\r\n                        <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Our Mission</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>To provide every African with:</Card.Text>\r\n                            <Card.Text>Prompt access to quality and affordable medicines</Card.Text>\r\n                            <Card.Text>Quality healthcare</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card className=\"about__goal\">\r\n                        <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Core Values</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>Trust</Card.Text>\r\n                            <Card.Text>Innovation</Card.Text>\r\n                            <Card.Text>Exellent</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n        \r\n            </Row>\r\n            <div>\r\n                <hr />\r\n                <h2 style={{fontWeight: \"bold\", fontSize:\"2.5rem\", marginTop:\"50px\",marginBottom:\"50px\", color:\"\"}}>Meet the Founders</h2>\r\n            <Row className=\"about__team\">\r\n                <Col md={4} className=\"about__team-members\">\r\n                    <Row>\r\n                        <Col md={4} lg={4}>\r\n                            <Image className='about__team__img' src='/assets/images/Andrew.jpg' roundedCircle fluid />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <div className=\"mt-4\">\r\n                                <h3 style={{fontWeight:\"bold\"}}>Andrew Akhabue</h3>\r\n                                <h4 style={{color:\"red\"}}>Managing Director</h4>\r\n                                <hr />\r\n                                <p>Andrew Aizenose Akhabue, a Pharmacist with a Doctor of Pharmacy degree from the University of Benin. Leadership enthusiast and Trainer, with core interests in healthcare innovation and education. He leads Florix Healthcare Limited as its Chief Executive Officer. Prior to his Florix journey, he was branch manager for a retail pharmacy chain based in Benin city.</p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4} className=\"about__team-members\">\r\n                    <Row>\r\n                        <Col md={4} lg={4} >\r\n                            <Image className='about__team__img' src='/assets/images/Joy.jpg' roundedCircle fluid />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <div className=\"mt-4\">\r\n                                <h3 style={{fontWeight:\"bold\"}}>Joy Chidinma Enwerem</h3>\r\n                                <h4 style={{color:\"red\"}}>Human Resources, Chief of Strategy</h4>\r\n                                <hr />\r\n                                <p>\r\n                                    Joy Chidimma Enwerem, Pharmacist, Content Editor, and Strategist, with interests in leading an innovative change in the Nigerian Healthcare space. She graduated from the University of Benin with a Doctor of Pharmacy degree. She currently is the Chief of Strategy and Human Resource at Florix Healthcare Limited.\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4} className=\"about__team-members\">\r\n                    <Row>\r\n                        <Col md={4} lg={4} className=''>\r\n                            <Image className='about__team__img' src='/assets/images/Raphael.jpg' fluid />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <div className=\"mt-4\">\r\n                                <h3 style={{fontWeight:\"bold\"}}>Raphael Chimezie Odoh</h3>\r\n                                <h4 style={{color:\"red\"}}>Chief Innovation Officer</h4>\r\n                                <hr />\r\n                                <p>Raphael Chiemezie Odoh, a Pharmacist, Creative Designer, and Publicist, with key interests in Sales and Marketing. He bagged his Doctor of Pharmacy degree from the University of Benin. He is currently the Chief Innovation Officer at Florix Healthcare Limited, owners of FLO-LOG.</p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\LoginScreen.js",["269","270","271"],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\SignInScreen.js",["272","273","274","275","276","277"],"import React, { useState} from 'react'\r\nimport { Container, Button} from 'react-bootstrap'\r\nimport { Link, Redirect, useLocation } from 'react-router-dom'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { login } from '../../redux/actions/authActions'\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './_TextInput';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignInScreen = ({ isAuthenticated }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n    const {state: {from = \"/\"} = {} } = useLocation();\r\n    \r\n    const auth = useSelector(state => state.auth)\r\n    const { error, loading } = auth\r\n        \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n    if (isAuthenticated){\r\n        return <Redirect to={from} />\r\n    }\r\n\r\n\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n        password: Yup.string()\r\n        .min(6, 'Password must be at least 6 charaters')\r\n        .required('Password is required'),\r\n    })\r\n    return (\r\n        <Container className=\"content auth-container\">\r\n        <Formik\r\n            initialValues={{\r\n            email: '',\r\n            password: '',\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={values => {\r\n            }}\r\n        >\r\n            {formik => (\r\n            <div>\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Sign In</h1>\r\n                <Form onSubmit={submitHandler}>\r\n                <TextField  \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                <TextField \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Enter Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                <button className=\"btn btn-primary mt-3\" type=\"submit\">Login</button>\r\n                </Form>\r\n            </div>\r\n            )}\r\n        </Formik>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\nexport default connect(mapStateToProps, {login}) (SignInScreen)","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\RegisterScreen.js",["278","279"],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\paymentScreen\\PaymentScreen.js",["280","281"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../../components/FormContainer'\nimport CheckoutSteps from '../../components/CheckoutSteps'\nimport { savePaymentMethod } from '../../redux/actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <Container className=\"content\" >\n            <CheckoutSteps step1 step2 step3 />\n            <div className=\"d-flex justify-content-center checkout__header\" style={{paddingTop:\"15rem\" }}>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Payment Options</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <div className=\"d-grid gap-2 pt-2\">\n                    <Button size=\"lg\" type=\"submit\"> Continue</Button>\n                </div>\n            </Form>\n            </div>\n        </Container>\n    )\n}\n\nexport default PaymentScreen\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js",["282"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { reset_password_confirm } from '../../redux/actions/authActions';\r\n\r\nconst PasswordResetConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [new_password, setNew_password] = useState('')\r\n    const [re_new_password, setRe_new_password] = useState('')\r\n\r\n    //const dispatch = useDispatch()\r\n\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        reset_password_confirm(uid, token, new_password, re_new_password)\r\n        //dispatch(reset_password_confirm(uid, token, new_password, re_new_password));\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Container className=' auth-container pt-4'>\r\n                <div className=' auth-header text-center'>\r\n                    <p className=\"auth-base\"> Enter a new password</p>\r\n                </div>\r\n                <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                        <Form.Control \r\n                            className=\"auth-input search-ppty\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={new_password}\r\n                            onChange={(e) => setNew_password(e.target.value)}\r\n                            minLength='6'\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                        <Form.Control \r\n                            className=\"auth-input search-ppty\" \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={re_new_password}\r\n                            onChange={(e) => setRe_new_password(e.target.value)}\r\n                            minLength='6'\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default connect(null, { reset_password_confirm })(PasswordResetConfirm);\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\ActivateAccount.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Footer.js",["283","284","285"],"import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\n\nconst Footer = () =>{\n    return(\n        <>\n        <Container className='footer p-4 mt-4'> \n        \n        <div className=\"footer__items\">\n            <p><Link to=\"/posts\">Blog Posts</Link></p>\n            <p><Link to=\"about\">About Us</Link></p>\n            <p><Link to=\"/contact\">Contact Us</Link></p>\n        </div>\n        \n        <Row className=\"\">\n            <Col md={8} className=\"px-0 footer\">\n                <div className=\"footer__media\">\n                    <span className=\"footer__media__icons\"><a href=\"https://www.facebook.com/florixhealthcare\" target=\"_blank\"><i className=\"fab fa-facebook\"></i></a></span>\n                    <span className=\"footer__media__icons\"><a href=\"http://instagram.com/flo_log.hq\" target=\"_blank\"><i className=\"fab fa-instagram\"></i></a></span>\n                    <span className=\"footer__media__icons\"><a href=\"https://wa.me/message/T4FZA33RTZIPD1\" target=\"_blank\"><i className=\"fab fa-whatsapp\"></i></a></span>\n                    <span className=\"footer__media__icons\"><a href=\"/\"><i className=\"fab fa-twitter\"></i></a></span>\n                </div>\n            </Col>\n            <Col md={4} className=\"footer__subscription px-0\">\n            <p className=\"footer__subscription__text\">Get E-mail Updates About Our Latest News And Special Offers</p>\n                <Row>\n                    <Col xs={8} className=\"footer__subscription__form\" >\n                    <Form className=\"px-0\">\n                        <Form.Group  controlId=\"formGroupEmail\">\n                            <Form.Control className=\"search-ppty\" type=\"email\" placeholder=\"Enter your email\" /> \n                        </Form.Group>\n                    </Form>\n                    </Col>\n                    <Col xs={4} >\n                    <Button variant=\"danger\" className=\"search-ppty px-0\">Subscribe</Button>\n                    </Col>\n                </Row>\n            </Col>            \n        </Row>\n        </Container>\n        <p className=\"footer2 text-center py-3\">&copy; 2022 Florix Healthcare Ltd. All Rights Reserved. </p> \n    </>\n    )\n}\n\nexport default Footer\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\PasswordReset.js",["286"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { reset_password } from '../../redux/actions/authActions';\r\n\r\nconst PasswordReset = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [email, setEmail] = useState('')\r\n\r\n\r\n    //const dispatch = useDispatch()\r\n    \r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        reset_password(email)\r\n        //dispatch(reset_password(email));\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Container className='auth-container '>\r\n            <div className=' auth-header text-center'>\r\n                <p className=\"auth-base\"> Reset password</p>\r\n            </div>\r\n            <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Control \r\n                        className=\"auth-input search-ppty\" \r\n                        type=\"email\" \r\n                        placeholder=\"example@email.com\" \r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        />\r\n                </Form.Group>\r\n                <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password })(PasswordReset);\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\DrugStore.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Header.js",["287","288"],"import React, { Fragment, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../../redux/actions/authActions'\r\nimport Navigation from './Navigation';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navigation />\r\n            <Container >\r\n                {children}\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\reducers\\productReducers.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\cartScreen\\CartScreen.js",["289"],"import React, { useEffect} from 'react'\nimport { Link, Redirect, useLocation  } from 'react-router-dom'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../../components/Message'\nimport { addToCart, removeFromCart } from '../../redux/actions/cartActions'\n\nfunction CartScreen({ match, history, isAuthenticated }) {\n    const productId = match.params.id\n    const location = useLocation()\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    \n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            history.push('/shipping')\n        }  \n    }\n    const keepShopping = ()=>{\n        history.push('/products')\n    }\n\n    return (\n        <Container className=\"content checkout\">\n        <Row>\n            <Col md={8}>\n                <h2 className=\"checkout__header text-center\">Cart Page</h2>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        No Item in the Cart <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n\n                                    {/* Item info */}\n                                    <Row>\n                                        <Col md={2}>\n                                            {/* <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        {/* Price of item */}\n                                        <Col md={2}>\n                                            &#8358; {item.price}\n                                        </Col>\n\n                                        {/* Column for adjusting quantity of items in the cart  */}\n                                        <Col md={3}>\n                                            <Form.Control\n                                                style={{backgroundColor:\"white\"}}\n                                                type=\"number\"\n                                                min=\"1\"\n                                                max={item.countInStock} \n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                            \n\n                                            </Form.Control>\n                                        </Col>\n                                         {/* Remove Item from Cart Column */}       \n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                            \n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item className=\"\">\n                            <h2>{cartItems.reduce((acc, item) => acc + item.qty, 0)} Product(s) Added</h2>\n                            Sub total:  &#8358; {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <div className=\"d-grid gap-2\">\n                            <Button\n                                type='button'\n                                size=\"lg\"\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                        \n\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <div className=\"d-grid gap-2\">\n                            <Button\n                                type='button'\n                                size=\"lg\"\n                                variant=\"warning\"\n                                onClick={keepShopping}\n                            >\n                                Add More Products?\n                            </Button>\n                        </div>\n                        \n\n                    </ListGroup.Item>\n\n\n\n                </Card>\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, { addToCart, removeFromCart}) (CartScreen)","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\SignUpScreen.js",["290","291","292","293","294","295","296","297","298"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { signup } from '../../redux/actions/authActions'\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './_TextInput';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignUpScreen = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [username, setUsername] = useState([])\r\n  const [email, setEmail] = useState([])\r\n  const [password, setPassword] = useState([])\r\n  const [re_password, setRe_password] = useState([])\r\n  const [message, setMessage] = useState('')\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector(state => state.auth)\r\n  const { error, loading, userInfo } = auth\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      if (password !== re_password) {\r\n          setMessage('Both passwords must be the same')\r\n      } else {\r\n          dispatch(signup(username, email, password, re_password));\r\n          setAccountCreated(true);\r\n      }\r\n  }\r\n  \r\n  const validate = Yup.object().shape({\r\n    username: Yup.string()\r\n      .max(15, 'Must be 20 characters or less')\r\n      .required('Username is required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, \"A minimum of 6 characters is required\")\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm your password'),\r\n  })\r\n  \r\n  if (accountCreated) {\r\n      return <Redirect to='/login' />\r\n  }\r\n\r\n  if (isAuthenticated){\r\n      return <Redirect to=\"/\" />\r\n      }\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"content auth-container\">\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        }}\r\n        validationSchema={validate}\r\n        onSubmit={values => {\r\n          console.log(values)\r\n        }}\r\n      >\r\n        {({errors, touched}) => (\r\n          <div>\r\n            <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField \r\n                name=\"username\" \r\n                label=\"Username\"\r\n                type=\"text\" \r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"email\" \r\n                label=\"Email\"\r\n                type=\"email\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"password\" \r\n                label=\"Password\"\r\n                type=\"password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"confirmPassword\" \r\n                label=\"Confirm Password\"\r\n                type=\"password\" \r\n                value={re_password}\r\n                onChange={(e) => setRe_password(e.target.value)}\r\n                />\r\n              <button className=\"btn btn-primary mt-3\" type=\"submit\">Register</button>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {signup}) (SignUpScreen)","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\shippingScreens\\ShippingScreen.js",["299","300","301"],"import React, { useState} from 'react'\r\nimport { Container, Form, Button, Image, Card} from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../../redux/actions/cartActions'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=' auth-container content'>\r\n        <Card className=\"p-5\">\r\n       <CheckoutSteps step1 step2 />\r\n        <h2 className=\"text-center checkout__header\">Shipping Address</h2>\r\n         {/*} {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />} */}\r\n            <Form className=\"auth-form\" onSubmit={submitHandler}>\r\n                <Form.Group className=\"mb-3\" controlId=\"address\">\r\n                    <Form.Control \r\n                        className=\"auth-input\" \r\n                        type='text'\r\n                        placeholder='Shipping address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        required\r\n                        />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"city\">\r\n                    <Form.Control \r\n                        className=\"auth-input\" \r\n                        type='text'\r\n                        placeholder='City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        required\r\n                        />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId='postalCode'>\r\n                    <Form.Control\r\n                        className=\"auth-input\"\r\n                        type='text'\r\n                        placeholder='Postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId='country'>\r\n                    <Form.Control\r\n                        className=\"auth-input\" \r\n                        type='text'\r\n                        placeholder='Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                    <div className='d-grid gap-2'>\r\n                        <Button size=\"lg\" type=\"submit\">Next</Button>\r\n                    </div>\r\n            </Form>\r\n            </Card>\r\n</Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js",["302","303"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container } from 'react-bootstrap'\r\nimport Rating from '../../components/Rating'\r\nimport Message from '../../components/Message'\r\nimport LoadingMain from '../../components/spinners/LoadingMain'\r\nimport { listProductDetails, createProductReview } from '../../redux/actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history, isAuthenticated }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n \r\n    const auth = useSelector(state => state.auth)\r\n    const { user  } = auth\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            if (successProductReview) {\r\n                setRating(0)\r\n                setComment('')\r\n                dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n            }\r\n            dispatch(listProductDetails(match.params.id))\r\n        }  \r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(qty <=e.target.value <=product.countInStock && qty > 0){\r\n               console.log(qty)\r\n                history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n                console.log(qty)\r\n        }else{\r\n            alert(\"Insifficient Quantity in Stock\")\r\n            }\r\n    }\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"product mx-4\" style={{marginTop:\"70px\"}}>\r\n            <Container className=''>\r\n            {loading ?\r\n                <LoadingMain />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={4} className=\"\">\r\n                                    <Image src={product.image} alt={product.name} className=\"product__details__img\" fluid />   \r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <div>\r\n                                        <h4 className=\"product__name mt-3\">Generic Name: {product.name}</h4>\r\n                                        <p>Brand: {product.brand}  </p>\r\n                                        <p>Dosage Form: {product.dosageForm} </p>\r\n                                        <p>Strength: {product.strength}</p>\r\n                                        <p> Description: {product.description} </p>\r\n                                    \r\n                                        \r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className=\"product__details__card\">\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>&#8358; {product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                        \r\n                                                <ListGroup.Item>\r\n                                                 \r\n                                                        <Form onSubmit ={handleSubmit}>\r\n                                                            <Form.Control\r\n                                                                style={{backgroundColor:\"white\"}}\r\n                                                                type=\"number\"\r\n                                                                min=\"1\"\r\n                                                                placeholder='Enter quantity'\r\n                                                                max={product.countInStock} \r\n                                                                onChange= {e=>setQty(e.target.value)}\r\n                                                              \r\n                                                            >\r\n                                                                \r\n\r\n                                                            </Form.Control>\r\n                                                            \r\n                                                            <div className=\"d-grid gap-2 pt-2\">\r\n                                                            <Button\r\n                                                            \r\n                                                            size=\"lg\"\r\n                                                            disabled={product.countInStock === 0}\r\n                                                            type=\"submit\">\r\n                                                            Add to Cart\r\n                                                        </Button>\r\n                                                            </div>\r\n                                                        </Form>\r\n                                                </ListGroup.Item>\r\n                                        \r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                \r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                       \r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"product__details__feedback\">\r\n                                <Col md={6}>\r\n                            {/*\r\n                                    {product.reviews.length === 0 && <Message variant='info'>Product reviews will be shown here if present</Message>}\r\n\r\n                                    \r\n                                        {product.reviews.map((review) => (\r\n                                            <div key={review.id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.dateCreated.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                        */}\r\n                                        <ListGroup variant='flush'>\r\n                                    \r\n                                        <ListGroup.Item>\r\n                                            \r\n\r\n                                            {loadingProductReview && <LoadingMain />}\r\n                                            {successProductReview && <Message variant='success'>Feedback was sent successfully</Message>}\r\n                                            {errorProductReview && <Message variant='warning'>Sorry, we couldn't submit your feedback. Select an option and try again OR you may have given feedback on this product before.</Message>}\r\n\r\n                                            {user ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label className=\"my-3\">Leave Feedback on this Product</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            className=\"search-ppty\"\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Option...</option>\r\n                                                            <option value='1'>1 - Very dissatisfied</option>\r\n                                                            <option value='2'>2 - Dissatisfied</option>\r\n                                                            <option value='3'>3 - Neither satisfied nor dissatisfied</option>\r\n                                                            <option value='4'>4 - Satisfied</option>\r\n                                                            <option value='5'>5 - Very satisfied</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label className=\"my-3\">Add a comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            col='10'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        className=\"blog__comment__button\"\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'> <Link to='/login'>Sign In</Link> to Leave a feedback on this product</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {listProductDetails }) ( ProductScreen )\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js",["304","305","306","307","308","309"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { BLOG_COMMENT_RESET } from '../../redux/actions/types';\r\nimport { listBlogDetails, getBlogComment } from '../../redux/actions/blogActions';\r\n\r\n\r\nconst BlogDetailsScreen = ({match}) => {\r\n\r\n    const [comment, setComment] = useState('')\r\n\r\n    const blogDetails = useSelector(state => state.blogDetails)\r\n    const { loading, error, blog } = blogDetails\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const  blogComment = useSelector(state => state.blogComment)\r\n    const { loading:blogCommentLoading, error:blogCommentError, success:blogCommentSuccess} = blogComment\r\n\r\n    useEffect(() => {\r\n        const slug = match.params.id;\r\n        if (blogCommentSuccess) {\r\n            setComment('')\r\n            \r\n        }\r\n        dispatch(listBlogDetails(slug))\r\n    }, [dispatch, blogCommentSuccess])\r\n\r\n    const createBlog = () => {\r\n        return {__html: blog.body}\r\n    };\r\n\r\n    const capitalizeFirstLetter = (word) => {\r\n        if (word)\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        return '';\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        const slug = match.params.id\r\n        e.preventDefault()\r\n        dispatch(getBlogComment(\r\n            slug, {\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"content post-details\">\r\n            <Row>\r\n                <Col sm={8}>\r\n                <div>\r\n                <Image className=\"post-details__img\" src={blog.image} />\r\n                <h3 className='display-2 post-details__title'>{blog.title}</h3>\r\n                <h4 className='text-muted post-details__category'>Category: {capitalizeFirstLetter(blog.category)}</h4>\r\n                \r\n                <div className='mt-5 mb-5' dangerouslySetInnerHTML={createBlog()} />\r\n            </div>\r\n            <div className=\"blog__content\">\r\n            <div className=\"blog__comments\">\r\n                \r\n            {!blog?.comments?.length ? (\r\n                    <p>No comments</p>\r\n                ) : (\r\n                <div className=\"blog__comment\">\r\n                    {blog?.comments.map((comment) => (\r\n                    <div key={comment?.id}>\r\n                        <p className='blog__comment__name'>{comment?.name}</p>          \r\n                        <p className=\"blog__comment__date\"><i>{comment?.dateCreated.substring(0, 10)}</i></p>\r\n                        <p className=\"blog__comment__comment\">{comment?.comment}</p>\r\n                    </div> \r\n                    ))}\r\n                </div>\r\n                )}\r\n            </div>\r\n            {blogCommentLoading && <Loader />}\r\n            {blogCommentSuccess && <Message variant='success'>Comment Submitted</Message>}\r\n            {blogCommentError && <Message variant='info'>Please login before adding a comment</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='comment'>\r\n                    <Form.Label className=\"blog__add-comment\">Comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\r\n                    <Form.Control\r\n                        as='textarea'\r\n                        row='5'\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary' className=\"blog__comment__button\">Add Comment</Button>\r\n                </Form>\r\n            </div>\r\n                </Col>\r\n                <Col sm={4}></Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n        \r\n    );\r\n};\r\n\r\nexport default BlogDetailsScreen;","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js",["310","311","312"],"import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { createOrder } from '../../redux/actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history, isAuthenticated }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order.id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            dispatch(createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n            }))\r\n        }  \r\n        \r\n    }\r\n    return (\r\n        <Container className=\"content\">\r\n            <Row>\r\n                <Col md={4}>\r\n                     <div >\r\n                     \r\n                         <h3 className=\"me-2\" style={{marginTop:\"30px\"}}><strong>Shipping Address: </strong></h3>\r\n                         <p>\r\n                             {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                             {'  '}\r\n                             {cart.shippingAddress.postalCode},\r\n                             {'  '}\r\n                             {cart.shippingAddress.country}\r\n                         </p>\r\n                     </div>\r\n                     <div >\r\n                         <h3 className=\"me-2\"><strong>Payment Method: </strong></h3>\r\n                         <p>\r\n                             {cart.paymentMethod}\r\n                         </p>\r\n                     </div> \r\n                            <h3><strong>Order Summary</strong></h3>\r\n                          \r\n                                <Row>\r\n                                    <Col><p>Sub total:</p></Col>\r\n                                    <Col><p>&#8358; {cart.itemsPrice}</p></Col>\r\n                                </Row>\r\n                          \r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                       \r\n                                <div className=\"d-grid gap-2\">\r\n                                    <Button\r\n                                        type='button'\r\n                                        size=\"lg\"\r\n                                        disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrder}\r\n                                    >\r\n                                        Place Order\r\n                                    </Button>\r\n                                </div>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                No Product in the Cart\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    {/*  <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <p className=\"mx-5\"><Link to={`/product/${item.product}`}>{item.name}</Link></p>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    <p>{item.qty} X &#8358; {item.price} = &#8358; {(item.qty * item.price).toFixed(2)}</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {createOrder }) ( PlaceOrderScreen )","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js",["313","314","315","316"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Container, Image} from 'react-bootstrap'\r\nimport { getBlogCategory } from '../../redux/actions/blogActions'\r\n\r\n\r\nconst BlogCategoryScreen = ({match}) => {\r\n    const [currentCategory, setCurrentCategory] = useState('');\r\n\r\n    const blogCategory = useSelector(state => state.blogCategory)\r\n    const { error, loading, blogs } = blogCategory\r\n    console.log(blogs)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const id = match.params.id\r\n        const category = match.params.id\r\n        setCurrentCategory(category);\r\n        dispatch(getBlogCategory(id))\r\n\r\n    }, [])\r\n\r\n\r\n    const getCategoryBlogs = () => {\r\n        let list = [];\r\n        let result = [];\r\n\r\n        blogs.map(blog => {\r\n            return list.push(\r\n                <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative\">\r\n                    <div className=\"col p-4 d-flex flex-column position-static\">\r\n                        <strong className=\"d-inline-block mb-2 text-primary\">{blog.category}</strong>\r\n                        <h3 className=\"mb-0\">{blog.title}</h3>\r\n                        <p className=\"card-text mb-auto\">{blog.introduction}</p>\r\n                        <Link to={`/post/${blog.slug}`} className=\"stretched-link\">Read More</Link>\r\n                    </div>\r\n                    <div className=\"col-auto d-none d-lg-block\">\r\n                    <Image className=\"post__img\" src={`${process.env.REACT_APP_API_URL}${blog.image}`} alt={blog.title} fluid/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < list.length; i += 2) {\r\n            result.push(\r\n                <div key={i} className='row mb-2'>\r\n                    <div className='col-md-6'>\r\n                        {list[i]}\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        {list[i+1] ? list[i+1] : null}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <Container className='content'>\r\n            {/*\r\n            <div className='container mt-3'>\r\n            <h3 className='display-4'>Category: {currentCategory} </h3>\r\n            <div className=\"nav-scroller py-1 mb-2\">\r\n                <nav className=\"nav d-flex justify-content-between\">\r\n                    <Link className=\"p-2 text-muted\" to='/blog/category/medications'>Medications</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/blog/category/diseases/'>Diseases</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/health_news'>Health News</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/medications'>Medications</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/medical_equipment'>Medical Equipment</Link>\r\n                </nav>\r\n            </div>\r\n           \r\n        </div>\r\n            */}\r\n            {getCategoryBlogs()}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BlogCategoryScreen\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\productScreens\\ProductsScreen.js",["317","318","319","320","321","322","323"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector, connect} from 'react-redux'\nimport { Row, Col, Container, Button, Modal, Form } from 'react-bootstrap'\nimport Product from '../../components/Product'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport Paginate from '../../components/Paginate'\nimport ProductCarousel from '../../components/Carousel'\nimport LoadingMain from '../../components/spinners/LoadingMain'\n//import ProductCarousel from '../components/ProductCarousel'\nimport SearchBox from '../../components/SearchBox'\nimport { listProducts } from '../../redux/actions/productActions'\nimport SearchProduct from '../../components/SearchProduct'\n\n\nfunction HomeScreen({history, isAuthenticated}) {\n    \n\n    const location = useLocation()\n    const [lgShow, setLgShow] = useState(false);\n\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    const keyword = history.location.search\n    useEffect(() => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            dispatch(listProducts(keyword))\n        }  \n        \n\n    }, [dispatch, keyword])\n\n    return (\n        <div style={{marginTop:\"50px\"}}>\n            <div className=\"product__carousel\">\n                <Container className=\"py-4\">\n                    {<ProductCarousel />}\n                </Container>\n            </div>\n            <div>\n                <h3 className=\"intro-caption\">Africa's Premium Healthcare E-marketplace and Logisttics Solution</h3>\n            </div>\n            <Container className=\"product\" >\n            {loading ? <LoadingMain />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            <Col xs={6}><h3><strong>Most Recent Products</strong></h3></Col>\n                            <Col xs={6}><SearchProduct/></Col>\n                            {/*<Col xs={6} className=\"float-end\"><Button onClick={() => setLgShow(true)} variant=\"outline-info\" className=\"ms-auto\">Search Products</Button></Col> */}\n                        </Row>\n                        \n                        \n                        <Row>\n                            {products.map(product => (\n                                <Col key={product.id} xs={6} md={4} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n            \n            </Container>\n        <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\n            <Modal.Body>\n               <SearchProduct />\n            </Modal.Body>\n        </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {listProducts }) (HomeScreen)\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\baseScreens\\Contact.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\UserProfile.js",["324","325","326","327","328","329","330","331","332","333"],"import React, { Component, useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector, connect} from 'react-redux'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { LOAD_USER_PROFILE_RESET } from '../../redux/actions/types'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { load_user_profile } from '../../redux/actions/authActions'\r\n\r\nfunction UserProfile({location, history, isAuthenticated}) {\r\n    \r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [company, setCompany] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [telephone, setTelephone] = useState('')\r\n  \r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const { user } = auth\r\n    \r\n    const profileInfo = useSelector(state => state.profileInfo)\r\n    const {  error, loading, userInfo } = profileInfo\r\n    console.log(userInfo)\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            history.push('/login')\r\n        } else {\r\n                setUsername(user.username)\r\n                setEmail(user.email)\r\n                setImage(userInfo.image)\r\n                setCompany(userInfo.company)\r\n                setTelephone(userInfo.telephone)\r\n            }\r\n        \r\n    }, [history, isAuthenticated, userInfo, user])\r\n    return (\r\n        <Container className='content'>\r\n            <Row className=\"\">\r\n                <h1 className=\"profile-header\">{company} profile</h1>\r\n                <Col md={3} className=\"\">\r\n                    <div className=\"\">\r\n                            <img className='profile-img img-fluid rounded-circle  mt-4 mb-4' src={image}  alt=''/>\r\n                            <p><Link href=\"/\">Edit profile</Link></p>\r\n                    </div>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Form className=\"mt-4\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                            <Form.Control className=\"auth-input\" type=\"name\" value={username} disabled/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                            <Form.Control className=\"auth-input\" type=\"name\" value={email} disabled/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                            <Form.Control className=\"auth-input\" type=\"name\"   value={company ? company : \" Your company/organization name?\"  } />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                            <Form.Control className=\"auth-input\" type=\"email\" value={telephone ? telephone : \" Mobile/telephone no.\"} />\r\n                        </Form.Group>\r\n                        {/*<Button className=\"auth-button btn btn-block w-100\" variant=\"primary\" value=\"reset\"> Save</Button>*/}\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n                <div md={6}  className=\"mt-4\">\r\n                    <h2>My Order History</h2>\r\n                </div>\r\n        \r\n    </Container>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {load_user_profile}) (UserProfile)\r\n\r\n\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\blogscreen\\BlogListScreen.js",["334","335","336","337","338","339"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport BlogCarousel from '../../components/blog/BlogCarousel'\r\nimport Blog from '../../components/blog/Blog'\r\nimport { listBlogs } from '../../redux/actions/blogActions'\r\nimport { getFeaturedBlog } from '../../redux/actions/blogActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst BlogListScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const blogList = useSelector(state => state.blogList)\r\n    const { error, loading, blogs } = blogList\r\n\r\n    const featuredBlog = useSelector(state => state.featuredBlog)\r\n    const { blog } = featuredBlog\r\n    const post = blog[0]\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listBlogs())\r\n        dispatch(getFeaturedBlog())\r\n\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        <Container className=\"content\">\r\n            <BlogCarousel />\r\n            <div style={{marginTop:\"20px\"}}>\r\n                <div className=\"post\">\r\n                    <h3 className=\"m-0 p-0\"><strong>Latest Posts</strong></h3>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            {blogs.map(blog => (\r\n                                <Col key={blog.id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Blog blog={blog} />\r\n                                </Col>\r\n                            ))}  \r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <div>\r\n                                {/*\r\n                                <Row>\r\n                                    <Col md={4}><Image className=\"post__img\" src=\"/assets/blog/post2.jpg\" alt=\"\" fluid/></Col>\r\n                                    <Col md={8}>\r\n                                        <div>\r\n                                            <p className=\"post__txt__title\">University Create New Epidermiological Model to Study COVID-19</p>\r\n                                            <p>Dec 27th - 5m</p>\r\n                                        </div>\r\n                                        \r\n                                    </Col>\r\n                                </Row>\r\n                                */}\r\n                            </div>\r\n                            <div><h2>Blog Categories</h2></div>\r\n                            <Row>\r\n                                <Col lg={4}> <h2><Link to=\"/blog/category/medications\">Medications</Link></h2> </Col>\r\n                                <Col lg={4}> <h2><Link to=\"/blog/category/diseases\">Diseases</Link></h2> </Col>\r\n                                <Col lg={4}> <h2><Link to=\"/blog/category/medical-equipment\">Equipments</Link></h2> </Col>\r\n                            </Row>\r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n           \r\n           \r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BlogListScreen\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\orderScreens\\OrderScreen.js",["340","341"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../../components/Message'\nimport LoadingMain from '../../components/spinners/LoadingMain'\nimport Loader from '../../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../../redux/actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../../constants/orderConstants'\n\nfunction OrderScreen({ match, history, isAuthenticated }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AU7EU-hk7Fhx_4JxjlZIdHXssAJDOBgt-ejulNmFSpuSPrrJPxj18G6uhouktuYEp3HRSFld1jaYfcWd'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location,\n                }\n            })\n        }\n\n        if (!order || successPay || order.id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <LoadingMain />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <Container className=\"content\">\n                   {/* <h1>Order: {order.Id}</h1> */}\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <p><strong>Username: </strong> {order.user.username}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping Address: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n                                    <Row>\n                                        <Col sm={2}>\n                                            <p><strong>Delivery Status:</strong></p>\n                                        </Col>\n                                        <Col sm={10}>\n                                        {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.dateDelivered}</Message>\n                                    ) : (\n                                            <Message variant='info'>Not Delivered</Message>\n                                        )}\n                                        </Col>\n\n                                    </Row>\n                                    \n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <p>\n                                        <strong>Payment Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    <Row><Col sm={2}><p><strong>Payment Status:</strong></p></Col>\n                                    <Col sm={10}>{order.isPaid ? (\n                                        <Message variant='success'>Payment successfully {order.datePaid}</Message>\n                                    ) : (\n                                            <Message variant='info'>Not Paid</Message>\n                                        )}\n                                    </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                {/* <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <p><Link to={`/product/${item.product}`}>{item.name}</Link></p>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X &#8358; {item.price} = &#8358; {(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Process Transaction</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col><p>Sub total:</p></Col>\n                                            <Col><p><strong>&#8358; {order.itemsPrice}</strong></p></Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <LoadingMain />}\n\n                                            {!sdkReady ? (\n                                                <LoadingMain />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <LoadingMain />}\n                                {isAuthenticated && isAuthenticated.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, { getOrderDetails, payOrder, deliverOrder }) (OrderScreen)\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\FormContainer.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Message.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\screens\\authScreens\\_TextInput.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\types.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Loader.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Carousel.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\blogActions.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Paginate.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\SearchProduct.js",["342"],"import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nconst SearchProduct = () => {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            console.log(keyword)\r\n            history.push(`/products?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"auth-form px-4\" onSubmit={submitHandler}>\r\n        <Form.Group controlId='searchbox' inline>\r\n            <Form.Control\r\n                variant=\"lg\"\r\n                className=\"search-ppty\"\r\n                type='text'\r\n                placeholder=\"Enter product...\"\r\n                name='q'\r\n                style={{backgroundColor:\"white\"}}\r\n                onChange={(e) => { \r\n                    setKeyword(e.target.value)\r\n                }}\r\n            >\r\n            </Form.Control>\r\n        </Form.Group>\r\n        {/*}\r\n        <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n            */}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchProduct\r\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\cartActions.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\productActions.js",["343","344","345"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from './types'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `${process.env.REACT_APP_API_URL}/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/products/update/${product.id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n            }\n        }\n        \n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Product.js",["346","347"],"import React from 'react'\nimport { Card, Image } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        <div className=\"\">\n            <Link to={`/product/${product.id}`}>\n                \n                <Image className=\"product__img shadow-sm\" src={product.image} fluid/> \n\n                {/*Adding ${process.env.REACT_APP_API_URL} to image src doesn't work in production \n                <Image className=\"product__img shadow-sm\" src={`${process.env.REACT_APP_API_URL}${product.image}`} fluid/> \n                */}\n            </Link>\n            <div>\n                <Link to={`/product/${product.id}`}><h3 className='product__name'>{product.name}</h3></Link>\n                <p as=\"h3\"> &#8358; {product.price}</p>\n                <p>{product.dosageForm}</p>\n                <p>{product.strength}</p>\n                {/*\n                <div className=\"my-3\">\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                </div>\n                */}\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Product\n","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\SearchBox.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\spinners\\LoadingMain.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\redux\\actions\\orderActions.js",["348","349","350","351","352","353","354","355","356"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n    CART_CLEAR_ITEMS\n} from './types'\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/orders/${order.id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\constants\\orderConstants.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\constants\\productConstants.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\blog\\Blog.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\blog\\BlogCarousel.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\Rating.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Navigation.js",[],"C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Navbar.js",["357","358","359","360"],"import React, { Fragment } from 'react';\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions/authActions';\r\nimport {NavDropdown} from 'react-bootstrap';\r\n\r\n\r\nconst NavbarInfo = ({ toggleSidebar, isAuthenticated, logout }) => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const { error, loading, user } = auth\r\n  \r\n\r\n    const guestLinks = () => (\r\n\r\n        <Fragment>\r\n            <LinkContainer to='/login'>\r\n                <li className=\"navbar__auth-link\">Sign In</li>\r\n            </LinkContainer>\r\n        </Fragment>\r\n    );\r\n  \r\n    const authLinks = () => (\r\n        <Fragment>\r\n            <li className='navbar__list__item'>\r\n                <NavLink className='navbar__link' to='/products'>\r\n                        Drugstore\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"navbar__auth-link\" onClick={logout}>Logout</li>\r\n        </Fragment>\r\n    );\r\n\r\n    return(\r\n        <nav className='navbar fixed-top shadow-sm'>\r\n            <div className=\"navbar__logobtn\">\r\n                <span className=\"navbar__logobtn__btn\" >&#9776;</span>\r\n        \r\n                <Link className='navbar__logo' exact to='/'>\r\n                    <img className='navbar__flolog-logo'  src='/assets/icons/logoandname.png' alt=\"brand-logo\" />\r\n                </Link>\r\n            </div>\r\n            <ul className='navbar__list ms-auto'>\r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' exact to='/'>\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' to='/services'>\r\n                        Services\r\n                    </NavLink>\r\n                </li>\r\n                \r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' to='/about'>\r\n                        About \r\n                    </NavLink>\r\n                </li>\r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' to='/posts'>\r\n                        Blog\r\n                    </NavLink>\r\n                </li>\r\n\r\n                    {isAuthenticated ? authLinks() : guestLinks()}\r\n        \r\n            </ul>\r\n     \r\n            <div className='navbar__button' onClick={toggleSidebar}>\r\n               \r\n            </div>\r\n            <div>\r\n            </div>  \r\n         \r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\nexport default connect(mapStateToProps, { logout })(NavbarInfo);","C:\\projects\\websites\\flolog-frontend\\frontend\\src\\components\\global\\Sidebar.js",["361","362","363","364"],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":2,"column":39,"nodeType":"371","messageId":"372","endLine":2,"endColumn":48},{"ruleId":"369","severity":1,"message":"373","line":2,"column":45,"nodeType":"371","messageId":"372","endLine":2,"endColumn":50},{"ruleId":"369","severity":1,"message":"374","line":2,"column":52,"nodeType":"371","messageId":"372","endLine":2,"endColumn":56},{"ruleId":"369","severity":1,"message":"375","line":13,"column":21,"nodeType":"371","messageId":"372","endLine":13,"endColumn":31},{"ruleId":"369","severity":1,"message":"376","line":2,"column":21,"nodeType":"371","messageId":"372","endLine":2,"endColumn":27},{"ruleId":"369","severity":1,"message":"377","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"378","line":5,"column":8,"nodeType":"371","messageId":"372","endLine":5,"endColumn":14},{"ruleId":"369","severity":1,"message":"379","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":15},{"ruleId":"369","severity":1,"message":"380","line":20,"column":13,"nodeType":"371","messageId":"372","endLine":20,"endColumn":18},{"ruleId":"369","severity":1,"message":"381","line":20,"column":20,"nodeType":"371","messageId":"372","endLine":20,"endColumn":27},{"ruleId":"369","severity":1,"message":"382","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"383","line":22,"column":29,"nodeType":"371","messageId":"372","endLine":22,"endColumn":37},{"ruleId":"369","severity":1,"message":"382","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"384","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":21},{"ruleId":"369","severity":1,"message":"385","line":4,"column":19,"nodeType":"371","messageId":"372","endLine":4,"endColumn":30},{"ruleId":"386","severity":1,"message":"387","line":19,"column":60,"nodeType":"388","messageId":"389","endLine":19,"endColumn":128,"fix":"390"},{"ruleId":"386","severity":1,"message":"387","line":20,"column":60,"nodeType":"388","messageId":"389","endLine":20,"endColumn":118,"fix":"391"},{"ruleId":"386","severity":1,"message":"387","line":21,"column":60,"nodeType":"388","messageId":"389","endLine":21,"endColumn":123,"fix":"392"},{"ruleId":"369","severity":1,"message":"385","line":3,"column":19,"nodeType":"371","messageId":"372","endLine":3,"endColumn":30},{"ruleId":"369","severity":1,"message":"393","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"394","severity":1,"message":"395","line":13,"column":8,"nodeType":"396","endLine":13,"endColumn":10,"suggestions":"397"},{"ruleId":"369","severity":1,"message":"398","line":2,"column":16,"nodeType":"371","messageId":"372","endLine":2,"endColumn":24},{"ruleId":"369","severity":1,"message":"382","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"377","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"376","line":3,"column":21,"nodeType":"371","messageId":"372","endLine":3,"endColumn":27},{"ruleId":"369","severity":1,"message":"378","line":5,"column":8,"nodeType":"371","messageId":"372","endLine":5,"endColumn":14},{"ruleId":"369","severity":1,"message":"379","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":15},{"ruleId":"369","severity":1,"message":"399","line":18,"column":10,"nodeType":"371","messageId":"372","endLine":18,"endColumn":17},{"ruleId":"369","severity":1,"message":"380","line":23,"column":11,"nodeType":"371","messageId":"372","endLine":23,"endColumn":16},{"ruleId":"369","severity":1,"message":"381","line":23,"column":18,"nodeType":"371","messageId":"372","endLine":23,"endColumn":25},{"ruleId":"369","severity":1,"message":"383","line":23,"column":27,"nodeType":"371","messageId":"372","endLine":23,"endColumn":35},{"ruleId":"369","severity":1,"message":"373","line":2,"column":35,"nodeType":"371","messageId":"372","endLine":2,"endColumn":40},{"ruleId":"369","severity":1,"message":"377","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"398","line":3,"column":16,"nodeType":"371","messageId":"372","endLine":3,"endColumn":24},{"ruleId":"369","severity":1,"message":"400","line":5,"column":8,"nodeType":"371","messageId":"372","endLine":5,"endColumn":14},{"ruleId":"394","severity":1,"message":"401","line":49,"column":8,"nodeType":"396","endLine":49,"endColumn":47,"suggestions":"402"},{"ruleId":"369","severity":1,"message":"374","line":2,"column":18,"nodeType":"371","messageId":"372","endLine":2,"endColumn":22},{"ruleId":"369","severity":1,"message":"377","line":6,"column":10,"nodeType":"371","messageId":"372","endLine":6,"endColumn":14},{"ruleId":"369","severity":1,"message":"403","line":7,"column":10,"nodeType":"371","messageId":"372","endLine":7,"endColumn":28},{"ruleId":"369","severity":1,"message":"381","line":16,"column":13,"nodeType":"371","messageId":"372","endLine":16,"endColumn":20},{"ruleId":"369","severity":1,"message":"380","line":16,"column":22,"nodeType":"371","messageId":"372","endLine":16,"endColumn":27},{"ruleId":"394","severity":1,"message":"404","line":31,"column":8,"nodeType":"396","endLine":31,"endColumn":38,"suggestions":"405"},{"ruleId":"369","severity":1,"message":"374","line":2,"column":46,"nodeType":"371","messageId":"372","endLine":2,"endColumn":50},{"ruleId":"369","severity":1,"message":"406","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":21},{"ruleId":"394","severity":1,"message":"407","line":32,"column":8,"nodeType":"396","endLine":32,"endColumn":26,"suggestions":"408"},{"ruleId":"369","severity":1,"message":"409","line":9,"column":12,"nodeType":"371","messageId":"372","endLine":9,"endColumn":27},{"ruleId":"369","severity":1,"message":"380","line":12,"column":13,"nodeType":"371","messageId":"372","endLine":12,"endColumn":18},{"ruleId":"369","severity":1,"message":"381","line":12,"column":20,"nodeType":"371","messageId":"372","endLine":12,"endColumn":27},{"ruleId":"394","severity":1,"message":"410","line":22,"column":8,"nodeType":"396","endLine":22,"endColumn":10,"suggestions":"411"},{"ruleId":"369","severity":1,"message":"377","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"412","line":2,"column":16,"nodeType":"371","messageId":"372","endLine":2,"endColumn":26},{"ruleId":"369","severity":1,"message":"376","line":4,"column":31,"nodeType":"371","messageId":"372","endLine":4,"endColumn":37},{"ruleId":"369","severity":1,"message":"413","line":4,"column":46,"nodeType":"371","messageId":"372","endLine":4,"endColumn":50},{"ruleId":"369","severity":1,"message":"378","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":14},{"ruleId":"369","severity":1,"message":"414","line":12,"column":8,"nodeType":"371","messageId":"372","endLine":12,"endColumn":17},{"ruleId":"394","severity":1,"message":"401","line":41,"column":8,"nodeType":"396","endLine":41,"endColumn":27,"suggestions":"415"},{"ruleId":"369","severity":1,"message":"416","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"369","severity":1,"message":"376","line":3,"column":37,"nodeType":"371","messageId":"372","endLine":3,"endColumn":43},{"ruleId":"369","severity":1,"message":"417","line":5,"column":10,"nodeType":"371","messageId":"372","endLine":5,"endColumn":33},{"ruleId":"369","severity":1,"message":"379","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":15},{"ruleId":"369","severity":1,"message":"378","line":7,"column":8,"nodeType":"371","messageId":"372","endLine":7,"endColumn":14},{"ruleId":"369","severity":1,"message":"399","line":18,"column":12,"nodeType":"371","messageId":"372","endLine":18,"endColumn":19},{"ruleId":"369","severity":1,"message":"375","line":18,"column":21,"nodeType":"371","messageId":"372","endLine":18,"endColumn":31},{"ruleId":"369","severity":1,"message":"418","line":21,"column":11,"nodeType":"371","messageId":"372","endLine":21,"endColumn":19},{"ruleId":"369","severity":1,"message":"380","line":27,"column":14,"nodeType":"371","messageId":"372","endLine":27,"endColumn":19},{"ruleId":"369","severity":1,"message":"381","line":27,"column":21,"nodeType":"371","messageId":"372","endLine":27,"endColumn":28},{"ruleId":"369","severity":1,"message":"376","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":16},{"ruleId":"369","severity":1,"message":"374","line":3,"column":18,"nodeType":"371","messageId":"372","endLine":3,"endColumn":22},{"ruleId":"369","severity":1,"message":"373","line":3,"column":40,"nodeType":"371","messageId":"372","endLine":3,"endColumn":45},{"ruleId":"369","severity":1,"message":"380","line":15,"column":13,"nodeType":"371","messageId":"372","endLine":15,"endColumn":18},{"ruleId":"369","severity":1,"message":"381","line":15,"column":20,"nodeType":"371","messageId":"372","endLine":15,"endColumn":27},{"ruleId":"369","severity":1,"message":"419","line":19,"column":11,"nodeType":"371","messageId":"372","endLine":19,"endColumn":15},{"ruleId":"369","severity":1,"message":"378","line":8,"column":8,"nodeType":"371","messageId":"372","endLine":8,"endColumn":14},{"ruleId":"394","severity":1,"message":"401","line":67,"column":8,"nodeType":"396","endLine":67,"endColumn":62,"suggestions":"420"},{"ruleId":"369","severity":1,"message":"376","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":16},{"ruleId":"369","severity":1,"message":"421","line":117,"column":17,"nodeType":"371","messageId":"372","endLine":117,"endColumn":21},{"ruleId":"369","severity":1,"message":"383","line":187,"column":26,"nodeType":"371","messageId":"372","endLine":187,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":231,"column":26,"nodeType":"371","messageId":"372","endLine":231,"endColumn":34},{"ruleId":"369","severity":1,"message":"374","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"400","line":3,"column":8,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"422","line":14,"column":5,"nodeType":"371","messageId":"372","endLine":14,"endColumn":20},{"ruleId":"369","severity":1,"message":"423","line":19,"column":5,"nodeType":"371","messageId":"372","endLine":19,"endColumn":24},{"ruleId":"369","severity":1,"message":"424","line":28,"column":5,"nodeType":"371","messageId":"372","endLine":28,"endColumn":24},{"ruleId":"369","severity":1,"message":"383","line":42,"column":26,"nodeType":"371","messageId":"372","endLine":42,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":90,"column":26,"nodeType":"371","messageId":"372","endLine":90,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":131,"column":26,"nodeType":"371","messageId":"372","endLine":131,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":172,"column":26,"nodeType":"371","messageId":"372","endLine":172,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":214,"column":26,"nodeType":"371","messageId":"372","endLine":214,"endColumn":34},{"ruleId":"369","severity":1,"message":"383","line":254,"column":26,"nodeType":"371","messageId":"372","endLine":254,"endColumn":34},{"ruleId":"369","severity":1,"message":"425","line":6,"column":9,"nodeType":"371","messageId":"372","endLine":6,"endColumn":20},{"ruleId":"369","severity":1,"message":"380","line":12,"column":13,"nodeType":"371","messageId":"372","endLine":12,"endColumn":18},{"ruleId":"369","severity":1,"message":"381","line":12,"column":20,"nodeType":"371","messageId":"372","endLine":12,"endColumn":27},{"ruleId":"369","severity":1,"message":"426","line":12,"column":29,"nodeType":"371","messageId":"372","endLine":12,"endColumn":33},{"ruleId":"369","severity":1,"message":"377","line":2,"column":9,"nodeType":"371","messageId":"372","endLine":2,"endColumn":13},{"ruleId":"369","severity":1,"message":"427","line":4,"column":10,"nodeType":"371","messageId":"372","endLine":4,"endColumn":21},{"ruleId":"369","severity":1,"message":"425","line":6,"column":19,"nodeType":"371","messageId":"372","endLine":6,"endColumn":30},{"ruleId":"428","severity":1,"message":"429","line":42,"column":91,"nodeType":"430","messageId":"431","endLine":42,"endColumn":107},"no-native-reassign",["432"],"no-negated-in-lhs",["433"],"no-unused-vars","'ListGroup' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Card' is defined but never used.","'setMessage' is assigned a value but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'userInfo' is assigned a value but never used.","'FormContainer' is defined but never used.","'useDispatch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"434","text":"435"},{"range":"436","text":"435"},{"range":"437","text":"435"},"'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["438"],"'Redirect' is defined but never used.","'message' is assigned a value but never used.","'Rating' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isAuthenticated', and 'location'. Either include them or remove the dependency array.",["439"],"'BLOG_COMMENT_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["440"],"'CheckoutSteps' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order.id'. Either include them or remove the dependency array.",["441"],"'currentCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["442"],"'useHistory' is defined but never used.","'Form' is defined but never used.","'SearchBox' is defined but never used.",["443"],"'Component' is defined but never used.","'LOAD_USER_PROFILE_RESET' is defined but never used.","'dispatch' is assigned a value but never used.","'post' is assigned a value but never used.",["444"],"'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'NavDropdown' is defined but never used.","'user' is assigned a value but never used.","'useSelector' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",[714,714]," rel=\"noreferrer\"",[878,878],[1048,1048],{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"459","text":"460"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, location, match, successProductReview]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, blogCommentSuccess, match.params.id]",{"range":"463","text":"464"},"Update the dependencies array to be: [success, history, order.id, dispatch]",{"range":"465","text":"466"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, keyword, location]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]",{"range":"471","text":"472"},[446,448],"[checkAuthenticated, load_user]",[1821,1860],"[dispatch, history, isAuthenticated, location, match, successProductReview]",[1111,1141],"[dispatch, blogCommentSuccess, match.params.id]",[1144,1162],"[success, history, order.id, dispatch]",[747,749],"[dispatch, match.params.id]",[1452,1471],"[dispatch, history, isAuthenticated, keyword, location]",[2469,2523],"[dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]"]