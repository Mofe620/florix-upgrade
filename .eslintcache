[{"C:\\projects\\websites\\florix\\florix-frontend\\src\\index.js":"1","C:\\projects\\websites\\florix\\florix-frontend\\src\\reportWebVitals.js":"2","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\store.js":"3","C:\\projects\\websites\\florix\\florix-frontend\\src\\App.js":"4","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\blogReducers.js":"5","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\productReducers.js":"6","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\orderReducers.js":"7","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\cartReducers.js":"8","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\authReducers.js":"9","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\userReducers.js":"10","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Header.js":"11","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Footer.js":"12","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\About.js":"13","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\SignUpScreen.js":"14","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordReset.js":"15","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Contact.js":"16","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordResetComplete..js":"17","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js":"18","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\RegisterScreen.js":"19","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\DrugStore.js":"20","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\SignInScreen.js":"21","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\UserProfile.js":"22","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Home.js":"23","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js":"24","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\ActivateAccount.js":"25","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\paymentScreen\\PaymentScreen.js":"26","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductsScreen.js":"27","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js":"28","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js":"29","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\LoginScreen.js":"30","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\shippingScreens\\ShippingScreen.js":"31","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\cartScreen\\CartScreen.js":"32","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\orderScreens\\OrderScreen.js":"33","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js":"34","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogListScreen.js":"35","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\_TextInput.js":"36","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Navigation.js":"37","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\types.js":"38","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\cartActions.js":"39","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Message.js":"40","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\CheckoutSteps.js":"41","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\SearchBox.js":"42","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\orderActions.js":"43","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\FormContainer.js":"44","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Carousel.js":"45","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Loader.js":"46","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\blogActions.js":"47","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Navbar.js":"48","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\authActions.js":"49","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\productActions.js":"50","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Rating.js":"51","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Paginate.js":"52","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Product.js":"53","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\spinners\\LoadingMain.js":"54","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\SearchProduct.js":"55","C:\\projects\\websites\\florix\\florix-frontend\\src\\constants\\orderConstants.js":"56","C:\\projects\\websites\\florix\\florix-frontend\\src\\constants\\productConstants.js":"57","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\blog\\Blog.js":"58","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\blog\\BlogCarousel.js":"59","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Sidebar.js":"60","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\contactReducer.js":"61","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\contactAction.js":"62","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\servicesScreen.js":"63","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogHomeScreen.js":"64","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\FloatingAction.js":"65","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Index.js":"66","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\storeSlider.js":"67","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\multivitamins.js":"68","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\partnership.js":"69","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\analgesics.js":"70","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\testimony.js":"71","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\antibiotics.js":"72","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\Shop.js":"73","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\index\\indexSlider.js":"74","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\TrackRecord.js":"75","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\PrescriptionForm.js":"76","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\EmergencyScreen.js":"77","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\PrescriptionForm.js":"78","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\emergency\\DeliveyForm.js":"79","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\emergency\\RequestForm.js":"80","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\emergencyorderAction.js":"81","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\EmergencyOrderVerifyScreen.js":"82","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\emergencyReducer.js":"83","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\prescriptionAction.js":"84","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\prescriptionReducer.js":"85","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductClassScreen.js":"86"},{"size":649,"mtime":1646885060000,"results":"87","hashOfConfig":"88"},{"size":362,"mtime":1646885060000,"results":"89","hashOfConfig":"88"},{"size":3285,"mtime":1655081042291,"results":"90","hashOfConfig":"88"},{"size":5991,"mtime":1655489352412,"results":"91","hashOfConfig":"88"},{"size":2622,"mtime":1646885060000,"results":"92","hashOfConfig":"88"},{"size":4580,"mtime":1655081056791,"results":"93","hashOfConfig":"88"},{"size":4068,"mtime":1646885060000,"results":"94","hashOfConfig":"88"},{"size":1476,"mtime":1646885060000,"results":"95","hashOfConfig":"88"},{"size":3254,"mtime":1646885060000,"results":"96","hashOfConfig":"88"},{"size":3916,"mtime":1646885060000,"results":"97","hashOfConfig":"88"},{"size":681,"mtime":1646885060000,"results":"98","hashOfConfig":"88"},{"size":2975,"mtime":1655702877633,"results":"99","hashOfConfig":"88"},{"size":6662,"mtime":1653257806664,"results":"100","hashOfConfig":"88"},{"size":3929,"mtime":1646885060000,"results":"101","hashOfConfig":"88"},{"size":1858,"mtime":1646885060000,"results":"102","hashOfConfig":"88"},{"size":4206,"mtime":1653258208252,"results":"103","hashOfConfig":"88"},{"size":570,"mtime":1646885060000,"results":"104","hashOfConfig":"88"},{"size":2778,"mtime":1646885060000,"results":"105","hashOfConfig":"88"},{"size":4805,"mtime":1646885060000,"results":"106","hashOfConfig":"88"},{"size":1355,"mtime":1646885060000,"results":"107","hashOfConfig":"88"},{"size":2761,"mtime":1646885060000,"results":"108","hashOfConfig":"88"},{"size":3666,"mtime":1646885060000,"results":"109","hashOfConfig":"88"},{"size":3852,"mtime":1653431452401,"results":"110","hashOfConfig":"88"},{"size":13690,"mtime":1646885060000,"results":"111","hashOfConfig":"88"},{"size":1577,"mtime":1646885060000,"results":"112","hashOfConfig":"88"},{"size":2198,"mtime":1646885060000,"results":"113","hashOfConfig":"88"},{"size":3714,"mtime":1646885060000,"results":"114","hashOfConfig":"88"},{"size":4430,"mtime":1653431760922,"results":"115","hashOfConfig":"88"},{"size":5869,"mtime":1646885060000,"results":"116","hashOfConfig":"88"},{"size":3375,"mtime":1646885060000,"results":"117","hashOfConfig":"88"},{"size":3730,"mtime":1646885060000,"results":"118","hashOfConfig":"88"},{"size":6913,"mtime":1646885060000,"results":"119","hashOfConfig":"88"},{"size":10445,"mtime":1646885060000,"results":"120","hashOfConfig":"88"},{"size":3897,"mtime":1653431845964,"results":"121","hashOfConfig":"88"},{"size":2000,"mtime":1653431957179,"results":"122","hashOfConfig":"88"},{"size":550,"mtime":1646885060000,"results":"123","hashOfConfig":"88"},{"size":585,"mtime":1646885060000,"results":"124","hashOfConfig":"88"},{"size":7575,"mtime":1655080464857,"results":"125","hashOfConfig":"88"},{"size":1322,"mtime":1646885060000,"results":"126","hashOfConfig":"88"},{"size":228,"mtime":1646885060000,"results":"127","hashOfConfig":"88"},{"size":1866,"mtime":1646885060000,"results":"128","hashOfConfig":"88"},{"size":984,"mtime":1646885060000,"results":"129","hashOfConfig":"88"},{"size":6588,"mtime":1646885060000,"results":"130","hashOfConfig":"88"},{"size":378,"mtime":1646885060000,"results":"131","hashOfConfig":"88"},{"size":1004,"mtime":1646885060000,"results":"132","hashOfConfig":"88"},{"size":458,"mtime":1646885060000,"results":"133","hashOfConfig":"88"},{"size":3809,"mtime":1646885060000,"results":"134","hashOfConfig":"88"},{"size":2760,"mtime":1646885060000,"results":"135","hashOfConfig":"88"},{"size":9277,"mtime":1646885060000,"results":"136","hashOfConfig":"88"},{"size":6978,"mtime":1655081062862,"results":"137","hashOfConfig":"88"},{"size":1886,"mtime":1646885060000,"results":"138","hashOfConfig":"88"},{"size":867,"mtime":1646885060000,"results":"139","hashOfConfig":"88"},{"size":1240,"mtime":1646885060000,"results":"140","hashOfConfig":"88"},{"size":469,"mtime":1646885060000,"results":"141","hashOfConfig":"88"},{"size":1328,"mtime":1646885060000,"results":"142","hashOfConfig":"88"},{"size":1240,"mtime":1646885060000,"results":"143","hashOfConfig":"88"},{"size":1502,"mtime":1646885060000,"results":"144","hashOfConfig":"88"},{"size":669,"mtime":1646885060000,"results":"145","hashOfConfig":"88"},{"size":883,"mtime":1646885060000,"results":"146","hashOfConfig":"88"},{"size":3877,"mtime":1646885060000,"results":"147","hashOfConfig":"88"},{"size":504,"mtime":1646885060000,"results":"148","hashOfConfig":"88"},{"size":953,"mtime":1646885060000,"results":"149","hashOfConfig":"88"},{"size":1779,"mtime":1653258191992,"results":"150","hashOfConfig":"88"},{"size":2678,"mtime":1653431843762,"results":"151","hashOfConfig":"88"},{"size":473,"mtime":1651809551045,"results":"152","hashOfConfig":"88"},{"size":3653,"mtime":1655681915606,"results":"153","hashOfConfig":"88"},{"size":1831,"mtime":1653441919986,"results":"154","hashOfConfig":"88"},{"size":3089,"mtime":1653443110849,"results":"155","hashOfConfig":"88"},{"size":1823,"mtime":1653441366068,"results":"156","hashOfConfig":"88"},{"size":3485,"mtime":1655344848629,"results":"157","hashOfConfig":"88"},{"size":2575,"mtime":1653443537452,"results":"158","hashOfConfig":"88"},{"size":2864,"mtime":1653443041475,"results":"159","hashOfConfig":"88"},{"size":4545,"mtime":1655702779233,"results":"160","hashOfConfig":"88"},{"size":2971,"mtime":1655698621595,"results":"161","hashOfConfig":"88"},{"size":1226,"mtime":1655674209952,"results":"162","hashOfConfig":"88"},{"size":768,"mtime":1655010112972,"results":"163","hashOfConfig":"88"},{"size":2304,"mtime":1654949706639,"results":"164","hashOfConfig":"88"},{"size":4276,"mtime":1655702324679,"results":"165","hashOfConfig":"88"},{"size":1753,"mtime":1654658698865,"results":"166","hashOfConfig":"88"},{"size":9198,"mtime":1654949709171,"results":"167","hashOfConfig":"88"},{"size":1553,"mtime":1654946462654,"results":"168","hashOfConfig":"88"},{"size":2521,"mtime":1654949760932,"results":"169","hashOfConfig":"88"},{"size":561,"mtime":1654566899872,"results":"170","hashOfConfig":"88"},{"size":1203,"mtime":1655702072597,"results":"171","hashOfConfig":"88"},{"size":613,"mtime":1655063684335,"results":"172","hashOfConfig":"88"},{"size":3042,"mtime":1655348186459,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"xqa2wn",{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"176"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"176"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"176"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"176"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"176"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"176"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"176"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"176"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"176"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"176"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"176"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"176"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"176"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"176"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"176"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"176"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"176"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"176"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"176"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"176"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"176"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"176"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"176"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"176"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"334","usedDeprecatedRules":"176"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"176"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"176"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"176"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"176"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"176"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"176"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"176"},"C:\\projects\\websites\\florix\\florix-frontend\\src\\index.js",[],["384","385"],"C:\\projects\\websites\\florix\\florix-frontend\\src\\reportWebVitals.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\store.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\App.js",["386","387","388","389"],"import { BrowserRouter as Router, Route } from 'react-router-dom'\nimport {Helmet} from \"react-helmet\";\nimport './customstyles/main.scss';\nimport './App.css';\nimport Header from './components/global/Header'\nimport Footer from './components/Footer'\n\nimport Home from './screens/baseScreens/Home';\nimport About from './screens/baseScreens/About';\nimport Contact from './screens/baseScreens/Contact';\nimport RegisterScreen from './screens/authScreens/RegisterScreen';\nimport SignUpScreen from './screens/authScreens/SignUpScreen';\nimport  SignInScreen  from './screens/authScreens/SignInScreen';\nimport LoginScreen from './screens/authScreens/LoginScreen';\nimport PasswordReset from './screens/authScreens/PasswordReset';\nimport PasswordResetConfirm from './screens/authScreens/PasswordResetConfirm'\nimport PasswordResetComplete from './screens/authScreens/PasswordResetComplete.'\nimport UserProfile from './screens/authScreens/UserProfile';\nimport ActivateAccount from './screens/authScreens/ActivateAccount';\n\n\n//import Carousel from './components/Carousel';\n//import navbar from './components/global/_global/_navbar';\nimport servicesScreen from './screens/baseScreens/servicesScreen';\nimport DrugStore from './screens/productScreens/DrugStore';\nimport ProductDetailsScreen from \"./screens/productScreens/ProductDetailsScreen\"\nimport ProductsScreen from './screens/productScreens/ProductsScreen'\n//import ProductDetailsScreen from './screens/ProductDetailsScreen'\nimport CartScreen from './screens/cartScreen/CartScreen'\n//import LoginScreen from './screens/LoginScreen'\n//import RegisterScreen from './screens/RegisterScreen'\n//import ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/shippingScreens/ShippingScreen'\nimport PaymentScreen from './screens/paymentScreen/PaymentScreen'\nimport PlaceOrderScreen from './screens/orderScreens/PlaceOrderScreen'\nimport OrderScreen from './screens/orderScreens/OrderScreen'\n/*import UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/orderScreens/OrderListScreen'\n*/\nimport BlogHomeScreen from './screens/blogscreen/BlogHomeScreen';\nimport BlogListScreen from './screens/blogscreen/BlogListScreen';\nimport BlogDetailsScreen from './screens/blogscreen/BlogDetailsScreen';\nimport BlogCategoryScreen from './screens/blogscreen/BlogCategoryScreen';\nimport Slider1 from './components/sliders/shop/storeSlider';\nimport Index from './screens/baseScreens/Index';\nimport Shop from './screens/productScreens/Shop';\nimport PrescriptionFormSreen from './screens/baseScreens/PrescriptionForm';\nimport EmergencyScreen from './screens/baseScreens/EmergencyScreen';\nimport EmergencyOrderVerifyScreen from './screens/baseScreens/EmergencyOrderVerifyScreen';\nimport PrescriptionForm from './components/PrescriptionForm';\nimport ProductClassScreen from './screens/productScreens/ProductClassScreen';\n \nfunction App() {\n  return (\n    <Router>\n      <main className=\"py-3\">\n      <Helmet>\n        <title>Florix Healthcare</title>\n        <meta name=\"description\" content=\"Providing tech driven logistics solution\" />\n    </Helmet>\n        <>\n          <Route path='/shop' component={Shop} />\n          <Route path='/signup' component={SignUpScreen} />\n          <Route path='/test/index' component={Index} exact />\n          <Route path='/test/prescription' component={PrescriptionFormSreen} />\n          <Route path='/test/emergency' component={EmergencyScreen} exact />\n          <Route path='/test/prescription_form/upload' component={PrescriptionForm} />\n          <Route path='/signin' component={SignInScreen} />\n          <Route exact path=\"/reset-password\" component={PasswordReset} />\n          <Route exact path='/password/reset/confirm/:uid/:token' component={PasswordResetConfirm} />\n          <Route exact path='/activate/:uid/:token' component={ ActivateAccount} />\n          <Route exact path=\"/reset-password-complete\" component={PasswordResetComplete} />\n          \n          <Route path='/' component={Home} exact />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path='/services' component={servicesScreen} />\n          <Route path='/drugstore' component={DrugStore} />\n          <Route path='/products' component={ProductsScreen} />\n          <Route path='/med/therapeutic_class/:id' component={ProductClassScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route exact path=\"/profile\" component={UserProfile} />          \n        \n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductDetailsScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          \n\n          <Route path='/blog/posts' component={BlogListScreen} />\n          <Route path='/post/:id' component={BlogDetailsScreen} />\n          <Route path='/blog/categories' component={BlogHomeScreen} />\n          <Route path='/blog/category/:id' component={BlogCategoryScreen} />\n\n          {/*<Route path='/navbar' component={navbar} exact/> \n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          */}\n\n        </>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\blogReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\productReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\orderReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\cartReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\authReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\userReducers.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Header.js",["390","391"],"import React, { Fragment, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../../redux/actions/authActions'\nimport Navigation from './Navigation';\nimport { Container } from 'react-bootstrap';\n\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <Fragment>\n            <Navigation />\n            <Container >\n                {children}\n            </Container>\n        </Fragment>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Footer.js",["392","393","394","395","396"],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\About.js",["397"],"import React from 'react'\nimport {Helmet} from \"react-helmet\";\nimport { Card, Col, Container, Image, ListGroup, Row } from 'react-bootstrap'\nimport FloatingAction from '../../components/FloatingAction';\nimport Header from '../../components/global/Header';\nimport Footer from '../../components/Footer';\n\nconst About = () => {\n    return (\n        <>\n        <Header />\n            <Container className=\"about content\">\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>About Us</title>\n                </Helmet>\n                <div>\n                    <h2 style={{fontWeight: \"bold\", fontSize:\"2.5rem\",marginBottom:\"10\", color:\"\"}}>Who are we?</h2>\n                    <p className=\"about__paragraph\" >\n                        Flo-log, an initiative of Florix Healthcare LTD, is a tech-driven health care solution that seeks to change the narrative of the African healthcare sector in terms of product procurement and logistics. We offer an e-marketplace solution to healthcare professionals for the remote purchase of medicines and medical products from accredited distributors, with an accompanying dedicated healthcare logistics system.\n                    </p>\n                </div>\n                <Row className=\"about__goals\">\n                    <Col md={4} className=\"about__goal\">\n                        <Card>\n                            <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Our Vision</Card.Header>\n                            <Card.Body>\n                                <Card.Text>Healthcare for every African</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={4} className=\"about__goal\">\n                        <Card>\n                            <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Our Mission</Card.Header>\n                            <Card.Body>\n                                <Card.Text>To provide Africans with prompt access to quality and affordable healthcare</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={4}>\n                        <Card className=\"about__goal\">\n                            <Card.Header style={{fontSize:\"1.6rem\", backgroundColor:\"#9DCAE5\", color:\"white\"}}>Core Values</Card.Header>\n                            <Card.Body>\n                                <Card.Text>Trust</Card.Text>\n                                <Card.Text>Innovation</Card.Text>\n                                <Card.Text>Excellence</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n            \n                </Row>\n                <div>\n                    <hr />\n                    <h2 style={{fontWeight: \"bold\", fontSize:\"2.5rem\", marginTop:\"50px\",marginBottom:\"50px\", color:\"\"}}>Meet the Founders</h2>\n                <Row className=\"about__team\">\n                    <Col md={4} className=\"about__team-members\">\n                        <Row>\n                            <Col md={4} lg={4}>\n                                <Image className='about__team__img' src='/assets/images/pharmAndrew.jpg' roundedCircle fluid />\n                            </Col>\n                            <Col md={8}>\n                                <div className=\"mt-4\">\n                                    <h3 style={{fontWeight:\"bold\"}}>Andrew Akhabue</h3>\n                                    <h4 style={{color:\"red\"}}>Co-founder and CEO</h4>\n                                    <hr />\n                                    <p>Andrew Aizenose Akhabue, a Pharmacist with a Doctor of Pharmacy degree from the University of Benin. Leadership enthusiast and Trainer, with core interests in healthcare innovation and education. He leads Florix Healthcare Limited as its Chief Executive Officer. Prior to his Florix journey, he was branch manager for a retail pharmacy chain based in Benin city.</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md={4} className=\"about__team-members\">\n                        <Row>\n                            <Col md={4} lg={4} >\n                                <Image className='about__team__img' src='/assets/images/Joy.jpg' roundedCircle fluid />\n                            </Col>\n                            <Col md={8}>\n                                <div className=\"mt-4\">\n                                    <h3 style={{fontWeight:\"bold\"}}>Joy Chidinma Enwerem</h3>\n                                    <h4 style={{color:\"red\"}}>Head, Human Resource and Strategy</h4>\n                                    <hr />\n                                    <p>\n                                        Joy Chidimma Enwerem, Pharmacist, Content Editor, and Strategist, with interests in leading an innovative change in the Nigerian Healthcare space. She graduated from the University of Benin with a Doctor of Pharmacy degree. She currently is the Chief of Strategy and Human Resource at Florix Healthcare Limited.\n                                    </p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md={4} className=\"about__team-members\">\n                        <Row>\n                            <Col md={4} lg={4} className=''>\n                                <Image className='about__team__img' src='/assets/images/Raphael.jpg' fluid />\n                            </Col>\n                            <Col md={8}>\n                                <div className=\"mt-4\">\n                                    <h3 style={{fontWeight:\"bold\"}}>Raphael Chimezie Odoh</h3>\n                                    <h4 style={{color:\"red\"}}>Chief Innovation Officer</h4>\n                                    <hr />\n                                    <p>Raphael Chiemezie Odoh, a Pharmacist, Creative Designer, and Publicist, with key interests in Sales and Marketing. He bagged his Doctor of Pharmacy degree from the University of Benin. He is currently the Chief Innovation Officer at Florix Healthcare Limited, owners of FLO-LOG.</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                </div>\n                <FloatingAction />\n            </Container>\n        <Footer />\n        </>\n    )\n}\n\nexport default About\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\SignUpScreen.js",["398","399","400","401","402","403","404","405","406"],"import React, { useState, useEffect } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Container, Button } from 'react-bootstrap'\nimport {Helmet} from \"react-helmet\";\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { signup } from '../../redux/actions/authActions'\nimport { Formik, Form } from 'formik';\nimport { TextField } from './_TextInput';\nimport * as Yup from 'yup';\n\nconst SignUpScreen = ({ signup, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [username, setUsername] = useState([])\n  const [email, setEmail] = useState([])\n  const [password, setPassword] = useState([])\n  const [re_password, setRe_password] = useState([])\n  const [message, setMessage] = useState('')\n\n\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const { error, loading, userInfo } = auth\n\n  const submitHandler = (e) => {\n      e.preventDefault();\n      if (password !== re_password) {\n          setMessage('Both passwords must be the same')\n      } else {\n          dispatch(signup(username, email, password, re_password));\n          setAccountCreated(true);\n      }\n  }\n  \n  const validate = Yup.object().shape({\n    username: Yup.string()\n      .max(15, 'Must be 20 characters or less')\n      .required('Username is required'),\n    email: Yup.string()\n      .email('Email is invalid')\n      .required('Email is required'),\n    password: Yup.string()\n      .min(6, \"A minimum of 6 characters is required\")\n      .required('Password is required'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Password must match')\n      .required('Confirm your password'),\n  })\n  \n  if (accountCreated) {\n      return <Redirect to='/login' />\n  }\n\n  if (isAuthenticated){\n      return <Redirect to=\"/\" />\n      }\n\n\n\n  return (\n    <Container className=\"content auth-container\">\n         <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Create your Flolog Account</title>\n            </Helmet>\n      <Formik\n        initialValues={{\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        }}\n        validationSchema={validate}\n        onSubmit={values => {\n          console.log(values)\n        }}\n      >\n        {({errors, touched}) => (\n          <div>\n            <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\n            <Form onSubmit={submitHandler}>\n              <TextField \n                name=\"username\" \n                label=\"Username\"\n                type=\"text\" \n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                />\n              <TextField \n                name=\"email\" \n                label=\"Email\"\n                type=\"email\" \n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                />\n              <TextField \n                name=\"password\" \n                label=\"Password\"\n                type=\"password\" \n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                />\n              <TextField \n                name=\"confirmPassword\" \n                label=\"Confirm Password\"\n                type=\"password\" \n                value={re_password}\n                onChange={(e) => setRe_password(e.target.value)}\n                />\n              <button className=\"btn btn-primary mt-3\" type=\"submit\">Register</button>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {signup}) (SignUpScreen)","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordReset.js",["407"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { reset_password } from '../../redux/actions/authActions';\n\nconst PasswordReset = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [email, setEmail] = useState('')\n\n\n    //const dispatch = useDispatch()\n    \n\n    const submitHandler = e => {\n        e.preventDefault();\n        reset_password(email)\n        //dispatch(reset_password(email));\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <Container className='auth-container '>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Reset Password</title>\n            </Helmet>\n            <div className=' auth-header text-center'>\n                <p className=\"auth-base\"> Reset password</p>\n            </div>\n            <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                    <Form.Control \n                        className=\"auth-input search-ppty\" \n                        type=\"email\" \n                        placeholder=\"example@email.com\" \n                        name='email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                        />\n                </Form.Group>\n                <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\n            </Form>\n            \n        </Container>\n    )\n}\n\n\nexport default connect(null, { reset_password })(PasswordReset);\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Contact.js",["408","409","410","411"],"import React, {useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport { contactUs } from '../../redux/actions/contactAction';\nimport {Helmet} from \"react-helmet\";\nimport Footer from '../../components/Footer';\nimport Header from '../../components/global/Header';\n\nconst Contact = () => {\n    const [name, setname] = useState([])\n    const [email, setEmail] = useState([])\n    const [subject, setSubject] = useState([])\n    const [message, setMessage] = useState([])\n    const [alert, setAlert] = useState('')\n\n    const contact = useSelector(state => state.contact)\n    const { error, loading, contat_us } = contact\n    const dispatch = useDispatch()\n    const submitHandler = e => {\n        e.preventDefault();\n        console.log(name)\n        dispatch(contactUs(name, email, subject, message));\n        setAlert(\"Welcome! Click on the link sent to your email to activate your account\")\n        \n    };\n    console.log(subject)\n    return (\n        <>\n        <Header />\n        <Container className=\"content auth-container\">\n               <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Contact Us</title>\n            </Helmet>\n                <div className=\"contact\">\n                    <Form classNam=\"auth-form\" onSubmit={submitHandler}>\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\n                            <Form.Control \n                                required\n                                style={{backgroundColor:\"white\"}}\n                                className=\"contact-input\" \n                                type=\"name\" \n                                placeholder=\"Name\" \n                                value={name}\n                                onChange={(e) => setname(e.target.value)}\n                        \n                                />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\n                            <Form.Control \n                                required\n                                style={{backgroundColor:\"white\"}}\n                                className=\"contact-input\" \n                                type=\"email\" \n                                placeholder=\"Enter Email\" \n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                              \n                                />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"subject\">\n                            <Form.Control \n                                required\n                                style={{backgroundColor:\"white\"}}\n                                className=\"contact-input\" \n                                type=\"text\" \n                                placeholder=\"Subject\" \n                                value={subject}\n                                onChange={(e) => setSubject(e.target.value)}\n                          \n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"message\">\n                            <Form.Control \n                                required\n                                style={{backgroundColor:\"white\"}}\n                                as=\"textarea\"\n                                cols=\"15\"\n                                className=\"contact-input\" \n                                type=\"text\" \n                                placeholder=\"Message\" \n                                value={message}\n                                onChange={(e) => setMessage(e.target.value)}\n                          \n                            />\n                        </Form.Group>\n                        <div className='d-grid gap-2' size=\"lg\">\n                            <Button className=\"contact-input\" type='submit' variant='primary'>Submit</Button>\n                        </div>\n                    </Form>\n                </div>\n                \n    </Container>\n    <Footer />\n    </>\n    )\n}\n\nexport default Contact\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordResetComplete..js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js",["412"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { connect, useDispatch } from 'react-redux';\nimport { reset_password_confirm } from '../../redux/actions/authActions';\n\nconst PasswordResetConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [new_password, setNew_password] = useState('')\n    const [re_new_password, setRe_new_password] = useState('')\n\n    //const dispatch = useDispatch()\n\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n        reset_password_confirm(uid, token, new_password, re_new_password)\n        //dispatch(reset_password_confirm(uid, token, new_password, re_new_password));\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <Container className=' auth-container pt-4'>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Password Reset Confirm</title>\n            </Helmet>\n                <div className=' auth-header text-center'>\n                    <p className=\"auth-base\"> Enter a new password</p>\n                </div>\n                <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Control \n                            className=\"auth-input search-ppty\" \n                            type=\"password\" \n                            placeholder=\"Password\" \n                            value={new_password}\n                            onChange={(e) => setNew_password(e.target.value)}\n                            minLength='6'\n                            required\n                            />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Control \n                            className=\"auth-input search-ppty\" \n                            type=\"password\" \n                            placeholder=\"Password\" \n                            value={re_new_password}\n                            onChange={(e) => setRe_new_password(e.target.value)}\n                            minLength='6'\n                            required\n                            />\n                    </Form.Group>\n                    <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\n                </Form>\n    </Container>\n    )\n}\n\nexport default connect(null, { reset_password_confirm })(PasswordResetConfirm);\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\RegisterScreen.js",["413","414","415"],"import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport {Helmet} from \"react-helmet\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { signup } from '../../redux/actions/authActions'\nimport swal from 'sweetalert';\n\nfunction RegisterScreen({ signup, isAuthenticated }) {\n\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [username, setUsername] = useState([])\n    const [email, setEmail] = useState([])\n    const [password, setPassword] = useState([])\n    const [re_password, setRe_password] = useState([])\n    const [message, setMessage] = useState('')\n\n    const auth = useSelector(state => state.auth)\n    const { error, loading, userInfo } = auth\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(username, email, password, re_password);\n            setAccountCreated(true);\n            setMessage(\"Welcome! Click on the link sent to your email to activate your account\")\n        }\n    };\n    \n    \n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    if (isAuthenticated){\n        return <Redirect to=\"/\" />\n        }\n    return (\n        <Container className='content auth-container'>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Create your Flolog Account</title>\n            </Helmet>\n            <div className=\"auth-header text-center mb-4\">\n                <h2 className=\"auth-header\">Sign Up</h2>\n                <p>Add your deatils to sign up</p>\n            </div>\n            {/* {message && <Message variant='success'>{message}</Message>} */}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n                    <Form className=\"auth-form\" onSubmit={submitHandler}>\n                        <Form.Group className=\"mb-3\" controlId='name'>\n                            <Form.Control \n                                className=\"auth-input search-ppty\" \n                                required\n                                minLength='6'\n                                type=\"name\" \n                                placeholder=\"Username\" \n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                                />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId='email'>\n                            <Form.Control\n                                required \n                                className=\"auth-input search-ppty\" \n                                type=\"email\" \n                                placeholder=\"Email\" \n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                \n                                />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\n                            <Form.Control \n                                className=\"auth-input search-ppty\" \n                                type=\"password\" \n                                placeholder=\"Password\" \n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                \n                                />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"passwordConfirm\">\n                            <Form.Control \n                                className=\"auth-input search-ppty\" \n                                type=\"password\" \n                                placeholder=\"Confirm Password\" \n                                value={re_password}\n                                onChange={(e) => setRe_password(e.target.value)}\n                                />\n                        </Form.Group>\n                        <Button type=\"submit\" className=\"auth-button\">Sign Up</Button>\n                    </Form>\n                    <Row className=\"p-2\">\n                        <Col>\n                            <div className=\"\"> Already have an account? <Link to=\"/login\">Login</Link></div>\n                        </Col>\n                        <Col>\n                            \n                        </Col>\n                    </Row>\n        </Container>\n        \n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n\nexport default connect(mapStateToProps, {signup}) (RegisterScreen)","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\DrugStore.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\SignInScreen.js",["416","417","418","419","420","421"],"import React, { useState} from 'react'\nimport { Container, Button} from 'react-bootstrap'\nimport {Helmet} from \"react-helmet\";\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { login } from '../../redux/actions/authActions'\nimport { Formik, Form } from 'formik';\nimport { TextField } from './_TextInput';\nimport * as Yup from 'yup';\n\nconst SignInScreen = ({ isAuthenticated }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    \n    const dispatch = useDispatch()\n    const {state: {from = \"/\"} = {} } = useLocation();\n    \n    const auth = useSelector(state => state.auth)\n    const { error, loading } = auth\n        \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n    \n    if (isAuthenticated){\n        return <Redirect to={from} />\n    }\n\n\n    const validate = Yup.object({\n        email: Yup.string()\n        .email('Email is invalid')\n        .required('Email is required'),\n        password: Yup.string()\n        .min(6, 'Password must be at least 6 charaters')\n        .required('Password is required'),\n    })\n    return (\n        <Container className=\"content auth-container\">\n               <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Sign In</title>\n            </Helmet>\n        <Formik\n            initialValues={{\n            email: '',\n            password: '',\n            }}\n            validationSchema={validate}\n            onSubmit={values => {\n            }}\n        >\n            {formik => (\n            <div>\n                <h1 className=\"my-4 font-weight-bold .display-4\">Sign In</h1>\n                <Form onSubmit={submitHandler}>\n                <TextField  \n                    name=\"email\" \n                    type=\"email\" \n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n                <TextField \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Enter Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    />\n                <button className=\"btn btn-primary mt-3\" type=\"submit\">Login</button>\n                </Form>\n            </div>\n            )}\n        </Formik>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \nexport default connect(mapStateToProps, {login}) (SignInScreen)","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\UserProfile.js",["422","423","424","425","426","427","428","429","430","431"],"import React, { Component, useState, useEffect } from 'react'\nimport {useDispatch, useSelector, connect} from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { LOAD_USER_PROFILE_RESET } from '../../redux/actions/types'\nimport Message from '../../components/Message'\nimport Loader from '../../components/Loader'\nimport { load_user_profile } from '../../redux/actions/authActions'\n\nfunction UserProfile({location, history, isAuthenticated}) {\n    \n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [company, setCompany] = useState('')\n    const [image, setImage] = useState('')\n    const [telephone, setTelephone] = useState('')\n  \n    const [message, setMessage] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const auth = useSelector(state => state.auth)\n    const { user } = auth\n    \n    const profileInfo = useSelector(state => state.profileInfo)\n    const {  error, loading, userInfo } = profileInfo\n    console.log(userInfo)\n    useEffect(() => {\n        if (!isAuthenticated) {\n            history.push('/login')\n        } else {\n                setUsername(user.username)\n                setEmail(user.email)\n                setImage(userInfo.image)\n                setCompany(userInfo.company)\n                setTelephone(userInfo.telephone)\n            }\n        \n    }, [history, isAuthenticated, userInfo, user])\n    return (\n        <Container className='content'>\n               <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Profle</title>\n            </Helmet>\n            <Row className=\"\">\n                <h1 className=\"profile-header\">{company} profile</h1>\n                <Col md={3} className=\"\">\n                    <div className=\"\">\n                            <img className='profile-img img-fluid rounded-circle  mt-4 mb-4' src={image}  alt=''/>\n                            <p><Link href=\"/\">Edit profile</Link></p>\n                    </div>\n                </Col>\n                <Col md={8}>\n                    <Form className=\"mt-4\">\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                            <Form.Control className=\"auth-input\" type=\"name\" value={username} disabled/>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                            <Form.Control className=\"auth-input\" type=\"name\" value={email} disabled/>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                            <Form.Control className=\"auth-input\" type=\"name\"   value={company ? company : \" Your company/organization name?\"  } />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                            <Form.Control className=\"auth-input\" type=\"email\" value={telephone ? telephone : \" Mobile/telephone no.\"} />\n                        </Form.Group>\n                        {/*<Button className=\"auth-button btn btn-block w-100\" variant=\"primary\" value=\"reset\"> Save</Button>*/}\n                    </Form>\n                </Col>\n            </Row>\n                <div md={6}  className=\"mt-4\">\n                    <h2>My Order History</h2>\n                </div>\n        \n    </Container>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {load_user_profile}) (UserProfile)\n\n\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Home.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js",["432","433"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { Link, useLocation } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container } from 'react-bootstrap'\nimport Rating from '../../components/Rating'\nimport Message from '../../components/Message'\nimport LoadingMain from '../../components/spinners/LoadingMain'\nimport { listProductDetails, createProductReview } from '../../redux/actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\n\nfunction ProductScreen({ match, history, isAuthenticated }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n \n    const auth = useSelector(state => state.auth)\n    const { user  } = auth\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            if (successProductReview) {\n                setRating(0)\n                setComment('')\n                dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n            }\n            dispatch(listProductDetails(match.params.id))\n        }  \n    }, [dispatch, match, successProductReview])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(qty <=e.target.value <=product.countInStock && qty > 0){\n               console.log(qty)\n                history.push(`/cart/${match.params.id}?qty=${qty}`)\n                console.log(qty)\n        }else{\n            alert(\"Insifficient Quantity in Stock\")\n            }\n    }\n\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div className=\"product mx-4\" style={{marginTop:\"70px\"}}>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>{product.name}</title>\n            </Helmet>\n            <Container className=''>\n            {loading ?\n                <LoadingMain />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={4} className=\"\">\n                                    <Image src={product.image} alt={product.name} className=\"product__details__img\" fluid />   \n                                </Col>\n                                <Col md={4}>\n                                    <div>\n                                        <h4 className=\"product__name mt-3\">Generic Name: {product.name}</h4>\n                                        <p>Brand: {product.brand}  </p>\n                                        <p>Dosage form: {product.dosageForm} </p>\n                                        <p>Strength: {product.strength}</p>\n                                        <p> Description: {product.description} </p>\n                                    \n                                        \n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Card className=\"product__details__card\">\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <p className=\"product__price\">&#8358; {product.price}</p>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' \n                                                        \n                                                        \n                                                        : <p className='product__oos'>Out of Stock</p>}\n                                                    </Col>\n                                                </Row>\n                                                 <ListGroup.Item>\n                                                {product.countInStock > 0 ? \n                                                       <Form onSubmit ={handleSubmit}>\n                                                       <Form.Control\n                                                           style={{backgroundColor:\"white\", height:\"3rem\"}}\n                                                           type=\"number\"\n                                                           min=\"1\"\n                           \n                                                           placeholder='Enter quantity'\n                                                           max={product.countInStock} \n                                                           onChange= {e=>setQty(e.target.value)}\n                                                         \n                                                       >\n                                                           \n\n                                                       </Form.Control>\n                                                       \n                                                       <div className=\"d-grid gap-2 pt-2\">\n                                                       <Button\n                                                       \n                                                       size=\"lg\"\n                                                       disabled={product.countInStock === 0}\n                                                       type=\"submit\">\n                                                       Add to Cart\n                                                   </Button>\n                                                       </div>\n                                                   </Form>\n                                                \n                                                    : <div className=\"d-grid gap-2 pt-2\">\n                                                    <Button\n                                                        size=\"lg\"\n                                                        disabled={product.countInStock === 0}\n                                                        type=\"submit\">\n                                                        Add to Cart\n                                                    </Button>\n                                                    </div>}\n                                                 \n                                                </ListGroup.Item>\n                                            </ListGroup.Item>\n\n                                        \n                                               \n            \n                                        </ListGroup>\n                                       \n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"product__details__feedback\">\n                                <Col md={6}>\n                            {/*\n                                    {product.reviews.length === 0 && <Message variant='info'>Product reviews will be shown here if present</Message>}\n\n                                    \n                                        {product.reviews.map((review) => (\n                                            <div key={review.id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.dateCreated.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </div>\n                                        ))}\n                                        */}\n                                        <ListGroup variant='flush'>\n                                    \n                                        <ListGroup.Item>\n                                            \n\n                                            {loadingProductReview && <LoadingMain />}\n                                            {successProductReview && <Message variant='success'>Feedback was sent successfully</Message>}\n                                            {errorProductReview && <Message variant='warning'>Sorry, we couldn't submit your feedback. Select an option and try again OR you may have given feedback on this product before.</Message>}\n\n                                            {user ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label className=\"my-3\">Leave Feedback on this Product</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            className=\"search-ppty\"\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Option...</option>\n                                                            <option value='1'>1 - Very dissatisfied</option>\n                                                            <option value='2'>2 - Dissatisfied</option>\n                                                            <option value='3'>3 - Neither satisfied nor dissatisfied</option>\n                                                            <option value='4'>4 - Satisfied</option>\n                                                            <option value='5'>5 - Very satisfied</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label className=\"my-3\">Add a comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            col='10'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        className=\"blog__comment__button\"\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'> <Link to='/login'>Sign In</Link> to Leave a feedback on this product</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {listProductDetails }) ( ProductScreen )\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\ActivateAccount.js",["434"],"import React, { useState } from 'react';\nimport {Helmet} from \"react-helmet\";\nimport { Link, Redirect } from 'react-router-dom';\nimport {Container, Form, Button} from 'react-bootstrap'\nimport { connect, useDispatch } from 'react-redux';\nimport { verify } from '../../redux/actions/authActions';\nimport swal from 'sweetalert';\n\nconst ActivateAccount = ({ verify, match }) => {\n    const [activated, setActivated] = useState(false);\n    const dispatch = useDispatch()\n\n\n    const accountActivation = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n        dispatch(verify(uid, token));\n        setActivated(true);\n    };\n\n    if (activated) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <Container className=' auth-container pt-4'>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Activate your flolog Account</title>\n            </Helmet>\n            <Form className=\"auth-form\">\n                <Button \n                    className=\"auth-button  btn btn-block w-100\" \n                    type=\"submit\"\n                    onClick={accountActivation}\n                    >\n                        Activate Account\n                    </Button>\n            </Form>\n            <div className=\"account-activate\">\n                <p>After clicking on the activation button, you will be redirected to the homepage of our website. If not, please use this <Link to=\"/\">Link</Link></p>\n            </div>\n    </Container>\n    )\n}\n\nexport default connect(null, { verify })(ActivateAccount);","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\paymentScreen\\PaymentScreen.js",["435","436"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col, Container } from 'react-bootstrap'\nimport {Helmet} from \"react-helmet\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../../components/FormContainer'\nimport CheckoutSteps from '../../components/CheckoutSteps'\nimport { savePaymentMethod } from '../../redux/actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <Container className=\"content\" >\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>Payment method</title>\n            </Helmet>\n            <CheckoutSteps step1 step2 step3 />\n            <div className=\"d-flex justify-content-center checkout__header\" style={{paddingTop:\"15rem\" }}>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Payment Options</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <div className=\"d-grid gap-2 pt-2\">\n                    <Button size=\"lg\" type=\"submit\"> Continue</Button>\n                </div>\n            </Form>\n            </div>\n        </Container>\n    )\n}\n\nexport default PaymentScreen\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductsScreen.js",["437","438","439","440","441","442","443"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport {Helmet} from \"react-helmet\";\nimport { useDispatch, useSelector, connect} from 'react-redux'\nimport { Row, Col, Container, Button, Modal, Form } from 'react-bootstrap'\nimport Product from '../../components/Product'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport Paginate from '../../components/Paginate'\nimport ProductCarousel from '../../components/Carousel'\nimport LoadingMain from '../../components/spinners/LoadingMain'\n//import ProductCarousel from '../components/ProductCarousel'\nimport SearchBox from '../../components/SearchBox'\nimport { listProducts } from '../../redux/actions/productActions'\nimport SearchProduct from '../../components/SearchProduct'\n\n\nfunction HomeScreen({history, isAuthenticated}) {\n    \n\n    const location = useLocation()\n    const [lgShow, setLgShow] = useState(false);\n\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    const keyword = history.location.search\n    useEffect(() => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            dispatch(listProducts(keyword))\n        }  \n        \n\n    }, [dispatch, keyword])\n\n    return (\n        <div style={{marginTop:\"50px\"}}>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>All products</title>\n            </Helmet>\n            <div className=\"product__carousel\">\n                <Container className=\"py-4\">\n                    {<ProductCarousel />}\n                </Container>\n            </div>\n            <div>\n                <h3 className=\"intro-caption\">Africa's Premium Healthcare E-marketplace and Logisttics Solution</h3>\n            </div>\n            <Container className=\"product\" >\n            {loading ? <LoadingMain />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            <Col xs={6}><h3><strong>Most Recent Products</strong></h3></Col>\n                            <Col xs={6}><SearchProduct/></Col>\n                            {/*<Col xs={6} className=\"float-end\"><Button onClick={() => setLgShow(true)} variant=\"outline-info\" className=\"ms-auto\">Search Products</Button></Col> */}\n                        </Row>\n                        \n                        \n                        <Row>\n                            {products.map(product => (\n                                <Col key={product.id} xs={6} md={4} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n            \n            </Container>\n        <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\n            <Modal.Body>\n               <SearchProduct />\n            </Modal.Body>\n        </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {listProducts }) (HomeScreen)\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js",["444","445","446","447","448","449"],"import React, { useState, useEffect } from 'react';\nimport { Button, Card, Col, Container, Form, Image, Row } from 'react-bootstrap';\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { Link } from 'react-router-dom';\nimport { BLOG_COMMENT_RESET } from '../../redux/actions/types';\nimport { listBlogDetails, getBlogComment } from '../../redux/actions/blogActions';\nimport Header from '../../components/global/Header';\nimport Footer from '../../components/Footer';\n\n\nconst BlogDetailsScreen = ({match}) => {\n\n    const [comment, setComment] = useState('')\n\n    const blogDetails = useSelector(state => state.blogDetails)\n    const { loading, error, blog } = blogDetails\n    \n\n    const dispatch = useDispatch()\n\n    const  blogComment = useSelector(state => state.blogComment)\n    const { loading:blogCommentLoading, error:blogCommentError, success:blogCommentSuccess} = blogComment\n\n    useEffect(() => {\n        const slug = match.params.id;\n        if (blogCommentSuccess) {\n            setComment('')\n            \n        }\n        dispatch(listBlogDetails(slug))\n    }, [dispatch, blogCommentSuccess])\n\n    const createBlog = () => {\n        return {__html: blog.body}\n    };\n\n    const capitalizeFirstLetter = (word) => {\n        if (word)\n            return word.charAt(0).toUpperCase() + word.slice(1);\n        return '';\n    };\n\n    const submitHandler = (e) => {\n        const slug = match.params.id\n        e.preventDefault()\n        dispatch(getBlogComment(\n            slug, {\n            comment\n        }\n        ))\n    }\n    \n    return (\n        <>\n        <Header />\n        <Container className=\"content post-details\">\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Health related blog content\" />\n                <title>{blog.title}</title>\n            </Helmet>\n            <Row>\n                <Col sm={8}>\n                <div>\n                <h4 className='text-muted post-details__category'>Category: {capitalizeFirstLetter(blog.category)}</h4>\n                <Image className=\"post-details__img\" src={blog.image} fluid/>\n                <h3 className='display-2 post-details__title text-center'>{blog.title}</h3>\n                {/* <p className=\"blog__comment__date\"><i>{blog.dateCreated}</i></p> */}\n                \n                <div className='mt-5 mb-5' dangerouslySetInnerHTML={createBlog()} />\n            </div>\n            <div className=\"blog__content\">\n            <div className=\"blog__comments\">\n                \n            {!blog?.comments?.length ? (\n                    <p>No comments</p>\n                ) : (\n                <div className=\"blog__comment\">\n                    {blog?.comments.map((comment) => (\n                    <div key={comment?.id}>\n                        <p className='blog__comment__name'>{comment?.name}</p>          \n                        <p className=\"blog__comment__date\"><i>{comment?.dateCreated.substring(0, 10)}</i></p>\n                        <p className=\"blog__comment__comment\">{comment?.comment}</p>\n                    </div> \n                    ))}\n                </div>\n                )}\n            </div>\n            {blogCommentLoading && <Loader />}\n            {blogCommentSuccess && <Message variant='success'>Comment Submitted</Message>}\n            {blogCommentError && <Message variant='info'>Please login before adding a comment</Message>}\n                <Form onSubmit={submitHandler}>\n                <Form.Group controlId='comment'>\n                    <Form.Label className=\"blog__add-comment\">Comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\n                    <Form.Control\n                        as='textarea'\n                        row='5'\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary' className=\"blog__comment__button\">Add Comment</Button>\n                </Form>\n            </div>\n                </Col>\n                <Col sm={4}></Col>\n            </Row>\n            \n        </Container>\n        <Footer />\n    </>   \n   \n    );\n};\n\nexport default BlogDetailsScreen;","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js",["450","451","452"],"import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport Message from '../../components/Message'\nimport CheckoutSteps from '../../components/CheckoutSteps'\nimport {Helmet} from \"react-helmet\";\nimport { createOrder } from '../../redux/actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history, isAuthenticated }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n    const location = useLocation()\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order.id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            dispatch(createOrder({\n                orderItems: cart.cartItems,\n                shippingAddress: cart.shippingAddress,\n                paymentMethod: cart.paymentMethod,\n                itemsPrice: cart.itemsPrice,\n            }))\n        }  \n        \n    }\n    return (\n        <Container className=\"content\">\n            <Helmet>\n             <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>Place Order</title>\n            </Helmet>\n            <Row>\n                <Col md={4}>\n                     <div >\n                     \n                         <h3 className=\"me-2\" style={{marginTop:\"30px\"}}><strong>Shipping Address: </strong></h3>\n                         <p>\n                             {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                             {'  '}\n                             {cart.shippingAddress.postalCode},\n                             {'  '}\n                             {cart.shippingAddress.country}\n                         </p>\n                     </div>\n                     <div >\n                         <h3 className=\"me-2\"><strong>Payment Method: </strong></h3>\n                         <p>\n                             {cart.paymentMethod}\n                         </p>\n                     </div> \n                            <h3><strong>Order Summary</strong></h3>\n                          \n                                <Row>\n                                    <Col><p>Sub total:</p></Col>\n                                    <Col><p>&#8358; {cart.itemsPrice}</p></Col>\n                                </Row>\n                          \n                                {error && <Message variant='danger'>{error}</Message>}\n                       \n                                <div className=\"d-grid gap-2\">\n                                    <Button\n                                        type='button'\n                                        size=\"lg\"\n                                        disabled={cart.cartItems === 0}\n                                        onClick={placeOrder}\n                                    >\n                                        Place Order\n                                    </Button>\n                                </div>\n                </Col>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                No Product in the Cart\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    {/*  <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <p className=\"mx-5\"><Link to={`/product/${item.product}`}>{item.name}</Link></p>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    <p className=\"product__price\">{item.qty} X &#8358; {item.price} = &#8358; {(item.qty * item.price).toFixed(2)}</p>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {createOrder }) ( PlaceOrderScreen )","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\LoginScreen.js",["453","454","455"],"import React, { useState} from 'react'\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap'\nimport { Link, Redirect, useLocation } from 'react-router-dom'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport swal from 'sweetalert';\nimport {Helmet} from \"react-helmet\";\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { login } from '../../redux/actions/authActions'\n\nfunction LoginScreen({ isAuthenticated }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState(false)\n\n    const dispatch = useDispatch()\n    const {state: {from = \"/\"} = {} } = useLocation();\n\n    const auth = useSelector(state => state.auth)\n    const { error, loading } = auth\n    console.log(error)\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    if (isAuthenticated){\n        return <Redirect to={from} />\n      }\n\n\n    return (\n        <Container className='content auth-container'>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Sign In</title>\n            </Helmet>\n            <div className=\"\">\n            <div className=' auth-header text-center'>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            \n                <h2 className=\"auth-header\">Welcome back!</h2>\n                <p className=\"auth-base\"> Don't have an account?<Link to=\"/register\"> Sign Up</Link></p>\n            </div>\n                <Form className=\"auth-form px-4\" onSubmit={submitHandler}>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Control \n                            className=\"auth-input search-ppty\" \n                            variant=\"lg\"\n                            type=\"email\" \n                            placeholder=\"Enter Email\" \n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Control \n                            className=\"auth-input search-ppty\" \n                            type=\"password\" \n                            variant=\"lg\"\n                            placeholder=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            \n                            />\n                    </Form.Group>\n                    <Row className=\"p-2\">\n                    <Col>\n                        <div>\n                        <p>Forgotten password? <Link to=\"/reset-password\">Reset Password</Link></p>\n                        </div>\n                    </Col>\n                    <Col>\n                        <Button className=\"auth-button\" type=\"submit\">Sign In</Button>\n                    </Col>\n                </Row>\n                </Form>\n                </div>\n            \n    </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, {login}) (LoginScreen)\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\shippingScreens\\ShippingScreen.js",["456","457","458"],"import React, { useState} from 'react'\nimport { Container, Form, Button, Image, Card} from 'react-bootstrap'\nimport {Helmet} from \"react-helmet\";\nimport { Link, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckoutSteps from '../../components/CheckoutSteps'\nimport { saveShippingAddress } from '../../redux/actions/cartActions'\n\nfunction ShippingScreen({history}) {\n\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n\n    return (\n        <Container className=' auth-container content'>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>Billing address</title>\n            </Helmet>\n        <Card className=\"p-5\">\n       <CheckoutSteps step1 step2 />\n        <h2 className=\"text-center checkout__header\">Shipping Address</h2>\n         {/*} {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />} */}\n            <Form className=\"auth-form\" onSubmit={submitHandler}>\n                <Form.Group className=\"mb-3\" controlId=\"address\">\n                    <Form.Control \n                        className=\"auth-input\" \n                        type='text'\n                        placeholder='Shipping address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                        required\n                        />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"city\">\n                    <Form.Control \n                        className=\"auth-input\" \n                        type='text'\n                        placeholder='City'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                        required\n                        />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId='postalCode'>\n                    <Form.Control\n                        className=\"auth-input\"\n                        type='text'\n                        placeholder='Postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                        required\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId='country'>\n                    <Form.Control\n                        className=\"auth-input\" \n                        type='text'\n                        placeholder='Country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                        required\n                    >\n                    </Form.Control>\n                </Form.Group>\n                    <div className='d-grid gap-2'>\n                        <Button size=\"lg\" type=\"submit\">Next</Button>\n                    </div>\n            </Form>\n            </Card>\n</Container>\n    )\n}\n\nexport default ShippingScreen\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\cartScreen\\CartScreen.js",["459"],"import React, { useEffect} from 'react'\nimport { Link, Redirect, useLocation  } from 'react-router-dom'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../../components/Message'\nimport { addToCart, removeFromCart } from '../../redux/actions/cartActions'\n\nfunction CartScreen({ match, history, isAuthenticated }) {\n    const productId = match.params.id\n    const location = useLocation()\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    \n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location\n                }\n            })\n        } else{\n            history.push('/shipping')\n        }  \n    }\n    const keepShopping = ()=>{\n        history.push('/products')\n    }\n\n    return (\n        <Container className=\"content checkout\">\n            <Helmet>\n             <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                <title>Cart Page</title>\n            </Helmet>\n        <Row>\n            <Col md={8}>\n                <h2 className=\"checkout__header text-center\">Cart Page</h2>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        No Item in the Cart <Link to='/'>Go Back</Link>\n                    </Message>\n                    \n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n\n                                    {/* Item info */}\n                                    \n                                    <Row>\n                                        <Col md={2}>\n                                            {/* <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3} className=\"cart__name\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        {/* Price of item */}\n                                        <Col md={2}>\n                                            <p className=\"product__price\">&#8358; {item.price}</p>\n                                        </Col>\n\n                                        {/* Column for adjusting quantity of items in the cart  */}\n                                        \n                                        <Col md={3}>\n                                            <Form.Control\n                                                style={{backgroundColor:\"white\", height:\"3rem\"}}\n                                                type=\"number\"\n                                                min=\"1\"\n                                                max={item.countInStock} \n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                            \n\n                                            </Form.Control>\n                                        </Col>\n                                         {/* Remove Item from Cart Column */}       \n                                        <Col md={1} className=\"cart__btn\">\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                {/*<i className='fas fa-trash'></i> */}\n                                                <span className=\"product__trash\">Remove</span>\n                                            </Button>\n                                            \n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item className=\"\">\n                            <h2>{cartItems.reduce((acc, item) => acc + item.qty, 0)} Product(s) Added</h2>\n                            <p className=\"product__price\"> Sub total: &#8358; {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <div className=\"d-grid gap-2\">\n                                <Button\n                                    type='button'\n                                    size=\"lg\"\n                                    disabled={cartItems.length === 0}\n                                    onClick={checkoutHandler}\n                                >\n                                    Checkout\n                                </Button>\n                            </div>\n                        </ListGroup.Item>\n                    <ListGroup.Item>\n                        <div className=\"d-grid gap-2\">\n                            <Button\n                                type='button'\n                                size=\"lg\"\n                                variant=\"warning\"\n                                onClick={keepShopping}\n                            >\n                                Add More Products?\n                            </Button>\n                        </div>\n                    </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, { addToCart, removeFromCart}) (CartScreen)","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\orderScreens\\OrderScreen.js",["460","461"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../../components/Message'\nimport LoadingMain from '../../components/spinners/LoadingMain'\nimport Loader from '../../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../../redux/actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../../constants/orderConstants'\n\nfunction OrderScreen({ match, history, isAuthenticated }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n    const location = useLocation()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AU7EU-hk7Fhx_4JxjlZIdHXssAJDOBgt-ejulNmFSpuSPrrJPxj18G6uhouktuYEp3HRSFld1jaYfcWd'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!isAuthenticated) {\n            history.push({\n                pathname: \"/login\",\n                state: {\n                    from: location,\n                }\n            })\n        }\n\n        if (!order || successPay || order.id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <LoadingMain />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <Container className=\"content\">\n                    <Helmet>\n                     <meta charSet=\"utf-8\" />\n                        <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\n                        <title>Order products</title>\n                    </Helmet>\n                   {/* <h1>Order: {order.Id}</h1> */}\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <p><strong>Username: </strong> {order.user.username}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping Address: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n                                    <Row>\n                                        <Col sm={2}>\n                                            <p><strong>Delivery Status:</strong></p>\n                                        </Col>\n                                        <Col sm={10}>\n                                        {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.dateDelivered}</Message>\n                                    ) : (\n                                            <Message variant='info'>Not Delivered</Message>\n                                        )}\n                                        </Col>\n\n                                    </Row>\n                                    \n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <p>\n                                        <strong>Payment Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    <Row><Col sm={2}><p><strong>Payment Status:</strong></p></Col>\n                                    <Col sm={10}>{order.isPaid ? (\n                                        <Message variant='success'>Payment successfully {order.datePaid}</Message>\n                                    ) : (\n                                            <Message variant='info'>Not Paid</Message>\n                                        )}\n                                    </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                {/* <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <p><Link to={`/product/${item.product}`}>{item.name}</Link></p>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X &#8358; {item.price} = &#8358; {(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Process Transaction</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row className=\"product__price\">\n                                            <Col><p>Sub total:</p></Col>\n                                            <Col><p><strong>&#8358; {order.itemsPrice}</strong></p></Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <LoadingMain />}\n\n                                            {!sdkReady ? (\n                                                <LoadingMain />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <LoadingMain />}\n                                {isAuthenticated && isAuthenticated.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, { getOrderDetails, payOrder, deliverOrder }) (OrderScreen)\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js",["462","463","464","465"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport {Button, Container, Image} from 'react-bootstrap'\nimport { getBlogCategory } from '../../redux/actions/blogActions'\nimport Header from '../../components/global/Header';\nimport Footer from '../../components/Footer';\n\n\nconst BlogCategoryScreen = ({match}) => {\n    const [currentCategory, setCurrentCategory] = useState('');\n\n    const blogCategory = useSelector(state => state.blogCategory)\n    const { error, loading, blogs } = blogCategory\n    console.log(blogs)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const id = match.params.id\n        const category = match.params.id\n        setCurrentCategory(category);\n        dispatch(getBlogCategory(id))\n\n    }, [])\n\n\n    const getCategoryBlogs = () => {\n        let list = [];\n        let result = [];\n\n        blogs.map(blog => {\n            return list.push(\n                <div>\n                    <h2 className=\"blog__category__header\"><span className=\"d-inline-block mb-2\">Blog Category: <strong> {blog.category}</strong></span></h2>\n                    <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative\">\n                        \n                        <div className=\"col p-4 d-flex flex-column position-static\">\n                           {/* <Image className=\"post__img\" src={`${process.env.REACT_APP_API_URL}${blog.image}`} alt={blog.title} fluid/> */}\n                            <Image className=\"post__img\" src={blog.image} alt={blog.title} fluid/>\n                            <h3 className=\"mb-0\">{blog.title}</h3>\n                            <p className=\" mb-auto\">{blog.introduction}</p>\n                            <Link to={`/post/${blog.slug}`} className=\"stretched-link\"><Button className=\"blog__category__btn\">Read More</Button></Link>\n                        </div>\n                        <div className=\"col-auto d-none d-lg-block\">\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        for (let i = 0; i < list.length; i += 2) {\n            result.push(\n                <div key={i} className='row mb-2'>\n                    <div className='col-md-6'>\n                        {list[i]}\n                    </div>\n                    <div className='col-md-6'>\n                        {list[i+1] ? list[i+1] : null}\n                    </div>\n                </div>\n            )\n        }\n\n        return result;\n    };\n\n    return (\n        <>\n        <Header />\n        <Container className='content'>\n            <Helmet>\n             <meta charSet=\"utf-8\" />\n                <meta name=\"description\" content=\"Health related blog content\" />\n                <title>Blog categories</title>\n            </Helmet>\n            {/*\n            <div className='container mt-3'>\n            <h3 className='display-4'>Category: {currentCategory} </h3>\n            <div className=\"nav-scroller py-1 mb-2\">\n                <nav className=\"nav d-flex justify-content-between\">\n                    <Link className=\"p-2 text-muted\" to='/blog/category/medications'>Medications</Link>\n                    <Link className=\"p-2 text-muted\" to='/blog/category/diseases/'>Diseases</Link>\n                    <Link className=\"p-2 text-muted\" to='/category/health_news'>Health News</Link>\n                    <Link className=\"p-2 text-muted\" to='/category/medications'>Medications</Link>\n                    <Link className=\"p-2 text-muted\" to='/category/medical_equipment'>Medical Equipment</Link>\n                </nav>\n            </div>\n           \n        </div>\n            */}\n            {getCategoryBlogs()}\n        </Container>\n        <Footer />\n    </>\n    )\n}\n\nexport default BlogCategoryScreen\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogListScreen.js",["466","467","468","469","470","471","472"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Helmet} from \"react-helmet\";\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\nimport BlogCarousel from '../../components/blog/BlogCarousel'\nimport Blog from '../../components/blog/Blog'\nimport { listBlogs } from '../../redux/actions/blogActions'\nimport { getFeaturedBlog } from '../../redux/actions/blogActions'\nimport { Link } from 'react-router-dom'\nimport Footer from '../../components/Footer';\nimport Header from '../../components/global/Header';\n\n\nconst BlogListScreen = () => {\n    \n    const dispatch = useDispatch()\n    const blogList = useSelector(state => state.blogList)\n    const { error, loading, blogs } = blogList\n\n    const featuredBlog = useSelector(state => state.featuredBlog)\n    const { blog } = featuredBlog\n    const post = blog[0]\n\n    useEffect(() => {\n\n        dispatch(listBlogs())\n        dispatch(getFeaturedBlog())\n\n    }, [dispatch])\n    \n    return (\n        <>\n        <Header />\n       \n        <Container className=\"content\">\n             <meta charSet=\"utf-8\" />\n                <Helmet>\n                <meta name=\"description\" content=\"Health related blog content\" />\n                <title>Blog posts</title>\n                </Helmet>\n            <BlogCarousel />\n            <div style={{marginTop:\"20px\"}}>\n                <div className=\"post\">\n                    <h3 className=\"m-0 p-0\"><strong>Latest Posts</strong></h3>\n                    <hr />\n                    <Row>\n                            {blogs.map(blog => (\n                                <Col key={blog.id} xs={12} sm={6} md={4} lg={4} xl={3}>\n                                    <Blog blog={blog} />\n                                </Col>\n                            ))}  \n                    </Row>\n                </div>\n           \n           \n            </div>\n        </Container>\n        <Footer />\n        </>\n    )\n}\n\nexport default BlogListScreen\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\authScreens\\_TextInput.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Navigation.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\types.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\cartActions.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Message.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\CheckoutSteps.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\SearchBox.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\orderActions.js",["473","474","475","476","477","478","479","480","481"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n    CART_CLEAR_ITEMS\n} from './types'\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/orders/${order.id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\n                //Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `${process.env.REACT_APP_API_URL}/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\FormContainer.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Carousel.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Loader.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\blogActions.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Navbar.js",["482","483","484","485"],"import React, { Fragment } from 'react';\nimport {Link, NavLink} from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector, connect } from 'react-redux'\nimport { logout } from '../../redux/actions/authActions';\nimport {NavDropdown} from 'react-bootstrap';\n\n\nconst NavbarInfo = ({ toggleSidebar, isAuthenticated, logout }) => {\n\n    const auth = useSelector(state => state.auth)\n    const { error, loading, user } = auth\n  \n\n    const guestLinks = () => (\n\n        <Fragment>\n            <LinkContainer to='/login'>\n                <li className=\"navbar__auth-link\">Sign In</li>\n            </LinkContainer>\n        </Fragment>\n    );\n  \n    const authLinks = () => (\n        <Fragment>\n            <li className='navbar__list__item'>\n                <NavLink className='navbar__link' to='/products'>\n                        Drugstore\n                </NavLink>\n            </li>\n            <li className=\"navbar__auth-link\" onClick={logout}>Logout</li>\n        </Fragment>\n    );\n\n    return(\n        <nav className='navbar fixed-top shadow-sm'>\n            <div className=\"navbar__logobtn\">\n                <span className=\"navbar__logobtn__btn\" >&#9776;</span>\n        \n                <Link className='navbar__logo' exact to='/'>\n                    <img className='navbar__flolog-logo'  src='/assets/icons/logoandname.png' alt=\"brand-logo\" />\n                </Link>\n            </div>\n            <ul className='navbar__list ms-auto'>\n                <li className='navbar__list__item'>\n                    <NavLink className='navbar__link' exact to='/'>\n                        Home\n                    </NavLink>\n                </li>\n                <li className='navbar__list__item'>\n                    <NavLink className='navbar__link' to='/services'>\n                        Services\n                    </NavLink>\n                </li>\n                \n                <li className='navbar__list__item'>\n                    <NavLink className='navbar__link' to='/about'>\n                        About \n                    </NavLink>\n                </li>\n                <li className='navbar__list__item'>\n                    <NavLink className='navbar__link' to='/blog/categories'>\n                        Blog\n                    </NavLink>\n                </li>\n\n                    {isAuthenticated ? authLinks() : guestLinks()}\n        \n            </ul>\n     \n            <div className='navbar__button' onClick={toggleSidebar}>\n               \n            </div>\n            <div>\n            </div>  \n         \n        </nav>\n    );\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \nexport default connect(mapStateToProps, { logout })(NavbarInfo);","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\authActions.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\productActions.js",["486","487","488"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    \n    PRODUCT_CLASS_REQUEST,\n    PRODUCT_CLASS_SUCCESS,\n    PRODUCT_CLASS_FAIL,\n\n} from './types'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `${process.env.REACT_APP_API_URL}/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `${process.env.REACT_APP_API_URL}/api/products/update/${product.id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n            }\n        }\n        \n\n        const { data } = await axios.post(\n            `${process.env.REACT_APP_API_URL}/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getProductClass = (productClass) => async dispatch => {\n    \n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }; \n\n    try {\n        dispatch({ type: PRODUCT_CLASS_REQUEST })\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/class/`, {productClass}, config);\n        console.log(res)\n        dispatch({\n            type: PRODUCT_CLASS_SUCCESS,\n            payload: res.data\n\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CLASS_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n        });\n    }\n}\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Rating.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Paginate.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\Product.js",["489","490"],"import React from 'react'\nimport { Card, Image } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        <div className=\"\">\n            <Link to={`/product/${product.id}`}>\n                \n                <Image className=\"product__img shadow-sm\" src={product.image} fluid/> \n\n                {/*Adding ${process.env.REACT_APP_API_URL} to image src doesn't work in production \n                <Image className=\"product__img shadow-sm\" src={`${process.env.REACT_APP_API_URL}${product.image}`} fluid/> \n                */}\n            </Link>\n            <div>\n                <Link to={`/product/${product.id}`}><h3 className='product__name'>{product.name}</h3></Link>\n                <p as=\"h3\" className=\"product__price\"> &#8358; {product.price}</p>\n                <p>Dosage form: {product.dosageForm}</p>\n                <p>Strength: {product.strength}</p>\n                {/*\n                <div className=\"my-3\">\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                </div>\n                */}\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Product\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\spinners\\LoadingMain.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\SearchProduct.js",["491"],"import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nconst SearchProduct = () => {\n\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            console.log(keyword)\n            history.push(`/products?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form className=\"auth-form px-4\" onSubmit={submitHandler}>\n        <Form.Group controlId='searchbox' inline>\n            <Form.Control\n                variant=\"lg\"\n                className=\"search-ppty\"\n                type='text'\n                placeholder=\"Enter product...\"\n                name='q'\n                style={{backgroundColor:\"white\"}}\n                onChange={(e) => { \n                    setKeyword(e.target.value)\n                }}\n            >\n            </Form.Control>\n        </Form.Group>\n        {/*}\n        <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button>\n            */}\n        </Form>\n    )\n}\n\nexport default SearchProduct\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\constants\\orderConstants.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\constants\\productConstants.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\blog\\Blog.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\blog\\BlogCarousel.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\global\\Sidebar.js",["492","493","494","495"],"import React, { Fragment } from 'react';\nimport {Link, NavLink} from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector, connect } from 'react-redux'\nimport { logout } from '../../redux/actions/authActions';\nimport {Dropdown, NavDropdown} from 'react-bootstrap';\n\nconst Sidebar = ({\n    isAuthenticated, \n    logout, \n    isOpen,\n    closeSidebar\n}) => {\n    const styles = isOpen ? 'sidebar sidebar--open' : 'sidebar sidebar--closed';\n\n    \nconst guestLinks = () => (\n\n        <Fragment>\n            <LinkContainer className='sidebar__link' to='/register'>\n                <li className='sidebar__list__item sidebar__auth-link' onClick={closeSidebar}>Sign Up</li>\n            </LinkContainer>\n            <LinkContainer className='sidebar__link' to='/login'>\n                <li className='sidebar__list__item sidebar__auth-link' onClick={closeSidebar}>Sign In</li>\n            </LinkContainer>\n        </Fragment>\n    );\n    \n    const authLinks = () => (\n        <Fragment>\n            <li className='sidebar__list__item' onClick={closeSidebar}>\n                <NavLink className='sidebar__link' to='/products'><img src=\"/assets/icons/Store.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                    Drugstore\n                </NavLink>\n            </li>\n       <LinkContainer className='sidebar__link' to='/profile'>\n            <li className='sidebar__list__item' onClick={closeSidebar}><img src=\"/assets/icons/Profile.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                Profile\n            </li>\n        </LinkContainer>\n\n            <li className='sidebar__list__item sidebar__auth-link' onClick={closeSidebar} onClick={logout}>Logout</li>\n        </Fragment>\n    );\n\n    return (\n        <Fragment>\n            {isOpen ? <div className='sidebar__backdrop' onClick={closeSidebar}></div> : <Fragment></Fragment>}\n            <nav className={`${styles}`}>\n                <ul className='sidebar__list mt-5'>\n                    <div className='sidebar__logo'>\n                        Navbar App\n                    </div>\n                    <li className='sidebar__list__item' onClick={closeSidebar}>\n                        <NavLink className='sidebar__link' exact to='/'><img src=\"/assets/icons/Home_icon.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                            Home\n                        </NavLink>\n                    </li>\n                \n                    <li className='sidebar__list__item' onClick={closeSidebar}>\n                        <NavLink className='sidebar__link' to='/services'><img src=\"/assets/icons/Product_icon.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                            Services\n                        </NavLink>\n                    </li>\n                    <li className='sidebar__list__item' onClick={closeSidebar}>\n                        <NavLink className='sidebar__link' to='/about'><img src=\"/assets/icons/AboutUs_icon.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                            About Us\n                        </NavLink>\n                    </li>\n                    <li className='sidebar__list__item' onClick={closeSidebar}>\n                        <NavLink className='sidebar__link' to='/blog/categories'><img src=\"/assets/icons/Blog.png\" alt=\"\" style={{height:\"25px\", marginRight:\"20px\"}}/>\n                            Blog\n                        </NavLink>\n                    </li>\n                   \n                    <Dropdown.Divider />\n                    {isAuthenticated ? authLinks() : guestLinks()}\n                    \n                </ul>\n            </nav>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \nexport default connect(mapStateToProps, { logout })(Sidebar);","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\contactReducer.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\contactAction.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\servicesScreen.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\blogscreen\\BlogHomeScreen.js",["496"],"import React, { useEffect } from 'react';\nimport { Button, Col, Container, Image, Row } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport BlogCarousel from '../../components/blog/BlogCarousel';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/global/Header';\nimport { getFeaturedBlog } from '../../redux/actions/blogActions'\n\nconst BlogHomeScreen = () => {\n\n  const featuredBlog = useSelector(state => state.featuredBlog)\n  const { blog } = featuredBlog\n  const post = blog[0]\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n      dispatch(getFeaturedBlog())\n\n  }, [dispatch])\n  return (\n    <>\n    <Header />\n  <Container className=\"content\">\n    <meta charSet=\"utf-8\" />\n        <Helmet>\n        <meta name=\"description\" content=\"Health related blog content\" />\n        <title>Blog post categories</title>\n         </Helmet>\n    <BlogCarousel />\n    <h2 className=\"blog__home__vap mt-5\"><Link to=\"/blog/posts\">All Posts </Link></h2>\n      <div className=\"blog__home\">\n          <h2 className='blog__home__header'><strong>Categories: </strong></h2>\n          <div className='blog__home__lead'>\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/pharmaceuticals\">Pharmaceuticals</Link></p>\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/diseases\">Diseases</Link></p>\n          </div>\n          <div className='blog__home__lead mt-2'>\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/natural-medicine\">Natural Medicine</Link></p>\n              <p className='blog__home__lead__tab mx-4'><Link to=\"/blog/category/lifestyle\">Lifestyle</Link></p>\n          </div>\n      <div className=\"blog__home__bgc px-5 pb-5\">\n        <h4 className=\"mt-5 pt-4\"><strong>Popular Posts</strong></h4>\n      <hr />\n     \n      <Row>\n        <Col xs={12} sm={8}>\n          <Row>\n            <Col xm={4} className=\"\"> <Image className=\"blog__home__img\" src={post?.image} alt={blog?.title}  fluid/></Col>\n            <Col xm={8}>\n                <div className=''>\n                    <p className=\"blog__home__title\"><strong>{post?.title}</strong></p>\n                    <p className=\"blog__home__date\">{post?.datePublished.substring(0, 10)}</p>\n                    <p><Link to={`/post/${post?.slug}`}>Read More</Link></p> \n                </div>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={12} sm={4}>\n        \n        </Col>\n      </Row>\n      </div>\n      </div>\n  </Container>\n  <Footer />\n  </>\n  )\n};\n\nexport default BlogHomeScreen;\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\FloatingAction.js",["497"],"import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\n\r\nfunction FloatingAction() {\r\n  return (\r\n    <div>\r\n        <div className=\"btn__floating\">\r\n            <div className=\"btn__floating__icon\"><a href=\"https://tinyurl.com/2p98zk2h\" className=\"btn__floating__icon__link\" target=\"_blank\"><Image src='/assets/images/WhatsApp_icon.png' className=\"btn__floating__icon__link__fa\"/></a></div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FloatingAction","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\Index.js",["498"],"import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/global/Header'\r\nimport IndexSlider from '../../components/sliders/index/indexSlider'\r\nimport TrackRecord from '../../components/TrackRecord'\r\nimport { getProductClass } from '../../redux/actions/productActions'\r\n\r\n\r\nconst HealthcareFuture = [\r\n    {id: 1, area: \"For Pharmacies\", comment: \"Get access to wholesale procurement from over 10,000 products\"},\r\n    {id: 2, area: \"For Hospitals\", comment: \"Enjoy credit facility and routine stock refill services\"},\r\n    {id: 3, area: \"For Medical Professionals\", comment: \"Easily make rare and specialist medicine requisitions\"}\r\n]\r\n\r\nconst Index = () => {\r\n  return (\r\n    <> \r\n        <Header />\r\n        <div style={{marginTop:\"5rem\"}}>\r\n            <IndexSlider />\r\n            <div className=''>\r\n                <div className='index__services d-md-flex justify-content-center'>\r\n                    <div className='index__services__render m-5 shadow'>\r\n                        <h3 className='index__services__render__header'>Save More</h3>\r\n                        <ul className='index__services__render__list'>\r\n                            <li>Affordable Price</li>\r\n                            <li>Credit Facility</li>\r\n                            <li>Safe Shipment/Delivery</li>\r\n                        </ul> \r\n                    </div >\r\n                    <div className='index__services__render m-5 shadow'>\r\n                        <h3 className='index__services__render__header'>Get More Options</h3>\r\n                        <ul className='index__services__render__list'>\r\n                            <li>Source from over 10,000 products</li>\r\n                            <li>Orphan/Rare Drug Request</li>\r\n                        \r\n                        </ul>\r\n                    </div>\r\n                    <div className='index__services__render m-5 shadow'>\r\n                        <h3 className='index__services__render__header'>Stay On Time</h3>\r\n                        <ul className='index__services__render__list'>\r\n                            <li>Make wholesale procurements with ease</li>\r\n                            <li>Fast and efficient logistics and delivery service </li>\r\n                            <li>Safe Shipment/Delivery</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='d-flex justify-content-center'>\r\n                    <h2 className='index__services__intro'>The Future of Healthcare is Here!</h2>\r\n                </div>\r\n\r\n                <div className='index__healthcarefuture shadow-sm'>\r\n                    <Image />\r\n                    <div>\r\n                        {HealthcareFuture.map(healthcare =>(\r\n                            <div key={healthcare.id} className='index__healthcarefuture__wrapper'>\r\n                                <div>\r\n                                    <h3 className='index__healthcarefuture__wrapper__header'>{healthcare.area}</h3>\r\n                                    <p className='index__healthcarefuture__wrapper__comment'>{healthcare.comment}</p>\r\n                                    <Link>Learn More</Link>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <TrackRecord />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n\r\n\r\n","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\storeSlider.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\multivitamins.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\partnership.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\analgesics.js",["499","500","501","502","503"],"import React, { useEffect } from 'react'\r\nimport { Navigation, Pagination, A11y, Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport {Image} from 'react-bootstrap'\r\n\r\nimport 'swiper/swiper.min.css';\r\n//import 'swiper/css/navigation';\r\n//import 'swiper/css/pagination';\r\n//import 'swiper/modules/free-mode/free-mode.min.css\r\nimport 'swiper/modules/navigation/navigation.min.css'\r\nimport 'swiper/modules/pagination/pagination.min.css'\r\nimport 'swiper/modules/autoplay/autoplay.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductClass } from '../../../redux/actions/productActions';\r\nimport { listProducts } from '../../../redux/actions/productActions';\r\n\r\nconst data = [\r\n  {id:1, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"},\r\n  {id:2, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"},\r\n  {id:3, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"},\r\n  {id:4, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"},\r\n  {id:6, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"},\r\n  {id:7, name:\"PCM\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.JPG\"}\r\n]\r\n\r\n// <SwiperSlide><Image src='assets/images/Image1.png' height={300}/></SwiperSlide>\r\n//<SwiperSlide><Image src='assets/images/Image2.png' height={300}/></SwiperSlide>\r\n\r\nconst Analgesics = () => {\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector(state => state.productList)\r\n  const { error, loading, products,} = productList\r\n  // const data = products\r\n\r\n  useEffect(() => {\r\n      dispatch(listProducts())\r\n   \r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Swiper\r\n          modules={[Navigation, Pagination, A11y, Autoplay]}\r\n          spaceBetween={10}\r\n          breakpoints={{\r\n            //when window with is >= 640\r\n            360: {\r\n              width: 360,\r\n              slidesPerView: 2,\r\n            },\r\n              //when window with is >= 768\r\n            768: {\r\n              width: 768,\r\n              slidesPerView: 3,\r\n            }\r\n          }}\r\n          // autoplay={{delay: \"5000\"}}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n          onSlideChange={() => console.log('slide change')}\r\n          className=\"analgesics\"\r\n      >\r\n        {data.map(drug =>(\r\n          <div className=\"analgesics__slider\">\r\n            <SwiperSlide key={drug.id} className=\"analgesics__slider__container p-4\">\r\n              <div className='analgesics__slider__content'>\r\n                  <Image className='analgesics__slider__content__image' src={drug.image} />\r\n                <div className='analgesics__slider__content__text px-4'>\r\n                  <p className='analgesics__slider__content__name'>{drug.name}</p>\r\n                  <p className='analgesics__slider__content__preamble'>{drug.strength}</p>\r\n                  <p className='analgesics__slider__content__price'>#{drug.price}</p>\r\n                </div>\r\n              </div>\r\n            \r\n            </SwiperSlide>\r\n          </div>\r\n        ))}\r\n\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analgesics","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\testimony.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\shop\\antibiotics.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\Shop.js",["504","505","506","507","508"],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\sliders\\index\\indexSlider.js",["509","510","511"],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\TrackRecord.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\PrescriptionForm.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\EmergencyScreen.js",["512","513"],"import React, {useState} from 'react'\r\nimport { Button, Container, Form } from 'react-bootstrap'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/global/Header'\r\nimport RequestForm from '../../components/emergency/RequestForm'\r\nimport DeliveyForm from '../../components/emergency/DeliveyForm'\r\nimport EmergencyOrderVerifyScreen from './EmergencyOrderVerifyScreen'\r\n\r\n\r\nconst EmergencyScreen = () => {\r\n\r\n  // Steps\r\nconst [activeStep, setActiveStep] = useState(0)\r\n\r\nconst getSteps = () =>{\r\n  return [\"Request Form\", \"Delivery Form\"]\r\n}\r\n\r\nconst steps = getSteps()\r\n// State Variables\r\nconst [multiFormValues, setMultiformValues] = useState({\r\n  tel:\"\",\r\n  extraInfo:\"\",\r\n  recipientName:\"\",\r\n  recipientTel:\"\",\r\n  pickUpAddress:\"\",\r\n  deliveryAddress:\"\",\r\n  location:\"\",\r\n  image:\"\",\r\n  productName:\"\",\r\n  brand:\"\",\r\n  orderCategory:\"\",\r\n  storageSystem:\"\",\r\n  dosageForm:\"\",\r\n  strength:\"\",\r\n  packSize:\"\",\r\n})\r\n\r\n// Handle next\r\nconst HandleNext = () =>{\r\n  setActiveStep((nextStep) => nextStep + 1)\r\n}\r\n\r\n// Handle Previous Step\r\nconst HandlePrevious = () =>{\r\n  setActiveStep((previousStep) => previousStep - 1)\r\n}\r\n\r\n//Handle Form values on change\r\nconst handleChange = (input) => (e) =>{\r\n  setMultiformValues({...multiFormValues, [input]: e.target.value})\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className='emergency content'>\r\n          {activeStep === 0 && (\r\n          <RequestForm values={multiFormValues} handleChange = {handleChange} /> \r\n          )}\r\n\r\n          {activeStep === 1 && (\r\n          <DeliveyForm values={multiFormValues} handleChange = {handleChange} /> \r\n          )}\r\n          {activeStep === 2 && (\r\n          <EmergencyOrderVerifyScreen values={multiFormValues} handleChange = {handleChange} /> \r\n          )}\r\n\r\n      {/* <Button variant='secondary' disabled={activeStep === 0} style={activeStep === 2 ? {display: 'none'}: {}} className='emergency__btn emergency__btn__previous' onClick={HandlePrevious}>Previous</Button> */}\r\n      <Button style={activeStep === 2 ? {display:\"none\"}: {}} className='emergency__btn emergency__btn__next' onClick={HandleNext}>{activeStep === steps.length - 1?\"Verify\":\"Next\"}</Button>\r\n  \r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmergencyScreen","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\PrescriptionForm.js",["514"],"C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\emergency\\DeliveyForm.js",["515","516"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nconst DeliveyForm = ({values, handleChange}) => {\r\n  console.log(handleChange)\r\n  return (\r\n    <div>\r\n        <div className='emergency__header'>\r\n          <h2>Delivery Details</h2>\r\n          <p>Please fill-in this form with much detail as possible</p>\r\n        </div>\r\n        <Form>\r\n            <div className='emergency__formgroup__wrapper'>\r\n                <Form.Group className='emergency__formgroup__first-half'>\r\n                <Form.Label className='formlabel'>Recipient Full Name<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                <Form.Control className='emergency__forminput' onChange={handleChange('recipientName')} value={values.recipientName} placeholder='Full Name' />\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__second-half'>\r\n                <Form.Label className='formlabel'>Recipient Phone Number<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                <Form.Control className='emergency__forminput' onChange={handleChange('recipientTel')} value={values.recipientTel} placeholder='Phone Number' />\r\n                </Form.Group>\r\n            </div>\r\n            <Form.Group className='emergency__formgroup'>\r\n                <Form.Label className='formlabel'>Delivery Address<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                <Form.Control className='emergency__forminput' onChange={handleChange('deliveryAddress')} value={values.deliveryAddress} placeholder=\"Enter patent name\" />\r\n            </Form.Group>        \r\n        </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nDeliveyForm.propTypes = {}\r\n\r\nexport default DeliveyForm","C:\\projects\\websites\\florix\\florix-frontend\\src\\components\\emergency\\RequestForm.js",["517","518"],"import React from 'react'\r\nimport { Button, Col, Form, Image, Row } from 'react-bootstrap'\r\n\r\nconst RequestForm = ({values, handleChange}) => {\r\n  console.log(values)\r\n  console.log(handleChange)\r\n  return (\r\n    <>\r\n      <div className='emergency__header'>\r\n        <h2>Place Request</h2>\r\n        <p>Please fill in accurate information and providemuch detail as possible where necessary</p>\r\n      </div>\r\n        \r\n    <div className='emergency__form-container'>\r\n      <Form>\r\n      {/*         \r\n          <div className='emergency__formgroup__wrapper'>\r\n            <Form.Group className='emergency__formgroup__first-half'>\r\n              <Form.Label className='formlabel'>Full Name<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n              <Form.Control  className='emergency__forminput' placeholder='Full Name' />\r\n            </Form.Group>\r\n            <Form.Group className='emergency__formgroup__second-half'>\r\n              <Form.Label className='formlabel'>Phone Number<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n              <Form.Control onChange={handleChange('tel')} value={values.tel} className='emergency__forminput' placeholder='Phone Number' />\r\n            </Form.Group>\r\n          </div>\r\n          \r\n        */}\r\n          <div>\r\n            <Form.Group className='emergency__formgroup mt-5'>\r\n                <Form.Control className='emergency__forminput' onChange={handleChange('orderCategory')} value={values.orderCategory} as=\"select\" aria-label=\"Default select example\">\r\n                  <option className='emergency__formgroup__option input-field'>Select category of pick-up/delivery Item</option>\r\n                  <option className='emergency__formgroup__option input-field' value=\"Medications\">Medications</option>\r\n                  <option className='emergency__formgroup__option input-field' value=\"Laboratory Specimen\">Laboratory Specimen</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <div className='my-5'>\r\n            <Form.Group>\r\n              <Form.Label className='formlabel' style={{fontSize:\"18px\"}}>Briefly State Health Complaints<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n              <Form.Control \r\n                as=\"textarea\" \r\n                placeholder=\"e.g. I'm having toothache\" \r\n                className='input-field' \r\n                required\r\n                onChange={handleChange('extraInfo')} value={values.extraInfo}\r\n                />\r\n            </Form.Group>\r\n          </div>\r\n          <div className='bg-primary p-2 d-flex justify-content-center' style={{color:\"white\"}}>\r\n            <Form.Group className=''>\r\n                <Form.Label className='mx-2' style={{fontSize:\"18px\"}}>Upload Prescription</Form.Label>\r\n                <Form.Control \r\n                  type=\"file\" \r\n                  className='input-field' \r\n                  onChange={handleChange('image')} value={values.image}\r\n                  />\r\n              </Form.Group>\r\n          </div>\r\n          <div>\r\n            <div className=\"emergency__pickup__container pt-5\">\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Generic Name<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control onChange={handleChange('productName')} value={values.productName} className='emergency__formgroup__input emergency__forminput input-field' placeholder='e.g Paracetamol' />\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Brand</Form.Label>\r\n                  <Form.Control onChange={handleChange('brand')} value={values.brand} className='emergency__formgroup__input emergency__forminput input-field' placeholder='e.g. Emzor' />\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                    <Form.Label className='emergency__formgroup__text formlabel'>Dosage Form<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                    <Form.Control className='emergency__formgroup__input emergency__forminput' onChange={handleChange('dosageForm')} value={values.dosageForm} as=\"select\" aria-label=\"Default select example\">\r\n                      <option className='emergency__formgroup__option'>Select</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Tablets/Capsules\">Tablets/Capsules</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Syrups/Suspensions/Emulsions/Solutions\">Syrups/Suspensions/Emulsions/Solutions</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Eye/ear Drops*\">Eye/ear Drops*</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Creams/Ointments/Pastes\">Creams/Ointments/Pastes</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Injections/Infusions*\">Injections/Infusions*</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Aerosols/Sprays\">Aerosols/Sprays</option>\r\n                        <option className='emergency__formgroup__option input-field' value=\"Pessaries/Suppositories\">Pessaries/Suppositories</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Dose/strength<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control onChange={handleChange('strength')} value={values.strength} className='emergency__formgroup__input emergency__forminput input-field' placeholder='e.g 100 mg or 5 mg/ml' />\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Quantity<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control onChange={handleChange('packSize')} value={values.packSize} className='emergency__formgroup__input emergency__forminput input-field' placeholder='e.g 1 Pack' />\r\n                </Form.Group>\r\n                <Form.Group className='d-flex my-4'>\r\n                  <Form.Label className='emergency__checkbox__label'>Nature of Package</Form.Label>\r\n                  <Form.Check className='emergency__checkbox ms-5' type='radio' label='Normal'/>\r\n                  <Form.Check className='emergency__checkbox ms-5' type='radio' label='Cold Chain'/>\r\n                </Form.Group>\r\n            </div>\r\n\r\n            <div className=\"emergency__pickup__container my-5\">\r\n              <Row>\r\n                <Col sm={12} md={4}>\r\n                  <Form.Group className=''>\r\n                    <Form.Label className='formlabel'>Pick-up Address<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                    <Form.Control onChange={handleChange('pickUpAddress')} value={values.pickUpAddress} className='input-field' placeholder='Pick-up Address' />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                  <Form.Group className=''>\r\n                    <Form.Label className='formlabel'>Phone no.<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                    <Form.Control onChange={handleChange('tel')} value={values.tel} className='input-field' placeholder='' />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                <Form.Group className=''>\r\n                    <Form.Label className='formlabel'>Location<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                    <Form.Control className='input-field' onChange={handleChange('location')} value={values.location} as=\"select\" aria-label=\"Default select example\">\r\n                      <option className=''>Select area in Benin City</option>\r\n                        <option className='' value=\"New Benin\">New Benin</option>\r\n                        <option className='' value=\"Ekenhen\">Ekenhuan</option>\r\n                        <option className='' value=\"Oluku/Ishihor\">Oluku/Ishihor</option>\r\n                        <option className='' value=\"Sakponba\">Sakponba</option>\r\n                        <option className='' value=\"Uselu/Ugbowo\">Uselu/Ugbowo</option>\r\n                        <option className='' value=\"Agip\">Agip</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n        </Form>\r\n        <div className='emergency__premium__container'>\r\n          <h2>OR</h2>\r\n          <p><a href=\"https://tinyurl.com/2p98zk2h\" target='_blank' rel=\"noreferrer\">Speak with a Pharmacist</a></p>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RequestForm","C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\emergencyorderAction.js",["519"],"import axios from 'axios';\r\nimport {EMERGENCY_ORDER_REQUEST, \r\n    EMERGENCY_ORDER_SUCCESS,\r\n    EMERGENCY_ORDER_FAIL\r\n\r\n} from './types'\r\n\r\n\r\nexport const emergency_order = (\r\n    tel,\r\n    extraInfo,\r\n    recipientName, \r\n    recipientTel, \r\n    pickUpAddress, \r\n    deliveryAddress, \r\n    location,\r\n    orderCategory, \r\n    productName, \r\n    image,  \r\n    dosageForm, \r\n    brand, \r\n    strength,  \r\n    storageSystem, \r\n    packSize,\r\n    ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n    const body = JSON.stringify({ \r\n        tel,\r\n        extraInfo,\r\n        recipientName, \r\n        recipientTel, \r\n        pickUpAddress, \r\n        deliveryAddress, \r\n        location,\r\n        orderCategory, \r\n        productName, \r\n        image,  \r\n        dosageForm, \r\n        brand, \r\n        strength,  \r\n        storageSystem, \r\n        packSize,\r\n    });\r\n    console.log(packSize)\r\n    try {\r\n    \r\n        const {data} = await axios.post(`${process.env.REACT_APP_API_URL}/api/emergency/`, body, config);\r\n        \r\n        console.log(body)\r\n        dispatch({\r\n            type: EMERGENCY_ORDER_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EMERGENCY_ORDER_FAIL,\r\n            payload: err.response && err.response.data.detail\r\n                ? err.response.data.detail\r\n                : err.message,\r\n        })\r\n    }\r\n};","C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\baseScreens\\EmergencyOrderVerifyScreen.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\emergencyReducer.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\actions\\prescriptionAction.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\redux\\reducers\\prescriptionReducer.js",[],"C:\\projects\\websites\\florix\\florix-frontend\\src\\screens\\productScreens\\ProductClassScreen.js",["520","521","522","523","524"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { getProductClass } from '../../redux/actions/productActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductClassScreen = ({match}) => {\r\n    const [productClass, setProductClass] = useState('');\r\n    const productClassStore = useSelector(state => state.productClass)\r\n\r\n    const { error, loading, products } = productClassStore\r\n    console.log(products)\r\n    const dispatch = useDispatch()\r\n  \r\n    useEffect(() => {\r\n        const id = match.params.id\r\n        const itemClass = match.params.id\r\n        setProductClass(itemClass);\r\n        dispatch(getProductClass(id))\r\n     \r\n    }, [])\r\n\r\n    const getProductsByClass = () => {\r\n        let list = [];\r\n        let result = [];\r\n\r\n        products.map( (product)=> {\r\n            console.log(product)\r\n            return list.push(\r\n                <div>\r\n                    <h2 className=\"blog__category__header\"><span className=\"d-inline-block mb-2\">Therapeutic Category: <strong> {product.productClass}</strong></span></h2>\r\n                    <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative\">\r\n                        \r\n                        <div className=\"col p-4 d-flex flex-column position-static\">\r\n                           <Image className=\"post__img\" src={`${process.env.REACT_APP_API_URL}${product.image}`} alt={product.name} fluid/>\r\n                            {/* <Image className=\"post__img\" src={product.image} alt={product.name} fluid/> */}\r\n                            <h3 className=\"mb-0\">{product.name}</h3>\r\n                            <p as=\"h3\" className=\"product__price\"> &#8358; {product.price}</p>\r\n                            <p>Strength: {product.strength}</p>\r\n                           \r\n                            <Link to={`/product/${product.id}`} className=\"stretched-link\"><Button className=\"blog__category__btn\">Click</Button></Link>\r\n                        </div>\r\n                        <div className=\"col-auto d-none d-lg-block\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        for (let i = 0; i < list.length; i += 2) {\r\n            result.push(\r\n                <div key={i} className='row mb-2'>\r\n                    <div className='col-md-6'>\r\n                        {list[i]}\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        {list[i+1] ? list[i+1] : null}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return result;\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h1>{productClass}</h1>\r\n\r\n        <div>\r\n            {getProductsByClass()}\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductClassScreen",{"ruleId":"525","replacedBy":"526"},{"ruleId":"527","replacedBy":"528"},{"ruleId":"529","severity":1,"message":"530","line":5,"column":8,"nodeType":"531","messageId":"532","endLine":5,"endColumn":14},{"ruleId":"529","severity":1,"message":"533","line":6,"column":8,"nodeType":"531","messageId":"532","endLine":6,"endColumn":14},{"ruleId":"529","severity":1,"message":"534","line":47,"column":8,"nodeType":"531","messageId":"532","endLine":47,"endColumn":15},{"ruleId":"529","severity":1,"message":"535","line":52,"column":8,"nodeType":"531","messageId":"532","endLine":52,"endColumn":34},{"ruleId":"529","severity":1,"message":"536","line":2,"column":8,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"537","severity":1,"message":"538","line":13,"column":8,"nodeType":"539","endLine":13,"endColumn":10,"suggestions":"540"},{"ruleId":"529","severity":1,"message":"541","line":3,"column":10,"nodeType":"531","messageId":"532","endLine":3,"endColumn":19},{"ruleId":"529","severity":1,"message":"542","line":3,"column":21,"nodeType":"531","messageId":"532","endLine":3,"endColumn":24},{"ruleId":"529","severity":1,"message":"543","line":3,"column":26,"nodeType":"531","messageId":"532","endLine":3,"endColumn":29},{"ruleId":"544","severity":1,"message":"545","line":47,"column":76,"nodeType":"546","messageId":"547","endLine":47,"endColumn":144,"fix":"548"},{"ruleId":"544","severity":1,"message":"545","line":48,"column":76,"nodeType":"546","messageId":"547","endLine":48,"endColumn":134,"fix":"549"},{"ruleId":"529","severity":1,"message":"550","line":3,"column":39,"nodeType":"531","messageId":"532","endLine":3,"endColumn":48},{"ruleId":"529","severity":1,"message":"551","line":1,"column":27,"nodeType":"531","messageId":"532","endLine":1,"endColumn":36},{"ruleId":"529","severity":1,"message":"552","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"529","severity":1,"message":"553","line":3,"column":21,"nodeType":"531","messageId":"532","endLine":3,"endColumn":27},{"ruleId":"529","severity":1,"message":"554","line":6,"column":8,"nodeType":"531","messageId":"532","endLine":6,"endColumn":14},{"ruleId":"529","severity":1,"message":"555","line":7,"column":8,"nodeType":"531","messageId":"532","endLine":7,"endColumn":15},{"ruleId":"529","severity":1,"message":"556","line":19,"column":10,"nodeType":"531","messageId":"532","endLine":19,"endColumn":17},{"ruleId":"529","severity":1,"message":"557","line":24,"column":11,"nodeType":"531","messageId":"532","endLine":24,"endColumn":16},{"ruleId":"529","severity":1,"message":"558","line":24,"column":18,"nodeType":"531","messageId":"532","endLine":24,"endColumn":25},{"ruleId":"529","severity":1,"message":"559","line":24,"column":27,"nodeType":"531","messageId":"532","endLine":24,"endColumn":35},{"ruleId":"529","severity":1,"message":"560","line":4,"column":19,"nodeType":"531","messageId":"532","endLine":4,"endColumn":30},{"ruleId":"529","severity":1,"message":"561","line":14,"column":12,"nodeType":"531","messageId":"532","endLine":14,"endColumn":17},{"ruleId":"529","severity":1,"message":"557","line":17,"column":13,"nodeType":"531","messageId":"532","endLine":17,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":17,"column":20,"nodeType":"531","messageId":"532","endLine":17,"endColumn":27},{"ruleId":"529","severity":1,"message":"562","line":17,"column":29,"nodeType":"531","messageId":"532","endLine":17,"endColumn":38},{"ruleId":"529","severity":1,"message":"560","line":5,"column":19,"nodeType":"531","messageId":"532","endLine":5,"endColumn":30},{"ruleId":"529","severity":1,"message":"563","line":9,"column":8,"nodeType":"531","messageId":"532","endLine":9,"endColumn":12},{"ruleId":"529","severity":1,"message":"556","line":18,"column":12,"nodeType":"531","messageId":"532","endLine":18,"endColumn":19},{"ruleId":"529","severity":1,"message":"559","line":21,"column":29,"nodeType":"531","messageId":"532","endLine":21,"endColumn":37},{"ruleId":"529","severity":1,"message":"553","line":2,"column":21,"nodeType":"531","messageId":"532","endLine":2,"endColumn":27},{"ruleId":"529","severity":1,"message":"552","line":4,"column":10,"nodeType":"531","messageId":"532","endLine":4,"endColumn":14},{"ruleId":"529","severity":1,"message":"554","line":6,"column":8,"nodeType":"531","messageId":"532","endLine":6,"endColumn":14},{"ruleId":"529","severity":1,"message":"555","line":7,"column":8,"nodeType":"531","messageId":"532","endLine":7,"endColumn":15},{"ruleId":"529","severity":1,"message":"557","line":21,"column":13,"nodeType":"531","messageId":"532","endLine":21,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":21,"column":20,"nodeType":"531","messageId":"532","endLine":21,"endColumn":27},{"ruleId":"529","severity":1,"message":"564","line":1,"column":17,"nodeType":"531","messageId":"532","endLine":1,"endColumn":26},{"ruleId":"529","severity":1,"message":"553","line":4,"column":37,"nodeType":"531","messageId":"532","endLine":4,"endColumn":43},{"ruleId":"529","severity":1,"message":"565","line":6,"column":10,"nodeType":"531","messageId":"532","endLine":6,"endColumn":33},{"ruleId":"529","severity":1,"message":"555","line":7,"column":8,"nodeType":"531","messageId":"532","endLine":7,"endColumn":15},{"ruleId":"529","severity":1,"message":"554","line":8,"column":8,"nodeType":"531","messageId":"532","endLine":8,"endColumn":14},{"ruleId":"529","severity":1,"message":"556","line":19,"column":12,"nodeType":"531","messageId":"532","endLine":19,"endColumn":19},{"ruleId":"529","severity":1,"message":"566","line":19,"column":21,"nodeType":"531","messageId":"532","endLine":19,"endColumn":31},{"ruleId":"529","severity":1,"message":"567","line":22,"column":11,"nodeType":"531","messageId":"532","endLine":22,"endColumn":19},{"ruleId":"529","severity":1,"message":"557","line":28,"column":14,"nodeType":"531","messageId":"532","endLine":28,"endColumn":19},{"ruleId":"529","severity":1,"message":"558","line":28,"column":21,"nodeType":"531","messageId":"532","endLine":28,"endColumn":28},{"ruleId":"529","severity":1,"message":"568","line":6,"column":8,"nodeType":"531","messageId":"532","endLine":6,"endColumn":14},{"ruleId":"537","severity":1,"message":"569","line":50,"column":8,"nodeType":"539","endLine":50,"endColumn":47,"suggestions":"570"},{"ruleId":"529","severity":1,"message":"563","line":7,"column":8,"nodeType":"531","messageId":"532","endLine":7,"endColumn":12},{"ruleId":"529","severity":1,"message":"551","line":1,"column":27,"nodeType":"531","messageId":"532","endLine":1,"endColumn":36},{"ruleId":"529","severity":1,"message":"571","line":5,"column":8,"nodeType":"531","messageId":"532","endLine":5,"endColumn":21},{"ruleId":"529","severity":1,"message":"552","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"529","severity":1,"message":"572","line":2,"column":16,"nodeType":"531","messageId":"532","endLine":2,"endColumn":26},{"ruleId":"529","severity":1,"message":"553","line":5,"column":31,"nodeType":"531","messageId":"532","endLine":5,"endColumn":37},{"ruleId":"529","severity":1,"message":"573","line":5,"column":46,"nodeType":"531","messageId":"532","endLine":5,"endColumn":50},{"ruleId":"529","severity":1,"message":"554","line":7,"column":8,"nodeType":"531","messageId":"532","endLine":7,"endColumn":14},{"ruleId":"529","severity":1,"message":"574","line":13,"column":8,"nodeType":"531","messageId":"532","endLine":13,"endColumn":17},{"ruleId":"537","severity":1,"message":"569","line":42,"column":8,"nodeType":"539","endLine":42,"endColumn":27,"suggestions":"575"},{"ruleId":"529","severity":1,"message":"576","line":2,"column":18,"nodeType":"531","messageId":"532","endLine":2,"endColumn":22},{"ruleId":"529","severity":1,"message":"552","line":7,"column":10,"nodeType":"531","messageId":"532","endLine":7,"endColumn":14},{"ruleId":"529","severity":1,"message":"577","line":8,"column":10,"nodeType":"531","messageId":"532","endLine":8,"endColumn":28},{"ruleId":"529","severity":1,"message":"558","line":18,"column":13,"nodeType":"531","messageId":"532","endLine":18,"endColumn":20},{"ruleId":"529","severity":1,"message":"557","line":18,"column":22,"nodeType":"531","messageId":"532","endLine":18,"endColumn":27},{"ruleId":"537","severity":1,"message":"578","line":33,"column":8,"nodeType":"539","endLine":33,"endColumn":38,"suggestions":"579"},{"ruleId":"529","severity":1,"message":"576","line":2,"column":46,"nodeType":"531","messageId":"532","endLine":2,"endColumn":50},{"ruleId":"529","severity":1,"message":"580","line":6,"column":8,"nodeType":"531","messageId":"532","endLine":6,"endColumn":21},{"ruleId":"537","severity":1,"message":"581","line":33,"column":8,"nodeType":"539","endLine":33,"endColumn":26,"suggestions":"582"},{"ruleId":"529","severity":1,"message":"563","line":5,"column":8,"nodeType":"531","messageId":"532","endLine":5,"endColumn":12},{"ruleId":"529","severity":1,"message":"556","line":14,"column":12,"nodeType":"531","messageId":"532","endLine":14,"endColumn":19},{"ruleId":"529","severity":1,"message":"566","line":14,"column":21,"nodeType":"531","messageId":"532","endLine":14,"endColumn":31},{"ruleId":"529","severity":1,"message":"583","line":2,"column":35,"nodeType":"531","messageId":"532","endLine":2,"endColumn":40},{"ruleId":"529","severity":1,"message":"552","line":4,"column":10,"nodeType":"531","messageId":"532","endLine":4,"endColumn":14},{"ruleId":"529","severity":1,"message":"584","line":4,"column":16,"nodeType":"531","messageId":"532","endLine":4,"endColumn":24},{"ruleId":"529","severity":1,"message":"584","line":2,"column":16,"nodeType":"531","messageId":"532","endLine":2,"endColumn":24},{"ruleId":"529","severity":1,"message":"554","line":9,"column":8,"nodeType":"531","messageId":"532","endLine":9,"endColumn":14},{"ruleId":"537","severity":1,"message":"569","line":68,"column":8,"nodeType":"539","endLine":68,"endColumn":62,"suggestions":"585"},{"ruleId":"529","severity":1,"message":"586","line":12,"column":12,"nodeType":"531","messageId":"532","endLine":12,"endColumn":27},{"ruleId":"529","severity":1,"message":"557","line":15,"column":13,"nodeType":"531","messageId":"532","endLine":15,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":15,"column":20,"nodeType":"531","messageId":"532","endLine":15,"endColumn":27},{"ruleId":"537","severity":1,"message":"587","line":25,"column":8,"nodeType":"539","endLine":25,"endColumn":10,"suggestions":"588"},{"ruleId":"529","severity":1,"message":"553","line":4,"column":10,"nodeType":"531","messageId":"532","endLine":4,"endColumn":16},{"ruleId":"529","severity":1,"message":"576","line":4,"column":18,"nodeType":"531","messageId":"532","endLine":4,"endColumn":22},{"ruleId":"529","severity":1,"message":"583","line":4,"column":40,"nodeType":"531","messageId":"532","endLine":4,"endColumn":45},{"ruleId":"529","severity":1,"message":"552","line":9,"column":10,"nodeType":"531","messageId":"532","endLine":9,"endColumn":14},{"ruleId":"529","severity":1,"message":"557","line":18,"column":13,"nodeType":"531","messageId":"532","endLine":18,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":18,"column":20,"nodeType":"531","messageId":"532","endLine":18,"endColumn":27},{"ruleId":"529","severity":1,"message":"589","line":22,"column":11,"nodeType":"531","messageId":"532","endLine":22,"endColumn":15},{"ruleId":"529","severity":1,"message":"590","line":14,"column":5,"nodeType":"531","messageId":"532","endLine":14,"endColumn":20},{"ruleId":"529","severity":1,"message":"591","line":19,"column":5,"nodeType":"531","messageId":"532","endLine":19,"endColumn":24},{"ruleId":"529","severity":1,"message":"592","line":28,"column":5,"nodeType":"531","messageId":"532","endLine":28,"endColumn":24},{"ruleId":"529","severity":1,"message":"559","line":42,"column":26,"nodeType":"531","messageId":"532","endLine":42,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":90,"column":26,"nodeType":"531","messageId":"532","endLine":90,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":131,"column":26,"nodeType":"531","messageId":"532","endLine":131,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":172,"column":26,"nodeType":"531","messageId":"532","endLine":172,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":214,"column":26,"nodeType":"531","messageId":"532","endLine":214,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":254,"column":26,"nodeType":"531","messageId":"532","endLine":254,"endColumn":34},{"ruleId":"529","severity":1,"message":"593","line":6,"column":9,"nodeType":"531","messageId":"532","endLine":6,"endColumn":20},{"ruleId":"529","severity":1,"message":"557","line":12,"column":13,"nodeType":"531","messageId":"532","endLine":12,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":12,"column":20,"nodeType":"531","messageId":"532","endLine":12,"endColumn":27},{"ruleId":"529","severity":1,"message":"594","line":12,"column":29,"nodeType":"531","messageId":"532","endLine":12,"endColumn":33},{"ruleId":"529","severity":1,"message":"595","line":122,"column":17,"nodeType":"531","messageId":"532","endLine":122,"endColumn":21},{"ruleId":"529","severity":1,"message":"559","line":192,"column":26,"nodeType":"531","messageId":"532","endLine":192,"endColumn":34},{"ruleId":"529","severity":1,"message":"559","line":236,"column":26,"nodeType":"531","messageId":"532","endLine":236,"endColumn":34},{"ruleId":"529","severity":1,"message":"576","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"529","severity":1,"message":"568","line":3,"column":8,"nodeType":"531","messageId":"532","endLine":3,"endColumn":14},{"ruleId":"529","severity":1,"message":"553","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":16},{"ruleId":"529","severity":1,"message":"552","line":2,"column":9,"nodeType":"531","messageId":"532","endLine":2,"endColumn":13},{"ruleId":"529","severity":1,"message":"596","line":4,"column":10,"nodeType":"531","messageId":"532","endLine":4,"endColumn":21},{"ruleId":"529","severity":1,"message":"593","line":6,"column":19,"nodeType":"531","messageId":"532","endLine":6,"endColumn":30},{"ruleId":"597","severity":1,"message":"598","line":42,"column":91,"nodeType":"599","messageId":"600","endLine":42,"endColumn":107},{"ruleId":"529","severity":1,"message":"553","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":16},{"ruleId":"544","severity":1,"message":"545","line":8,"column":50,"nodeType":"546","messageId":"547","endLine":8,"endColumn":143,"fix":"601"},{"ruleId":"529","severity":1,"message":"602","line":8,"column":10,"nodeType":"531","messageId":"532","endLine":8,"endColumn":25},{"ruleId":"529","severity":1,"message":"602","line":14,"column":10,"nodeType":"531","messageId":"532","endLine":14,"endColumn":25},{"ruleId":"529","severity":1,"message":"557","line":32,"column":11,"nodeType":"531","messageId":"532","endLine":32,"endColumn":16},{"ruleId":"529","severity":1,"message":"558","line":32,"column":18,"nodeType":"531","messageId":"532","endLine":32,"endColumn":25},{"ruleId":"529","severity":1,"message":"603","line":32,"column":27,"nodeType":"531","messageId":"532","endLine":32,"endColumn":35},{"ruleId":"537","severity":1,"message":"604","line":38,"column":6,"nodeType":"539","endLine":38,"endColumn":8,"suggestions":"605"},{"ruleId":"529","severity":1,"message":"551","line":1,"column":17,"nodeType":"531","messageId":"532","endLine":1,"endColumn":26},{"ruleId":"529","severity":1,"message":"553","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":16},{"ruleId":"529","severity":1,"message":"602","line":11,"column":10,"nodeType":"531","messageId":"532","endLine":11,"endColumn":25},{"ruleId":"529","severity":1,"message":"560","line":12,"column":10,"nodeType":"531","messageId":"532","endLine":12,"endColumn":21},{"ruleId":"529","severity":1,"message":"596","line":12,"column":23,"nodeType":"531","messageId":"532","endLine":12,"endColumn":34},{"ruleId":"529","severity":1,"message":"552","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"529","severity":1,"message":"553","line":5,"column":9,"nodeType":"531","messageId":"532","endLine":5,"endColumn":15},{"ruleId":"529","severity":1,"message":"583","line":5,"column":17,"nodeType":"531","messageId":"532","endLine":5,"endColumn":22},{"ruleId":"529","severity":1,"message":"573","line":2,"column":29,"nodeType":"531","messageId":"532","endLine":2,"endColumn":33},{"ruleId":"529","severity":1,"message":"606","line":45,"column":7,"nodeType":"531","messageId":"532","endLine":45,"endColumn":21},{"ruleId":"529","severity":1,"message":"607","line":12,"column":24,"nodeType":"531","messageId":"532","endLine":12,"endColumn":37},{"ruleId":"529","severity":1,"message":"608","line":2,"column":8,"nodeType":"531","messageId":"532","endLine":2,"endColumn":17},{"ruleId":"529","severity":1,"message":"553","line":3,"column":10,"nodeType":"531","messageId":"532","endLine":3,"endColumn":16},{"ruleId":"529","severity":1,"message":"553","line":2,"column":10,"nodeType":"531","messageId":"532","endLine":2,"endColumn":16},{"ruleId":"529","severity":1,"message":"583","line":2,"column":29,"nodeType":"531","messageId":"532","endLine":2,"endColumn":34},{"ruleId":"529","severity":1,"message":"609","line":2,"column":9,"nodeType":"531","messageId":"532","endLine":2,"endColumn":32},{"ruleId":"529","severity":1,"message":"530","line":2,"column":8,"nodeType":"531","messageId":"532","endLine":2,"endColumn":14},{"ruleId":"529","severity":1,"message":"533","line":3,"column":8,"nodeType":"531","messageId":"532","endLine":3,"endColumn":14},{"ruleId":"529","severity":1,"message":"557","line":13,"column":13,"nodeType":"531","messageId":"532","endLine":13,"endColumn":18},{"ruleId":"529","severity":1,"message":"558","line":13,"column":20,"nodeType":"531","messageId":"532","endLine":13,"endColumn":27},{"ruleId":"537","severity":1,"message":"587","line":23,"column":8,"nodeType":"539","endLine":23,"endColumn":10,"suggestions":"610"},"no-native-reassign",["611"],"no-negated-in-lhs",["612"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Slider1' is defined but never used.","'EmergencyOrderVerifyScreen' is defined but never used.","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["613"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"614","text":"615"},{"range":"616","text":"615"},"'ListGroup' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'useDispatch' is defined but never used.","'alert' is assigned a value but never used.","'contat_us' is assigned a value but never used.","'swal' is defined but never used.","'Component' is defined but never used.","'LOAD_USER_PROFILE_RESET' is defined but never used.","'setMessage' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Rating' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isAuthenticated', and 'location'. Either include them or remove the dependency array.",["617"],"'FormContainer' is defined but never used.","'useHistory' is defined but never used.","'Form' is defined but never used.","'SearchBox' is defined but never used.",["618"],"'Card' is defined but never used.","'BLOG_COMMENT_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["619"],"'CheckoutSteps' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order.id'. Either include them or remove the dependency array.",["620"],"'Image' is defined but never used.","'Redirect' is defined but never used.",["621"],"'currentCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["622"],"'post' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'NavDropdown' is defined but never used.","'user' is assigned a value but never used.","'data' is assigned a value but never used.","'useSelector' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"range":"623","text":"615"},"'getProductClass' is defined but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["624"],"'HandlePrevious' is assigned a value but never used.","'setFileUpload' is assigned a value but never used.","'PropTypes' is defined but never used.","'EMERGENCY_ORDER_REQUEST' is defined but never used.",["625"],"no-global-assign","no-unsafe-negation",{"desc":"626","fix":"627"},[2300,2300]," rel=\"noreferrer\"",[2509,2509],{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},[304,304],{"desc":"640","fix":"641"},{"desc":"638","fix":"642"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"643","text":"644"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, location, match, successProductReview]",{"range":"645","text":"646"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, keyword, location]",{"range":"647","text":"648"},"Update the dependencies array to be: [dispatch, blogCommentSuccess, match.params.id]",{"range":"649","text":"650"},"Update the dependencies array to be: [success, history, order.id, dispatch]",{"range":"651","text":"652"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]",{"range":"653","text":"654"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"655","text":"656"},"Update the dependencies array to be: [dispatch]",{"range":"657","text":"658"},{"range":"659","text":"656"},[434,436],"[checkAuthenticated, load_user]",[1810,1849],"[dispatch, history, isAuthenticated, location, match, successProductReview]",[1489,1508],"[dispatch, history, isAuthenticated, keyword, location]",[1171,1201],"[dispatch, blogCommentSuccess, match.params.id]",[1150,1168],"[success, history, order.id, dispatch]",[2506,2560],"[dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]",[870,872],"[dispatch, match.params.id]",[1994,1996],"[dispatch]",[870,872]]