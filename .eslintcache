[{"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\App.js":"3","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\store.js":"4","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\ScrollToTop.js":"5","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\utils\\Monnify.js":"6","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\PrescriptionForm.js":"7","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\contactReducer.js":"8","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\userReducers.js":"9","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\productReducers.js":"10","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\prescriptionReducer.js":"11","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\orderReducers.js":"12","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\baseReducers.js":"13","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\Contact.js":"14","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\emergencyReducer.js":"15","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\Home.js":"16","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\About.js":"17","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\servicesScreen.js":"18","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\PrescriptionForm.js":"19","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\EmergencyScreen.js":"20","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\SignUpScreen.js":"21","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\PolicyScreen.js":"22","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\SignInScreen.js":"23","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordResetComplete..js":"24","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js":"25","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\UserProfile.js":"26","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\ActivateAccount.js":"27","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\RegisterScreen.js":"28","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js":"29","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductsScreen.js":"30","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductClassScreen.js":"31","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\Shop.js":"32","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\cartScreen\\CartScreen.js":"33","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\shippingScreens\\ShippingScreen.js":"34","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\paymentScreen\\PaymentScreen.js":"35","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\TermsScreen.js":"36","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\orderScreens\\OrderScreen.js":"37","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogHomeScreen.js":"38","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogListScreen.js":"39","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js":"40","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js":"41","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\blogReducers.js":"42","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\cartReducers.js":"43","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\authReducers.js":"44","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\LoginScreen.js":"45","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordReset.js":"46","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js":"47","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Header.js":"48","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\FloatingAction.js":"49","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Footer.js":"50","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Carousel.js":"51","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Message.js":"52","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\types.js":"53","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\prescriptionAction.js":"54","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\CheckoutSteps.js":"55","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Loader.js":"56","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\_authFooter.js":"57","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\authActions.js":"58","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\_authNavigation.js":"59","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\orderActions.js":"60","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\blogActions.js":"61","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\contactAction.js":"62","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\spinners\\LoadingMain.js":"63","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\blog\\Blog.js":"64","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\spinners\\StoreSpinner.js":"65","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\index\\indexSlider.js":"66","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\constants\\orderConstants.js":"67","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\partnership.js":"68","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\blog\\BlogCarousel.js":"69","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Terms.js":"70","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\SearchProduct.js":"71","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\cartActions.js":"72","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\multivitamins.js":"73","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Product.js":"74","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Paginate.js":"75","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Rating.js":"76","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\RegisterDetailsVerify.js":"77","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\EmergencyOrderVerifyScreen.js":"78","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\_AccountData.js":"79","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\_BioData.js":"80","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\constants\\productConstants.js":"81","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\analgesics.js":"82","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\antibiotics.js":"83","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\productActions.js":"84","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\AxiosIntercept.js":"85","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Navigation.js":"86","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Navbar.js":"87","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\_TextInput.js":"88","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\baseActions.js":"89","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\emergency\\RequestForm.js":"90","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\emergency\\DeliveyForm.js":"91","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\emergencyorderAction.js":"92","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Sidebar.js":"93","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\index\\packageSlider.js":"94","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\CoreInfoCard.js":"95","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\TeamMember.js":"96"},{"size":670,"mtime":1667839763888,"results":"97","hashOfConfig":"98"},{"size":375,"mtime":1667839764009,"results":"99","hashOfConfig":"98"},{"size":4755,"mtime":1668033875895,"results":"100","hashOfConfig":"98"},{"size":3694,"mtime":1667839764008,"results":"101","hashOfConfig":"98"},{"size":377,"mtime":1668031940426,"results":"102","hashOfConfig":"98"},{"size":2725,"mtime":1667839764247,"results":"103","hashOfConfig":"98"},{"size":4534,"mtime":1668033875910,"results":"104","hashOfConfig":"98"},{"size":530,"mtime":1667839763988,"results":"105","hashOfConfig":"98"},{"size":4090,"mtime":1667839764007,"results":"106","hashOfConfig":"98"},{"size":6427,"mtime":1667839764005,"results":"107","hashOfConfig":"98"},{"size":613,"mtime":1667839764004,"results":"108","hashOfConfig":"98"},{"size":4266,"mtime":1667839764003,"results":"109","hashOfConfig":"98"},{"size":582,"mtime":1667839763979,"results":"110","hashOfConfig":"98"},{"size":4305,"mtime":1667839764171,"results":"111","hashOfConfig":"98"},{"size":561,"mtime":1667839763996,"results":"112","hashOfConfig":"98"},{"size":6474,"mtime":1668033875992,"results":"113","hashOfConfig":"98"},{"size":3129,"mtime":1668076300515,"results":"114","hashOfConfig":"98"},{"size":1821,"mtime":1667839764188,"results":"115","hashOfConfig":"98"},{"size":768,"mtime":1667839764185,"results":"116","hashOfConfig":"98"},{"size":3939,"mtime":1667839764174,"results":"117","hashOfConfig":"98"},{"size":4054,"mtime":1667839764157,"results":"118","hashOfConfig":"98"},{"size":1354,"mtime":1667839764177,"results":"119","hashOfConfig":"98"},{"size":2847,"mtime":1667839764155,"results":"120","hashOfConfig":"98"},{"size":863,"mtime":1667839764144,"results":"121","hashOfConfig":"98"},{"size":3180,"mtime":1667839764152,"results":"122","hashOfConfig":"98"},{"size":5461,"mtime":1667839764158,"results":"123","hashOfConfig":"98"},{"size":1622,"mtime":1667839764124,"results":"124","hashOfConfig":"98"},{"size":5892,"mtime":1667839764164,"results":"125","hashOfConfig":"98"},{"size":13303,"mtime":1667839764217,"results":"126","hashOfConfig":"98"},{"size":3525,"mtime":1667839764219,"results":"127","hashOfConfig":"98"},{"size":4557,"mtime":1667839764216,"results":"128","hashOfConfig":"98"},{"size":4759,"mtime":1667839764221,"results":"129","hashOfConfig":"98"},{"size":6346,"mtime":1667839764197,"results":"130","hashOfConfig":"98"},{"size":4611,"mtime":1667839764222,"results":"131","hashOfConfig":"98"},{"size":2394,"mtime":1667839764214,"results":"132","hashOfConfig":"98"},{"size":734,"mtime":1667839764186,"results":"133","hashOfConfig":"98"},{"size":10527,"mtime":1667839764208,"results":"134","hashOfConfig":"98"},{"size":2751,"mtime":1667839764193,"results":"135","hashOfConfig":"98"},{"size":3404,"mtime":1667839764195,"results":"136","hashOfConfig":"98"},{"size":5237,"mtime":1667839764191,"results":"137","hashOfConfig":"98"},{"size":3996,"mtime":1667839764190,"results":"138","hashOfConfig":"98"},{"size":2736,"mtime":1667839763981,"results":"139","hashOfConfig":"98"},{"size":1535,"mtime":1667839763987,"results":"140","hashOfConfig":"98"},{"size":3380,"mtime":1667839763957,"results":"141","hashOfConfig":"98"},{"size":4884,"mtime":1667839764133,"results":"142","hashOfConfig":"98"},{"size":2183,"mtime":1667839764143,"results":"143","hashOfConfig":"98"},{"size":5934,"mtime":1667839764212,"results":"144","hashOfConfig":"98"},{"size":619,"mtime":1668033875910,"results":"145","hashOfConfig":"98"},{"size":621,"mtime":1668033875895,"results":"146","hashOfConfig":"98"},{"size":2069,"mtime":1668033875895,"results":"147","hashOfConfig":"98"},{"size":1207,"mtime":1667839763583,"results":"148","hashOfConfig":"98"},{"size":240,"mtime":1667839763606,"results":"149","hashOfConfig":"98"},{"size":8552,"mtime":1667839763953,"results":"150","hashOfConfig":"98"},{"size":1203,"mtime":1667839763939,"results":"151","hashOfConfig":"98"},{"size":1944,"mtime":1667839763585,"results":"152","hashOfConfig":"98"},{"size":479,"mtime":1667839763605,"results":"153","hashOfConfig":"98"},{"size":1698,"mtime":1667839763671,"results":"154","hashOfConfig":"98"},{"size":10118,"mtime":1667839763920,"results":"155","hashOfConfig":"98"},{"size":2212,"mtime":1667839763672,"results":"156","hashOfConfig":"98"},{"size":6871,"mtime":1667839763937,"results":"157","hashOfConfig":"98"},{"size":3968,"mtime":1667839763923,"results":"158","hashOfConfig":"98"},{"size":992,"mtime":1667839763926,"results":"159","hashOfConfig":"98"},{"size":484,"mtime":1667839763700,"results":"160","hashOfConfig":"98"},{"size":703,"mtime":1667839763648,"results":"161","hashOfConfig":"98"},{"size":260,"mtime":1667839763708,"results":"162","hashOfConfig":"98"},{"size":1956,"mtime":1668033875926,"results":"163","hashOfConfig":"98"},{"size":1270,"mtime":1667839763716,"results":"164","hashOfConfig":"98"},{"size":1730,"mtime":1668033875926,"results":"165","hashOfConfig":"98"},{"size":1190,"mtime":1667839763649,"results":"166","hashOfConfig":"98"},{"size":1453,"mtime":1667839763643,"results":"167","hashOfConfig":"98"},{"size":1416,"mtime":1667839763635,"results":"168","hashOfConfig":"98"},{"size":1377,"mtime":1667839763925,"results":"169","hashOfConfig":"98"},{"size":4023,"mtime":1667839763683,"results":"170","hashOfConfig":"98"},{"size":1381,"mtime":1667839763622,"results":"171","hashOfConfig":"98"},{"size":895,"mtime":1667839763608,"results":"172","hashOfConfig":"98"},{"size":1957,"mtime":1667839763625,"results":"173","hashOfConfig":"98"},{"size":2188,"mtime":1667839764162,"results":"174","hashOfConfig":"98"},{"size":2528,"mtime":1667839764172,"results":"175","hashOfConfig":"98"},{"size":9666,"mtime":1667839764166,"results":"176","hashOfConfig":"98"},{"size":11941,"mtime":1667839764168,"results":"177","hashOfConfig":"98"},{"size":1538,"mtime":1667839763718,"results":"178","hashOfConfig":"98"},{"size":4081,"mtime":1667839763680,"results":"179","hashOfConfig":"98"},{"size":3514,"mtime":1667839763682,"results":"180","hashOfConfig":"98"},{"size":9546,"mtime":1667839763951,"results":"181","hashOfConfig":"98"},{"size":601,"mtime":1667839764125,"results":"182","hashOfConfig":"98"},{"size":626,"mtime":1668033875910,"results":"183","hashOfConfig":"98"},{"size":2709,"mtime":1668033875910,"results":"184","hashOfConfig":"98"},{"size":567,"mtime":1667839764159,"results":"185","hashOfConfig":"98"},{"size":669,"mtime":1667839763922,"results":"186","hashOfConfig":"98"},{"size":9547,"mtime":1667839763661,"results":"187","hashOfConfig":"98"},{"size":2331,"mtime":1667839763659,"results":"188","hashOfConfig":"98"},{"size":1559,"mtime":1667839763935,"results":"189","hashOfConfig":"98"},{"size":3579,"mtime":1668070311718,"results":"190","hashOfConfig":"98"},{"size":2454,"mtime":1668033875926,"results":"191","hashOfConfig":"98"},{"size":499,"mtime":1668074352740,"results":"192","hashOfConfig":"98"},{"size":372,"mtime":1668076083387,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"frghb5",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"196"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"196"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"196"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"196"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"196"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"196"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"196"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"196"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"196"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"196"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"196"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"196"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"196"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"196"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"196"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"196"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"196"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"196"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"196"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"196"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"196"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"196"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"196"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"196"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"329"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"196"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"196"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"196"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"196"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"196"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"196"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"196"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"196"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"196"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"196"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"196"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"196"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"196"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"196"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"196"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"196"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"196"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\index.js",[],["431","432"],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\store.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\ScrollToTop.js",["433","434"],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\utils\\Monnify.js",["435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useSelector } from \"react-redux\"\r\nimport { Redirect, useLocation } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport { payOrder } from '../redux/actions/orderActions'\r\n\r\n\r\nconst Monnify = ({history, isAuthenticated}) => {\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n    console.log(user)\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const location = useLocation()\r\n\r\n    // if(!isAuthenticated){\r\n    //   history.push({\r\n    //       pathname: \"/login\",\r\n    //       state: {\r\n    //           from: location\r\n    //       }\r\n    //   })\r\n    // } \r\n    const script = document.createElement('script')\r\n    script.type = 'text/javascript'\r\n    script.src = 'https://sdk.monnify.com/plugin/monnify.js'\r\n    script.async = true\r\n\r\n    script.onload = () => {\r\n        window.MonnifySDK.initialize({\r\n            amount: '3000',\r\n            currency: \"NGN\",\r\n            reference: '' + Math.floor((Math.random() * 1000000000) + 1),\r\n            customerName: 'Crispilion',\r\n            customerEmail: 'crispy@gmail.com',\r\n            apiKey: \"MK_TEST_JGYE5NJ1T1\",\r\n            contractCode: \"3834928931\",\r\n            paymentDescription: \"Test Pay\",\r\n            isTestMode: true,\r\n            metadata: {\r\n                    \"name\": \"Chukwuyem\",\r\n            },\r\n            paymentMethods: [\"CARD\", \"ACCOUNT_TRANSFER\"],\r\n            onComplete: function(data){\r\n                //Implement what happens when transaction is completed.\r\n                swal({\r\n                    title: \"Good job!\",\r\n                    text: \"Your have successfully subscribed to the premium version with more access to our services\",\r\n                    icon: \"success\",\r\n                    button: \"OK!\",\r\n                  });\r\n                // dispatch(payOrder(orderId, paymentResult))\r\n                //  console.log(paymentResult);\r\n            },\r\n            onClose: function(data){\r\n                //Implement what should happen when the modal is closed here\r\n                // swal({\r\n                //     title: \"Payment Unsuccessful!\",\r\n                //     text: \"Sorry, we could not process your subscription. Please try again or contact our customer support\",\r\n                //     icon: \"danger\",\r\n                //     button: \"OK!\",\r\n                //   });\r\n            }\r\n        });\r\n        setSdkReady(true)\r\n        \r\n    }\r\n    document.body.appendChild(script)\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\nexport default connect(mapStateToProps, { }) (Monnify)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\PrescriptionForm.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\contactReducer.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\userReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\productReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\prescriptionReducer.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\orderReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\baseReducers.js",["443"],"import axios from 'axios'\r\nimport {\r\n    TERMS_REQUEST,\r\n    TERMS_SUCCESS,\r\n    TERMS_FAIL,\r\n} from '../actions/types'\r\n\r\n\r\n\r\nexport const termsReducer = (state = { terms: {}}, action) => {\r\n    switch (action.type) {\r\n        case TERMS_REQUEST:\r\n            return { loading: true, terms: {}}\r\n\r\n        case TERMS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                terms: action.payload,\r\n            }\r\n\r\n        case TERMS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\Contact.js",["444","445","446","447"],"import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Container, Form } from 'react-bootstrap'\r\nimport { contactUs } from '../../redux/actions/contactAction';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/global/Header';\r\n\r\nconst Contact = () => {\r\n    const [name, setname] = useState([])\r\n    const [email, setEmail] = useState([])\r\n    const [subject, setSubject] = useState([])\r\n    const [message, setMessage] = useState([])\r\n    const [alert, setAlert] = useState('')\r\n\r\n    const contact = useSelector(state => state.contact)\r\n    const { error, loading, contat_us } = contact\r\n    const dispatch = useDispatch()\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        console.log(name)\r\n        dispatch(contactUs(name, email, subject, message));\r\n        setAlert(\"Welcome! Click on the link sent to your email to activate your account\")\r\n        \r\n    };\r\n    console.log(subject)\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Container className=\"content auth-container\">\r\n               <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Contact Us</title>\r\n            </Helmet>\r\n                <div className=\"contact\">\r\n                    <Form classNam=\"auth-form\" onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                            <Form.Control \r\n                                required\r\n                                style={{backgroundColor:\"white\"}}\r\n                                className=\"contact-input\" \r\n                                type=\"name\" \r\n                                placeholder=\"Name\" \r\n                                value={name}\r\n                                onChange={(e) => setname(e.target.value)}\r\n                        \r\n                                />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                            <Form.Control \r\n                                required\r\n                                style={{backgroundColor:\"white\"}}\r\n                                className=\"contact-input\" \r\n                                type=\"email\" \r\n                                placeholder=\"Enter Email\" \r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                              \r\n                                />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"subject\">\r\n                            <Form.Control \r\n                                required\r\n                                style={{backgroundColor:\"white\"}}\r\n                                className=\"contact-input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Subject\" \r\n                                value={subject}\r\n                                onChange={(e) => setSubject(e.target.value)}\r\n                          \r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"message\">\r\n                            <Form.Control \r\n                                required\r\n                                style={{backgroundColor:\"white\"}}\r\n                                as=\"textarea\"\r\n                                cols=\"15\"\r\n                                className=\"contact-input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Message\" \r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                          \r\n                            />\r\n                        </Form.Group>\r\n                        <div className='d-grid gap-2' size=\"lg\">\r\n                            <Button className=\"contact-input\" type='submit' variant='primary'>Submit</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                \r\n    </Container>\r\n    <Footer />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\emergencyReducer.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\Home.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\About.js",["448","449","450","451","452"],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\servicesScreen.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\PrescriptionForm.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\EmergencyScreen.js",["453","454","455","456","457"],"import React, {useState} from 'react'\r\nimport { Button, Container, Form, Image } from 'react-bootstrap'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/global/Header'\r\nimport RequestForm from '../../components/emergency/RequestForm'\r\nimport DeliveyForm from '../../components/emergency/DeliveyForm'\r\nimport EmergencyOrderVerifyScreen from './EmergencyOrderVerifyScreen'\r\nimport { connect } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nconst EmergencyScreen = ({isAuthenticated, history}) => {\r\n\r\n  // Steps\r\nconst [activeStep, setActiveStep] = useState(0)\r\n\r\nconst getSteps = () =>{\r\n  return [\"Request Form\", \"Delivery Form\"]\r\n}\r\n\r\nconst steps = getSteps()\r\n// State Variables\r\nconst [multiFormValues, setMultiformValues] = useState({\r\n  tel:\"\",\r\n  extraInfo:\"\",\r\n  recipientName:\"\",\r\n  recipientTel:\"\",\r\n  pickUpAddress:\"\",\r\n  deliveryAddress:\"\",\r\n  location:\"\",\r\n  image:\"\",\r\n  productName:\"\",\r\n  brand:\"\",\r\n  orderCategory:\"\",\r\n  storageSystem:\"\",\r\n  dosageForm:\"\",\r\n  strength:\"\",\r\n  packSize:\"\",\r\n})\r\n\r\nconst [errors, setErrors] = useState({})\r\n\r\n//Handle Form values on change\r\nconst handleChange = (input) => (e) =>{\r\n  setMultiformValues({...multiFormValues, [input]: e.target.value})\r\n\r\n  if(!!errors[input])\r\n  setErrors({\r\n    ...errors,\r\n    [input]:null\r\n  })\r\n}\r\n\r\nconst validateInput = () =>{\r\n  const {orderCategory, brand, productName, dosageForm, strength, packSize, recipientName, recipientTel, deliveryAddress} = multiFormValues\r\n  const newErrors={}\r\n  if(!orderCategory || orderCategory === \"\") newErrors.orderCategory = \"Select product category\"\r\n  if(!productName || productName === \"\") newErrors.productName = \"Enter  product name\"\r\n  if(!brand || brand === \"\") newErrors.brand = \"Enter product brand\"\r\n  if(!dosageForm || dosageForm === \"\") newErrors.dosageForm = \"Select dosage form\"\r\n  if(!strength || strength === \"\") newErrors.strength = \"Enter dose/strength\"\r\n  if(!packSize || packSize === \"\") newErrors.packSize = \"Enter quantity\"\r\n  // if(!recipientName || recipientName === \"\") newErrors.recipientName = \"Recipient name is required\"\r\n  // if(!recipientTel || recipientTel === \"\") newErrors.recipientTel = \"Enter Recipient phone number\"\r\n  // if(!deliveryAddress || deliveryAddress === \"\") newErrors.deliveryAddress = \"Enter the delivery address\"\r\n\r\n  return newErrors\r\n}\r\n\r\n// Handle next\r\nconst HandleNext = () =>{\r\n  const inputErrors = validateInput()\r\n  if(Object.keys(inputErrors).length > 0){\r\n    setErrors(inputErrors)\r\n  } else{\r\n    setActiveStep((nextStep) => nextStep + 1)\r\n  }\r\n  \r\n}\r\n\r\n// Handle Previous Step\r\nconst HandlePrevious = () =>{\r\n  setActiveStep((previousStep) => previousStep - 1)\r\n}\r\nconst location = useLocation()\r\n\r\nif(!isAuthenticated){\r\n  history.push({\r\n      pathname: \"/login\",\r\n      state: {\r\n          from: location\r\n      }\r\n  })\r\n} \r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='mt-5'>\r\n        <Image src='/assets/images/shop/ems-ad2.png' className='emergency__image'/>\r\n      </div>\r\n      <Container className='emergency'>\r\n          {activeStep === 0 && (\r\n          <RequestForm values={multiFormValues} handleChange = {handleChange} handleErrors={errors} /> \r\n          )}\r\n\r\n          {activeStep === 1 && (\r\n          <DeliveyForm values={multiFormValues} handleChange = {handleChange} handleErrors={errors} /> \r\n          )}\r\n          {activeStep === 2 && (\r\n          <EmergencyOrderVerifyScreen values={multiFormValues} handleChange = {handleChange} /> \r\n          )}\r\n      <Button style={activeStep === 2 ? {display:\"none\"}: {}} className='emergency__btn emergency__btn__next' onClick={HandleNext}>{activeStep === steps.length - 1?\"Verify\":\"NEXT\"}</Button>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { }) (EmergencyScreen)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\SignUpScreen.js",["458","459","460","461","462","463","464","465","466"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { signup } from '../../redux/actions/authActions'\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './_TextInput';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignUpScreen = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [username, setUsername] = useState([])\r\n  const [email, setEmail] = useState([])\r\n  const [password, setPassword] = useState([])\r\n  const [re_password, setRe_password] = useState([])\r\n  const [message, setMessage] = useState('')\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector(state => state.auth)\r\n  const { error, loading, userInfo } = auth\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      if (password !== re_password) {\r\n          setMessage('Both passwords must be the same')\r\n      } else {\r\n          dispatch(signup(username, email, password, re_password));\r\n          setAccountCreated(true);\r\n      }\r\n  }\r\n  \r\n  const validate = Yup.object().shape({\r\n    username: Yup.string()\r\n      .max(15, 'Must be 20 characters or less')\r\n      .required('Username is required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, \"A minimum of 6 characters is required\")\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm your password'),\r\n  })\r\n  \r\n  if (accountCreated) {\r\n      return <Redirect to='/login' />\r\n  }\r\n\r\n  if (isAuthenticated){\r\n      return <Redirect to=\"/\" />\r\n      }\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"content auth-container\">\r\n         <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Create your Flolog Account</title>\r\n            </Helmet>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        }}\r\n        validationSchema={validate}\r\n        onSubmit={values => {\r\n          console.log(values)\r\n        }}\r\n      >\r\n        {({errors, touched}) => (\r\n          <div>\r\n            <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField \r\n                name=\"username\" \r\n                label=\"Username\"\r\n                type=\"text\" \r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"email\" \r\n                label=\"Email\"\r\n                type=\"email\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"password\" \r\n                label=\"Password\"\r\n                type=\"password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              <TextField \r\n                name=\"confirmPassword\" \r\n                label=\"Confirm Password\"\r\n                type=\"password\" \r\n                value={re_password}\r\n                onChange={(e) => setRe_password(e.target.value)}\r\n                />\r\n              <button className=\"btn btn-primary mt-3\" type=\"submit\">Register</button>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {signup}) (SignUpScreen)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\PolicyScreen.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\SignInScreen.js",["467","468","469","470","471","472"],"import React, { useState} from 'react'\r\nimport { Container, Button} from 'react-bootstrap'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link, Redirect, useLocation } from 'react-router-dom'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { login } from '../../redux/actions/authActions'\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './_TextInput';\r\nimport * as Yup from 'yup';\r\n\r\nconst SignInScreen = ({ isAuthenticated }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n    const {state: {from = \"/\"} = {} } = useLocation();\r\n    \r\n    const auth = useSelector(state => state.auth)\r\n    const { error, loading } = auth\r\n        \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n    if (isAuthenticated){\r\n        return <Redirect to={from} />\r\n    }\r\n\r\n\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n        password: Yup.string()\r\n        .min(6, 'Password must be at least 6 charaters')\r\n        .required('Password is required'),\r\n    })\r\n    return (\r\n        <Container className=\"content auth-container\">\r\n               <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Sign In</title>\r\n            </Helmet>\r\n        <Formik\r\n            initialValues={{\r\n            email: '',\r\n            password: '',\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={values => {\r\n            }}\r\n        >\r\n            {formik => (\r\n            <div>\r\n                <h1 className=\"my-4 font-weight-bold .display-4\">Sign In</h1>\r\n                <Form onSubmit={submitHandler}>\r\n                <TextField  \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                <TextField \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Enter Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                <button className=\"btn btn-primary mt-3\" type=\"submit\">Login</button>\r\n                </Form>\r\n            </div>\r\n            )}\r\n        </Formik>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\nexport default connect(mapStateToProps, {login}) (SignInScreen)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordResetComplete..js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordResetConfirm.js",["473"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { reset_password_confirm } from '../../redux/actions/authActions';\r\nimport AuthNavigation from '../../components/global/_authNavigation'\r\nimport AuthFooter from '../../components/global/_authFooter'\r\n\r\nconst PasswordResetConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [new_password, setNew_password] = useState('')\r\n    const [re_new_password, setRe_new_password] = useState('')\r\n\r\n    //const dispatch = useDispatch()\r\n\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        reset_password_confirm(uid, token, new_password, re_new_password)\r\n        //dispatch(reset_password_confirm(uid, token, new_password, re_new_password));\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/reset-password-complete' />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <AuthNavigation />\r\n        <Container className=' auth-container' style={{marginTop:'10rem'}}>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>password reset complete</title>\r\n            </Helmet>\r\n                <div className=' auth-header text-center'>\r\n                    <p className=\"auth-base\"> Enter a new password</p>\r\n                </div>\r\n                <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type=\"password\" \r\n                            variant=\"lg\"\r\n                            placeholder=\"Password\" \r\n                            value={new_password}\r\n                            onChange={(e) => setNew_password(e.target.value)}\r\n                            minLength='6'\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type=\"password\" \r\n                            variant=\"lg\"\r\n                            placeholder=\"Password\" \r\n                            value={re_new_password}\r\n                            onChange={(e) => setRe_new_password(e.target.value)}\r\n                            minLength='6'\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\r\n                </Form>\r\n        </Container>\r\n        <AuthFooter />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default connect(null, { reset_password_confirm })(PasswordResetConfirm);\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\UserProfile.js",["474","475","476","477","478","479","480","481","482","483","484","485","486"],"import React, { Component, useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector, connect} from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { LOAD_USER_PROFILE_RESET } from '../../redux/actions/types'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { load_user_profile } from '../../redux/actions/authActions'\r\n\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nfunction UserProfile({location, history, isAuthenticated}) {\r\n    \r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [company, setCompany] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [telephone, setTelephone] = useState('')\r\n  \r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const { user } = auth\r\n    \r\n    const profileInfo = useSelector(state => state.profileInfo)\r\n    const {  error, loading, userInfo } = profileInfo\r\n    console.log(userInfo)\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            history.push('/login')\r\n        } else {\r\n                setUsername(user.username)\r\n                setEmail(user.email)\r\n                setImage(userInfo.image)\r\n                setCompany(userInfo.company)\r\n                setTelephone(userInfo.telephone)\r\n            }\r\n        \r\n    }, [history, isAuthenticated, userInfo, user])\r\n\r\n    const capitalizeFirstLetter = (word) => {\r\n        if (word)\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        return '';\r\n    };\r\n    return (\r\n        <div className=''>\r\n            <Header />\r\n               <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Profle</title>\r\n            </Helmet>\r\n       \r\n            <Container className='profile'>\r\n            <div className='profile__header__wrapper'>\r\n                <h2>My Account</h2>\r\n                <div className=\"profile__header\">\r\n                    <img className='profile__image img-fluid rounded-circle  my-5' src='/assets/images/icons/profile.png'  alt=''/>\r\n                    <div className='profile__header__text-wrapper'>\r\n                        <h2>{capitalizeFirstLetter(username)} </h2>\r\n                        <p>{email}</p>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            <Form className=\"auth__form profile-container mt-4 mx-auto\" >\r\n                <Row>\r\n                    <Col sm={12} md={6}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                            <Form.Label className=\"auth__form__label\" >Username</Form.Label>\r\n                            <Form.Control \r\n                                className=\"auth__form__control\" \r\n                                type=\"text\" \r\n                                value={username} \r\n                                disabled\r\n                                size='lg'\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\r\n                        <Form.Label className=\"auth__form__label\">Email Address</Form.Label>\r\n                            <Form.Control \r\n                                className=\"auth__form__control\" \r\n                                type=\"email\" \r\n                                value={email} \r\n                                disabled\r\n                                size='lg'\r\n                            />\r\n                    </Form.Group>\r\n                    </Col>\r\n                    <Col sm={12} md={6}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"telephone\">\r\n                        <Form.Label className=\"auth__form__label\">Mobile Number</Form.Label>\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type=\"text\" \r\n                            value={telephone ? telephone : \"\"  }\r\n                            disabled\r\n                            size='lg' \r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"shippingAddress\">\r\n                        <Form.Label className=\"auth__form__label\">Shipping Address</Form.Label>\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type=\"text\"\r\n                            // value={address ? address : \"\"}\r\n                            disabled\r\n                            size='lg' \r\n                        />\r\n                    </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n                        {/*<Button className=\"auth-button btn btn-block w-100\" variant=\"primary\" value=\"reset\"> Save</Button>*/}\r\n            </Form>\r\n            </Container>\r\n            \r\n        <Footer />     \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {load_user_profile}) (UserProfile)\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\ActivateAccount.js",["487"],"import React, { useState } from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {Container, Form, Button} from 'react-bootstrap'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { verify } from '../../redux/actions/authActions';\r\nimport swal from 'sweetalert';\r\n\r\nconst ActivateAccount = ({ verify, match }) => {\r\n    const [activated, setActivated] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const accountActivation = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        dispatch(verify(uid, token));\r\n        setActivated(true);\r\n    };\r\n\r\n    if (activated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Container className=' auth-container pt-4'>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Activate your flolog Account</title>\r\n            </Helmet>\r\n            <Form className=\"auth-form\">\r\n                <Button \r\n                    className=\"auth-button btn btn-block w-100\" \r\n                    type=\"submit\"\r\n                    onClick={accountActivation}\r\n                    >\r\n                        Activate Account\r\n                    </Button>\r\n            </Form>\r\n            <div className=\"account-activate\">\r\n                <p>After clicking on the activation button, you will be redirected to the homepage of our website. If not, please use this <Link to=\"/\">Link</Link></p>\r\n            </div>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default connect(null, { verify })(ActivateAccount);","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\RegisterScreen.js",["488","489","490","491","492","493","494","495","496","497"],"import React, {useState} from 'react'\r\nimport { Button, Container, Form, Image } from 'react-bootstrap'\r\nimport AuthNavigation from '../../../components/global/_authNavigation'\r\nimport { signup } from '../../../redux/actions/authActions'\r\nimport BioData from './_BioData'\r\nimport AccountData from './_AccountData'\r\nimport EmergencyOrderVerifyScreen from '../../baseScreens/EmergencyOrderVerifyScreen'\r\nimport AuthFooter from '../../../components/global/_authFooter'\r\nimport { Link } from 'react-router-dom'\r\nimport RegisterDetailsVerify from './RegisterDetailsVerify'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../../components/Message'\r\nimport Loader from '../../../components/Loader'\r\n\r\n\r\nconst RegisterScreen = ({ signup, isAuthenticated }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector(state => state.auth)\r\n  const { error, loading, userInfo } = auth\r\n\r\n    // Steps\r\n    const [activeStep, setActiveStep] = useState(0)\r\n\r\n    const getSteps = () =>{\r\n        return [\"Bio Data\", \"Account Data\"]\r\n    }\r\n\r\n    const steps = getSteps()\r\n    // State Variables\r\n    const [multiFormValues, setMultiformValues] = useState({\r\n        email:\"\",\r\n        username:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        telephone: \"\",\r\n        gender:\"\",\r\n        dateOfBirth:\"\",\r\n        profession:\"\",\r\n        address:\"\",\r\n        country: \"\",\r\n        state:\"\",\r\n        city:\"\",\r\n        password:\"\",\r\n        re_password:\"\"\r\n    })\r\n\r\n    const [stepOneErrors, setStepOneErrors] = useState({})\r\n    const [stepTwoErrors, setStepTwoErrors] = useState({})\r\n\r\n    //Handle Form values on change\r\n    const handleChange = (input) => (e) =>{\r\n    setMultiformValues({...multiFormValues, [input]: e.target.value})\r\n\r\n  if(!!stepOneErrors[input]){\r\n  setStepOneErrors({\r\n    ...stepOneErrors,\r\n    [input]:null\r\n  })} else\r\n    if(!!stepTwoErrors[input]){\r\n  setStepOneErrors({\r\n    ...stepTwoErrors,\r\n    [input]:null\r\n  })\r\n  }\r\n}\r\n\r\nconst validateStepOneInput = () =>{\r\n  const {firstName, lastName, gender, dateOfBirth, address, country, state, city} = multiFormValues\r\n  const newErrors={}\r\n  if(!firstName || firstName === \"\") newErrors.firstName = \"First name is required\"\r\n  if(!lastName || lastName === \"\") newErrors.lastName = \"Last name is required\"\r\n  if(!gender || gender === \"\") newErrors.gender = \"Please select gender\"\r\n  if(!dateOfBirth || dateOfBirth === \"\") newErrors.dateOfBirth = \"Date of birth is required\"\r\n  if(!address || address === \"\") newErrors.address = \"Address is required\"\r\n  if(!country || country === \"\") newErrors.country = \"is required\"\r\n  if(!state || state === \"\") newErrors.state = \"State is required\"\r\n  if(!city || city === \"\") newErrors.city = \"City is required\"\r\n\r\n  return newErrors\r\n}\r\n\r\n  const validateStepTwoInput = () =>{\r\n    const {username, email,  telephone, profession, password, re_password} = multiFormValues\r\n    const newErrors={}\r\n    if(!username || username === \"\") newErrors.username = \"Username is required\"\r\n    if(!email || email === \"\") newErrors.email = \"email is requied\"\r\n    if(!profession || profession === \"\") newErrors.profession = \"Profession is required\"\r\n    if(!telephone || telephone === \"\") newErrors.telephone = \"Telephone is requied\"\r\n    if(!password || password === \"\") newErrors.password = \"\"\r\n    if(password === re_password) newErrors.re_password = \"Password must match\"\r\n\r\n    return newErrors\r\n  }\r\n    // Handle next\r\n    const HandleNext = () =>{\r\n    const stepOneInputErrors = validateStepOneInput()\r\n    const stepTwoInputErrors = validateStepTwoInput()\r\n\r\n    if(Object.keys(stepOneInputErrors ).length > 0) {\r\n        setStepOneErrors(stepOneInputErrors ) \r\n    }else{\r\n        setActiveStep((nextStep) => nextStep + 1)\r\n      }\r\n  \r\n  }\r\n    \r\n    // Handle Previous Step\r\n    const HandlePrevious = () =>{\r\n    setActiveStep((previousStep) => previousStep - 1)\r\n    }\r\n\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        console.log(\"Account created\")\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <AuthNavigation />\r\n      <Container className=''>\r\n        <div className='auth__form__wrapper py-4' style={{marginTop:\"10rem\"}}>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n              {loading && <Loader />}\r\n            {activeStep === 0 && (\r\n            <BioData values={multiFormValues} handleChange = {handleChange} handleErrors={stepOneErrors} /> \r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n            <AccountData values={multiFormValues} handleChange = {handleChange} handleErrors={stepTwoErrors} /> \r\n            )}\r\n            {activeStep === 2 && (\r\n            <RegisterDetailsVerify values={multiFormValues} handleChange = {handleChange} /> \r\n            )}\r\n\r\n        {/* <Button variant='secondary' disabled={activeStep === 0} style={activeStep === 2 ? {display: 'none'}: {}} className='emergency__btn emergency__btn__previous' onClick={HandlePrevious}>Previous</Button> */}\r\n        \r\n          {/* <div className='auth__policy__wrapper d-flex justify-content-center'>\r\n              <Form.Group>\r\n                  <Form.Check\r\n                      type='checkbox'\r\n                  />\r\n              </Form.Group>\r\n                          \r\n              <p>I agree to all the <Link>Terms</Link> and <Link>Privacy policy</Link></p>\r\n                      \r\n          </div> */}\r\n          <div className='auth__btnwrapper'>\r\n            <Button style={activeStep === 2 ? {display:\"none\"}: {}} className='auth__bt' onClick={HandleNext}>{activeStep === steps.length - 1?'FINAL STEP':\"NEXT\"}</Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <AuthFooter />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {signup}) (RegisterScreen)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductDetailsScreen.js",["498","499"],"import React, { useState, useEffect } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container } from 'react-bootstrap'\r\nimport Rating from '../../components/Rating'\r\nimport Message from '../../components/Message'\r\nimport { listProductDetails, createProductReview } from '../../redux/actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\r\nimport StoreSpinner from '../../components/spinners/StoreSpinner';\r\n\r\nfunction ProductScreen({ match, history, isAuthenticated }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n \r\n    const auth = useSelector(state => state.auth)\r\n    const { user  } = auth\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            if (successProductReview) {\r\n                setRating(0)\r\n                setComment('')\r\n                dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n            }\r\n            dispatch(listProductDetails(match.params.id))\r\n        }  \r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(qty <=e.target.value <=product.countInStock && qty > 0){\r\n               console.log(qty)\r\n                history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n                console.log(qty)\r\n        }else{\r\n            alert(\"Insifficient Quantity in Stock\")\r\n            }\r\n    }\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"product mx-4\" style={{marginTop:\"70px\"}}>\r\n            <Header />\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>{product.name}</title>\r\n            </Helmet>\r\n            <Container className=''>\r\n            {loading ?\r\n                <StoreSpinner />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={8} className=\"\">\r\n                                    <Image src={product.image} alt={product.name} className=\"product__details__img\" fluid />   \r\n                                    <div>\r\n                                        <div className='mb-2'>\r\n                                            <h2 className=\"product__name mt-3\">{product.name}</h2>\r\n                                            <span> {product.brand}</span>\r\n                                        </div>\r\n                                        <p>{product.dosageForm} <span>{product.strength}</span></p>\r\n                                        \r\n                                        <p> {product.description} </p> \r\n                                    </div>\r\n                                    <p>\r\n                                        {product.countInStock > 0 ? <div><p style={{color:'#68ff68', fontWeight:'700'}}>In Stock</p><p className='product__price'>&#8358; {product.price}</p></div>\r\n                                            : <p style={{color:'#F22B0C', fontWeight:'700'}}>Out of Stock</p>\r\n                                        }\r\n                                            </p>\r\n                                </Col>\r\n                            \r\n                                <Col md={4}>\r\n                                    <Card className=\"product__details__card\">\r\n                                        <ListGroup variant='flush'>\r\n                                                 <ListGroup.Item>\r\n                                                {product.countInStock > 0 ? \r\n                                                       <Form onSubmit ={handleSubmit}>\r\n                                                       <Form.Control\r\n                                                           style={{backgroundColor:\"white\", height:\"3rem\", fontSize:'1.2rem'}}\r\n                                                           type=\"number\"\r\n                                                           min='1'\r\n                                                           placeholder='Enter quantity'\r\n                                                           max={product.countInStock} \r\n                                                           onChange= {e=>setQty(e.target.value)}\r\n                                                         \r\n                                                       >\r\n                                                           \r\n\r\n                                                       </Form.Control>\r\n                                                       \r\n                                                       <div className=\"d-grid gap-2 pt-2\">\r\n                                                       <Button\r\n                                                       \r\n                                                       size=\"lg\"\r\n                                                       disabled={product.countInStock === 0}\r\n                                                       type=\"submit\">\r\n                                                       Add to Cart\r\n                                                   </Button>\r\n                                                       </div>\r\n                                                   </Form>\r\n                                                \r\n                                                    : <div className=\"d-grid gap-2 pt-2\">\r\n                                                    <Button\r\n                                                        size=\"lg\"\r\n                                                        style={{backgroundColor:\"#F1F0F0\", color:'#fff', border:\"#F1F0F0\"}}\r\n                                                        disabled={product.countInStock === 0}\r\n                                                        type=\"submit\">\r\n                                                        Add to Cart\r\n                                                    </Button>\r\n                                                    </div>}\r\n                                                 \r\n                                                </ListGroup.Item>     \r\n                                        </ListGroup>\r\n                                       \r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"product__details__feedback\">\r\n                                <Col md={6}>\r\n                            {/*\r\n                                    {product.reviews.length === 0 && <Message variant='info'>Product reviews will be shown here if present</Message>}\r\n\r\n                                    \r\n                                        {product.reviews.map((review) => (\r\n                                            <div key={review.id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.dateCreated.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                        */}\r\n                                        <ListGroup variant='flush'>\r\n                                    \r\n                                        <ListGroup.Item>\r\n                                            \r\n\r\n                                            {loadingProductReview && <StoreSpinner />}\r\n                                            {successProductReview && <Message variant='success'>Feedback was sent successfully</Message>}\r\n                                            {errorProductReview && <Message variant='warning'>Sorry, we couldn't submit your feedback. Select an option and try again OR you may have given feedback on this product before.</Message>}\r\n\r\n                                            {user ? (\r\n                                                <Form onSubmit={submitHandler} style={{fontSize:'1.5rem'}}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label className=\"mt-4\">Leave Feedback on this Product</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            size='lg'\r\n                                                            style={{boxShadow:'none', border:'#F1F0F0'}}\r\n                                                            className=\"fs-5 form-select\"\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>--Option--</option>\r\n                                                            <option value='1'>1 - Very dissatisfied</option>\r\n                                                            <option value='2'>2 - Dissatisfied</option>\r\n                                                            <option value='3'>3 - Neither satisfied nor dissatisfied</option>\r\n                                                            <option value='4'>4 - Satisfied</option>\r\n                                                            <option value='5'>5 - Very satisfied</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label className=\"mt-4\">Add a comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\r\n                                                        <Form.Control\r\n                                                            as=\"textarea\"\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        className=\"blog__comment__button\"\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'> <Link to='/login'>Sign In</Link> to Leave a feedback on this product</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n            </Container>\r\n        </div>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {listProductDetails }) ( ProductScreen )\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductsScreen.js",["500"],"import React, { useState, useEffect } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport {useLocation } from 'react-router-dom'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useDispatch, useSelector, connect} from 'react-redux'\r\nimport { Row, Col, Container, Modal} from 'react-bootstrap'\r\nimport Product from '../../components/Product'\r\nimport Message from '../../components/Message'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/Carousel'\r\nimport { listProducts } from '../../redux/actions/productActions'\r\nimport SearchProduct from '../../components/SearchProduct'\r\nimport StoreSpinner from '../../components/spinners/StoreSpinner';\r\n\r\n\r\nfunction HomeScreen({history, isAuthenticated}) {\r\n    \r\n\r\n    const location = useLocation()\r\n    const [lgShow, setLgShow] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    const keyword = history.location.search\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            dispatch(listProducts(keyword))\r\n        }  \r\n        \r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div style={{marginTop:\"50px\"}}>\r\n            <Header />\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>All products</title>\r\n            </Helmet>\r\n            {/* <div className=\"product__carousel\">\r\n                <Container className=\"py-4\">\r\n                    {<ProductCarousel />}\r\n                </Container>\r\n            </div>\r\n            <div>\r\n                <h3 className=\"intro-caption\">Africa's Premium Healthcare E-marketplace and Logisttics Solution</h3>\r\n            </div> */}\r\n\r\n            <Container className=\"product\" >\r\n                <div className='py-4'>\r\n                    <SearchProduct />\r\n                </div>\r\n                <div className='mb-4'>\r\n                    <ProductCarousel />\r\n                </div>\r\n            {loading ? <StoreSpinner />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product.id} xs={6} md={4} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n            \r\n            </Container>\r\n        <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n            <Modal.Body>\r\n               <SearchProduct />\r\n            </Modal.Body>\r\n        </Modal>\r\n        <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {listProducts }) (HomeScreen)\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\ProductClassScreen.js",["501","502","503"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { getProductClass } from '../../redux/actions/productActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Image, Row } from 'react-bootstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport StoreSpinner from '../../components/spinners/StoreSpinner';\r\n\r\nconst ProductClassScreen = ({match}) => {\r\n    const [productClass, setProductClass] = useState('');\r\n    const productClassStore = useSelector(state => state.productClass)\r\n\r\n    const { error, loading, products } = productClassStore\r\n    console.log(products)\r\n    const dispatch = useDispatch()\r\n  \r\n    useEffect(() => {\r\n        const id = match.params.id\r\n        const itemClass = match.params.id\r\n        setProductClass(itemClass);\r\n        dispatch(getProductClass(id))\r\n     \r\n    }, [])\r\n \r\n    const getProductsByClass = () => {\r\n        let list = [];\r\n        let result = [];\r\n\r\n        products.map( (product)=> {\r\n            console.log(product)\r\n            return list.push(\r\n                <div className='product__class__container'>\r\n                    <Link to={`/product/${product.id}`}>\r\n                    {/* <h2><span>Therapeutic Category: <strong> {product.productClass}</strong></span></h2> */}\r\n                        <div className=\"product__class__file__wrapper\">\r\n                           <Image className=\"product__class__file__wrapper__img\" src={product.image} alt={product.name} fluid/>\r\n                              {/* <Image className=\"post__img\" src={product.image} alt={product.name} fluid/> */}\r\n                              {/* {`${process.env.REACT_APP_API_URL}${product.image}`} */}\r\n                        </div>\r\n                        <div className='product__class__text'>\r\n                            <h2>{product.name}</h2>\r\n                            <p> &#8358; {product.price}</p>\r\n                            <p>Dosage form: {product.dosageForm}</p>\r\n                            <p>Strength: {product.strength}</p>\r\n                            {/* <h3>Strength: {product.strength}</h3> */}\r\n                           \r\n                            {/* <p className='analgesics__slider__content__button text-center'><Link to={`/product/${product.id}`}><img src=\"/assets/icons/Store.png\" alt=\"\" style={{height:\"2rem\", marginRight:\"20px\"}}/>Add to cart</Link></p> */}\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            );\r\n        });\r\n        for (let i = 0; i < list.length; i += 2) {\r\n            result.push(\r\n                <Row key={i} className='mb-2'>\r\n                    <Col className='' xs={6} md={4} lg={4} xl={3}>\r\n                        {list[i]}\r\n                    </Col>\r\n                    <Col className='' xs={6} md={4} lg={4} xl={3}>\r\n                        {list[i+1] ? list[i+1] : null}\r\n                    </Col>\r\n                    <Col className='' xs={6} md={4} lg={4} xl={3}>\r\n\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        }\r\n        return result;\r\n    };\r\n\r\n  return (\r\n    <>\r\n        <Header />\r\n        <div className='container'> \r\n            <Row>\r\n                <Col md={8}>\r\n                    <div className=\"nav-scroller py-1 mb-2\" style={{marginTop:'60px'}}>\r\n                        <nav className=\"nav d-flex justify-content-between\">\r\n                            <a className=\"drugstore__nav-link p-2 text-muted\" href='/products'>All</a>\r\n                            <a className=\"drugstore__nav-link p-2 text-muted\" href='/med/therapeutic_class/analgesics'>Pain Killers</a>\r\n                            <a className=\"drugstore__nav-link p-2 text-muted\" href='/med/therapeutic_class/antibiotics'>Antibiotics</a>\r\n                            <a className=\"drugstore__nav-link p-2 text-muted\" href=\"/med/therapeutic_class/multivitamins\">Multivitamins</a>\r\n                        </nav>\r\n                    </div>\r\n                </Col>\r\n                <Col md={4}>\r\n\r\n                </Col>\r\n            </Row>\r\n            \r\n            <div>\r\n                <h1 className='fs-1 fw-bold'>{productClass.toUpperCase()}</h1>\r\n                <div>\r\n                   {loading? <StoreSpinner /> : getProductsByClass()}\r\n                </div>\r\n                \r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductClassScreen","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\productScreens\\Shop.js",["504"],"import React, { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport Analgesics from '../../components/sliders/shop/analgesics'\r\nimport Multivitamins from '../../components/sliders/shop/multivitamins'\r\nimport Antibiotics from '../../components/sliders/shop/antibiotics'\r\nimport Header from '../../components/global/Header'\r\nimport Footer from '../../components/Footer'\r\nimport { connect} from 'react-redux'\r\nimport SearchProduct from '../../components/SearchProduct'\r\nimport ProductCarousel from '../../components/Carousel'\r\n\r\nconst Shop = ({isAuthenticated, history}) =>{\r\n\r\n    const location = useLocation()\r\n\r\n    if(!isAuthenticated){\r\n    history.push({\r\n        pathname: \"/login\",\r\n        state: {\r\n            from: location\r\n        }\r\n    })\r\n    } \r\n\r\n    return(\r\n        <>\r\n            <div className='shop mt-5'>\r\n                <Header />\r\n                <div className=\"shop__bar px-3 d-md-flex flex-row w-100\">\r\n                    <div className=\"\">\r\n                        <SearchProduct />\r\n                        {/* <Form className='shop__bar__form'>\r\n                            <Form.Group className=\"shop__bar___form__group\">\r\n                                <Form.Control className=\"shop__bar__form__control\" type='text' placeholder='search' />\r\n                            </Form.Group>\r\n                        </Form> */}\r\n                    </div>\r\n                    {/* <div className='ms-auto mt-3'>\r\n                        <p className='shop__bar__button'><Link to='/test/prescription'>Upload Prescription</Link></p>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"px-3 my-3\">\r\n                <ProductCarousel />\r\n                </div>\r\n                <div className='shop__introline d-flex'>\r\n                    <h2 className='shop__introline__header'>Painkillers</h2>\r\n                    <p className='shop__introline__allbtn ms-auto pt-ms-4'><Link to=\"/med/therapeutic_class/analgesics\" >view all</Link></p>\r\n                </div>\r\n                <div className='m-5'>\r\n                    <Analgesics />\r\n                </div>\r\n                <div className='shop__introline d-flex'>\r\n                    <h2 className='shop__introline__header'>Antibiotics</h2>\r\n                    <p className='shop__introline__allbtn ms-auto pt-ms-4'><Link to=\"/med/therapeutic_class/antibiotics\" >view all</Link></p>\r\n                </div>\r\n                <div className='m-5'>\r\n                    <Antibiotics />\r\n                </div>\r\n                {/* <div className='shop__pagedivider d-flex flex-row  justify-content-between my-5 px-5' style={{ backgroundImage: \"url('/assets/banners/Logisticsbanner.png')\"}}>\r\n                    <div > \r\n                        <Image src='' className='shop__pagedivider__icon'/>\r\n                      \r\n                    </div>\r\n                    <div className='shop__pagedivider__text'> \r\n                        <p>Get your medications delivered to you with just a click of a button</p>\r\n                    </div>\r\n                    <div className='shop__pagedivider__button text-center align-items-center justify-content-center shadow'> \r\n                        <Link to=\"/\">Learn More</Link>\r\n                    </div>\r\n                </div> */}\r\n            \r\n                <div className='shop__introline d-flex'>\r\n                    <h2 className='shop__introline__header'>Multivitamins</h2>\r\n                    <p className='shop__introline__allbtn ms-auto pt-md-4'><Link to=\"/med/therapeutic_class/multivitamins\" >view all</Link></p>\r\n                </div>\r\n                <div className='px-5 py-4'>\r\n                    <Multivitamins />\r\n                </div>\r\n                {/* <div \r\n                    className='shop__pagedivider2 d-flex flex-row justify-content-between align-items-center p-5'\r\n                    style={{ backgroundImage: \"url('/assets/images/shop/Blogbanner.png')\"}}\r\n                    >\r\n                    <h2 className='shop__pagedivider2__header'></h2>\r\n                    <div>\r\n                        <p className='shop__pagedivider2__text'>We've carefully selected topics to bring answers to all of your health-related inquiries.</p>\r\n                        <p className='shop__pagedivider2__button shadow'><Link to='/blog/posts'>Click to Visit Blog</Link></p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <TrackRecord />\r\n                </div> */}\r\n\r\n            </div>\r\n        <Footer />\r\n    </>   \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { }) (Shop)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\cartScreen\\CartScreen.js",["505","506","507"],"import React, { useEffect} from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Link, Redirect, useLocation  } from 'react-router-dom'\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\r\nimport Message from '../../components/Message'\r\nimport { addToCart, removeFromCart } from '../../redux/actions/cartActions'\r\n\r\nfunction CartScreen({ match, history, isAuthenticated }) {\r\n    const productId = match.params.id\r\n    const location = useLocation()\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            history.push('/shipping')\r\n        }  \r\n    }\r\n    const keepShopping = ()=>{\r\n        history.push('/products')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container className=\"cart\">\r\n            <Helmet>\r\n             <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>Cart Page</title>\r\n            </Helmet>\r\n            <Header />\r\n        <Row>\r\n            <Col md={8}>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        No product in the Cart <Link to='/'>Add product</Link>\r\n                    </Message>\r\n                    \r\n                ) : (\r\n                        <div variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <div key={item.product}>\r\n\r\n                                    {/* Item info */}\r\n                                    \r\n                                    <Row>\r\n                                        <Col xs={2}>\r\n                                            {/* <Image src={`${process.env.REACT_APP_API_URL}${item.image}`} alt={item.name} fluid rounded /> */}\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col xs={3} className=\"cart__item__name\">\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        \r\n                                        {/* Column for adjusting quantity of items in the cart  */}\r\n                                        \r\n                                        <Col xs={2}>\r\n                                            <Form.Control\r\n                                                style={{backgroundColor:\"white\", height:\"3rem\"}}\r\n                                                type=\"number\"\r\n                                                min=\"1\"\r\n                                                max={item.countInStock} \r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        {/* Price of item */}\r\n                                        <Col xs={3}>\r\n                                            <p className=\"cart__item__price\">&#8358; {item.price}</p>\r\n                                        </Col>\r\n\r\n                                         {/* Remove Item from Cart Column */}       \r\n                                        <Col xs={1} className=\"cart__btn\">\r\n                                            <div  onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className=\"fas fa-times cart__item__remove\"></i>\r\n                                            </div>               \r\n                                        </Col>\r\n                                        \r\n                                    </Row>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </Col>\r\n\r\n\r\n            <Col md={4}>\r\n            \r\n            </Col>\r\n        </Row>\r\n        <div className='mt-5'>\r\n            <h2 className='fw-bold'>Total Number of Items .......... {cartItems.reduce((acc, item) => acc + item.qty, 0)}</h2>\r\n            <p className='cart__item__price__total'> Sub Total ............... &#8358;{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</p>\r\n        </div>\r\n        <hr />\r\n        <div className='d-flex justify-content-between'>\r\n        <div className=\"\">\r\n                    <Button\r\n                        size=\"lg\"\r\n                        variant=\"warning\"\r\n                        onClick={keepShopping}\r\n                    >\r\n                        Add More Products\r\n                    </Button>\r\n                </div>\r\n                <div className=\"\">\r\n                    <Button\r\n                        size=\"lg\"\r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkoutHandler}\r\n                    >\r\n                        Proceed to Checkout\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n        \r\n        </Container>\r\n             <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { addToCart, removeFromCart}) (CartScreen)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\shippingScreens\\ShippingScreen.js",["508","509","510"],"import React, { useState} from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Container, Form, Button, Image, Card} from 'react-bootstrap'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../../redux/actions/cartActions'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>Billing address</title>\r\n            </Helmet>\r\n            <Header />\r\n            <Container className=' auth-container' style={{marginTop:\"10rem\"}}>\r\n            <Card className=\"p-5\">\r\n            <CheckoutSteps step1 step2 />\r\n            <h2 className=\"text-center checkout__header\">Shipping Address</h2>\r\n            {/*} {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />} */}\r\n                <Form className=\"\" onSubmit={submitHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"address\">\r\n                        <Form.Label className='auth__form__label'>Shipping Address</Form.Label>\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type='text'\r\n                            placeholder=''\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"city\">\r\n                    <Form.Label className='auth__form__label'>City</Form.Label>\r\n                        <Form.Control \r\n                            className=\"auth__form__control\" \r\n                            type='text'\r\n                            placeholder=''\r\n                            value={city ? city : ''}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            required\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId='postalCode'>\r\n                        <Form.Label className='auth__form__label'>Postal Code</Form.Label>\r\n                        <Form.Control\r\n                            className=\"auth__form__control\"\r\n                            type='text'\r\n                            placeholder=''\r\n                            value={postalCode ? postalCode : ''}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                            required\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId='country'>\r\n                        <Form.Label className='auth__form__label'>Country</Form.Label>\r\n                        <Form.Control\r\n                            className=\"auth__form__control\" \r\n                            type='text'\r\n                            placeholder=''\r\n                            value={country ? country : ''}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                            required\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                        <div className='auth__btnwrapper'>\r\n                            <Button className='auth__bt' size=\"lg\" type=\"submit\">CONTIUNE</Button>\r\n                        </div>\r\n                </Form>\r\n                </Card>\r\n        </Container>\r\n        <Footer />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\paymentScreen\\PaymentScreen.js",["511"],"import React, { useState, useEffect } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Form, Button, Col, Container } from 'react-bootstrap'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../../redux/actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Powered By Monnify')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>Payment method</title>\r\n            </Helmet>\r\n            <Header />\r\n            <Container style={{marginTop:\"10rem\" }}>\r\n           \r\n            <CheckoutSteps step1 step2 step3 />\r\n            <div className=\"auth__form__wrapper d-flex justify-content-center checkout__header\">\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            style={{fontSize:\"1.5rem\"}}\r\n                            label='Pay via Debit Card or Bank Transfer'\r\n                            id='Monnify'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <div className=\"auth__btnwrapper\">\r\n                    <Button size=\"lg\" type=\"submit\"> Continue</Button>\r\n                </div>\r\n            </Form>\r\n            </div>\r\n        </Container>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\TermsScreen.js",["512","513","514","515","516","517","518","519"],"import React, { useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Footer from '../../components/Footer'\r\nimport Header from '../../components/global/Header'\r\nimport Message from '../../components/Message'\r\nimport LoadingMain from '../../components/spinners/LoadingMain'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Terms from '../../components/Terms';\r\n\r\nconst TermsScreen = () => {\r\n    const [modalShow, setModalShow] = React.useState(true);\r\n    return (\r\n      <Container>\r\n        <Terms\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default TermsScreen","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\orderScreens\\OrderScreen.js",["520","521","522","523","524","525"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../../redux/actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../../constants/orderConstants'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport StoreSpinner from '../../components/spinners/StoreSpinner';\r\nimport swal from 'sweetalert';\r\n\r\nfunction OrderScreen({ match, history, isAuthenticated }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const payWithMonnify = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://sdk.monnify.com/plugin/monnify.js'\r\n        script.async = true\r\n        \r\n        script.onload = () => {\r\n            window.MonnifySDK.initialize({\r\n                amount: order.itemsPrice,\r\n                currency: \"NGN\",\r\n                reference: '' + Math.floor((Math.random() * 1000000000) + 1),\r\n                customerName: order.user.username,\r\n                customerEmail: order.user.email,\r\n                apiKey: \" MK_PROD_STSPKM89H4\",\r\n                contractCode: \" 991133027437\",\r\n                paymentDescription: \"Life Pay\",\r\n                isTestMode: false,\r\n                metadata: {\r\n                        \"name\": \"Flo-Log\",\r\n                        \"age\": 45\r\n                },\r\n                paymentMethods: [\"CARD\", \"ACCOUNT_TRANSFER\"],\r\n                onComplete: function(paymentResult){\r\n                    //Implement what happens when transaction is completed.\r\n                    dispatch(payOrder(orderId, paymentResult))\r\n                     console.log(paymentResult);\r\n                },\r\n                onClose: function(data){\r\n                    //Implement what should happen when the modal is closed here\r\n                    console.log(data);\r\n                }\r\n            });\r\n            setSdkReady(true)\r\n            \r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location,\r\n                }\r\n            })\r\n        } else{\r\n            if (!order || successPay || order.id !== Number(orderId) || successDeliver) {\r\n                dispatch({ type: ORDER_PAY_RESET })\r\n                dispatch({ type: ORDER_DELIVER_RESET })\r\n    \r\n                dispatch(getOrderDetails(orderId))\r\n            } //else if (!order.isPaid) {\r\n            //     swal('Please click on payment button')\r\n            //     if (!window.MonnifySDK) {\r\n            //         payWithMonnify()\r\n            //     } else {\r\n            //         setSdkReady(true)\r\n            //     }\r\n            // }\r\n        }\r\n\r\n\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    // const successPaymentHandler = (paymentResult) => {\r\n    //     dispatch(payOrder(orderId, paymentResult))\r\n    // }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <StoreSpinner />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n            <Container className=\"content\">\r\n                    <Helmet>\r\n                     <meta charSet=\"utf-8\" />\r\n                        <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                        <title>Order products</title>\r\n                    </Helmet>\r\n                    <Header />\r\n                   {/* <h1>Order: {order.Id}</h1> */}\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <p><strong>Username: </strong> {order.user.username}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping Address: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n                                    <Row>\r\n                                        <Col sm={2}>\r\n                                            <p><strong>Delivery Status:</strong></p>\r\n                                        </Col>\r\n                                        <Col sm={10}>\r\n                                        {order.isDelivered ? (\r\n                                        <Message variant='success'>Items Delivered{order.dateDelivered}</Message>\r\n                                    ) : (\r\n                                            <Message variant='info'>Not Delivered</Message>\r\n                                        )}\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                    \r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <p>\r\n                                        <strong>Payment Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    <Row><Col sm={2}><p><strong>Payment Status:</strong></p></Col>\r\n                                    <Col sm={10}>{order.isPaid ? (\r\n                                        <Message variant='success'>Payment successful{order.datePaid}</Message>\r\n                                    ) : (\r\n                                            <Message variant='info'>Not Paid</Message>\r\n                                        )}\r\n                                    </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <div>Ready to make payment</div>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row className=\"product__price\">\r\n                                            <Col><p>Sub total:</p></Col>\r\n                                            <Col><p><strong>&#8358; {order.itemsPrice}</strong></p></Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <StoreSpinner />}\r\n                                                <>\r\n                                                    <div className=\"d-grid gap-2 pt-2\">\r\n                                                        <Button\r\n                                                            size=\"lg\"\r\n                                                            onClick={payWithMonnify}\r\n                                                            >\r\n                                                            Click to Pay\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <StoreSpinner />}\r\n                                {isAuthenticated && isAuthenticated.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                 <Footer />\r\n                </>\r\n            )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n  \r\n  export default connect(mapStateToProps, { getOrderDetails, payOrder, deliverOrder }) (OrderScreen)\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogHomeScreen.js",["526"],"import React, { useEffect } from 'react';\r\nimport { Button, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport BlogCarousel from '../../components/blog/BlogCarousel';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/global/Header';\r\nimport { getFeaturedBlog } from '../../redux/actions/blogActions'\r\n\r\nconst BlogHomeScreen = () => {\r\n\r\n  const featuredBlog = useSelector(state => state.featuredBlog)\r\n  const { blog } = featuredBlog\r\n  const post = blog[0]\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n      dispatch(getFeaturedBlog())\r\n\r\n  }, [dispatch])\r\n  return (\r\n    <>\r\n    <Header />\r\n  <Container className=\"content\">\r\n    <meta charSet=\"utf-8\" />\r\n        <Helmet>\r\n        <meta name=\"description\" content=\"Health related blog content\" />\r\n        <title>Blog post categories</title>\r\n         </Helmet>\r\n    <BlogCarousel />\r\n    <h2 className=\"blog__home__vap mt-5\"><Link to=\"/blog/posts\">All Posts </Link></h2>\r\n      <div className=\"blog__home\">\r\n          <h2 className='blog__home__header'><strong>Categories: </strong></h2>\r\n          <div className='blog__home__lead'>\r\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/pharmaceuticals\">Pharmaceuticals</Link></p>\r\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/diseases\">Diseases</Link></p>\r\n          </div>\r\n          <div className='blog__home__lead mt-2'>\r\n              <p className='blog__home__lead__tab'><Link to=\"/blog/category/natural-medicine\">Natural Medicine</Link></p>\r\n              <p className='blog__home__lead__tab mx-4'><Link to=\"/blog/category/lifestyle\">Lifestyle</Link></p>\r\n          </div>\r\n      <div className=\"blog__home__bgc px-5 pb-5\">\r\n        <h4 className=\"mt-5 pt-4\"><strong>Popular Posts</strong></h4>\r\n      <hr />\r\n     \r\n      <Row>\r\n        <Col xs={12} sm={8}>\r\n          <Row>\r\n            <Col xm={4} className=\"\"> <Image className=\"blog__home__img\" src={post?.image} alt={blog?.title}  fluid/></Col>\r\n            <Col xm={8}>\r\n                <div className=''>\r\n                    <p className=\"blog__home__title\"><strong>{post?.title}</strong></p>\r\n                    <p className=\"blog__home__date\">{post?.datePublished.substring(0, 10)}</p>\r\n                    <p><Link to={`/post/${post?.slug}`}>Read More</Link></p> \r\n                </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col xs={12} sm={4}>\r\n        \r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      </div>\r\n  </Container>\r\n  <Footer />\r\n  </>\r\n  )\r\n};\r\n\r\nexport default BlogHomeScreen;\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogListScreen.js",["527","528","529"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport BlogCarousel from '../../components/blog/BlogCarousel'\r\nimport Blog from '../../components/blog/Blog'\r\nimport { listBlogs } from '../../redux/actions/blogActions'\r\nimport { getFeaturedBlog } from '../../redux/actions/blogActions'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/global/Header';\r\nimport LoadingMain from '../../components/spinners/LoadingMain';\r\nimport Message from '../../components/Message';\r\n\r\n\r\nconst BlogListScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const blogList = useSelector(state => state.blogList)\r\n    const { error, loading, blogs } = blogList\r\n\r\n    const featuredBlog = useSelector(state => state.featuredBlog)\r\n    const { blog } = featuredBlog\r\n    const post = blog[0]\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listBlogs())\r\n        dispatch(getFeaturedBlog())\r\n\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        <>\r\n        <Header />\r\n       \r\n        <Container className=\"blog__overview content\">\r\n            <meta charSet=\"utf-8\" />\r\n                <Helmet>\r\n                <meta name=\"description\" content=\"Health related blog content\" />\r\n                <title>Blog posts</title>\r\n                </Helmet>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <BlogCarousel />\r\n                </Col>\r\n                <Col md={2} sm={2} className='blog__overview__aside'>\r\n                    <div className=' blog__overview__categories ms-4'>\r\n                        <h2>Categories</h2>\r\n                        <p><Link to=\"/blog/category/diseases\">Deseases</Link></p>\r\n                        <p><Link to=\"/blog/category/pharmaceuticals\">Pharmaceuticals</Link></p>\r\n                        <p><Link to=\"/blog/category/medical_equipment\">Medical Equipment</Link></p>\r\n                        <p><Link to=\"/blog/category/lifestyle\">Lifestyle</Link></p>\r\n                        <p><Link to=\"/blog/category/health_news\">Health News</Link></p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <div className=\"blog__overview__body\">\r\n                <h3 className=\"m-0 p-0\"><strong>Recent Posts</strong></h3>\r\n                    <hr />\r\n                <div className=\"my-5\">\r\n                    {loading ? <LoadingMain /> :\r\n                        error ? <Message variant='info'>{error}</Message> :\r\n                        (\r\n                            <Row>\r\n                                {blogs.map(blog => (\r\n                                    <Col key={blog.id} sm={6} md={4} xl={3}>\r\n                                        <Blog blog={blog}/>\r\n                                    </Col>\r\n                                ))}  \r\n                            </Row>\r\n                        )\r\n                }               \r\n                </div>\r\n                <div>\r\n                    <Image src='/assets/images/shop/ems-ad1.png' className='blog__overview__body__image' />\r\n                </div>                \r\n                \r\n            </div>\r\n        </Container>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogListScreen\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogDetailsScreen.js",["530","531","532","533"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Col, Container, Form, Image, Row } from 'react-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link } from 'react-router-dom';\r\nimport { BLOG_COMMENT_RESET } from '../../redux/actions/types';\r\nimport { listBlogDetails, getBlogComment } from '../../redux/actions/blogActions';\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport LoadingMain from '../../components/spinners/LoadingMain';\r\n\r\n\r\nconst BlogDetailsScreen = ({match}) => {\r\n\r\n    const [comment, setComment] = useState('')\r\n\r\n    const blogDetails = useSelector(state => state.blogDetails)\r\n    const { loading, error, blog } = blogDetails\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const  blogComment = useSelector(state => state.blogComment)\r\n    const { loading:blogCommentLoading, error:blogCommentError, success:blogCommentSuccess} = blogComment\r\n\r\n    useEffect(() => {\r\n        const slug = match.params.id;\r\n        if (blogCommentSuccess) {\r\n            setComment('')\r\n            \r\n        }\r\n        dispatch(listBlogDetails(slug))\r\n    }, [dispatch, blogCommentSuccess])\r\n\r\n    const createBlog = () => {\r\n        return {__html: blog.body}\r\n    };\r\n\r\n    const capitalizeFirstLetter = (word) => {\r\n        if (word)\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        return '';\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        const slug = match.params.id\r\n        e.preventDefault()\r\n        dispatch(getBlogComment(\r\n            slug, {\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Header />\r\n        <Container className=\"content post-details\">\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Health related blog content\" />\r\n                <title>{blog.title}</title>\r\n            </Helmet>\r\n            {loading ? <LoadingMain /> :\r\n                error ? <Message variant='info'>{error}</Message> :\r\n                (\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                        <div>\r\n                            <h3 className='display-2 post-details__title'>{blog.title}</h3>\r\n                            <p>{capitalizeFirstLetter(blog.category)} </p>\r\n                            <div>\r\n                                <Image className=\"post-details__img\" src={blog.image} fluid/>\r\n                            </div>\r\n                            <div className='mt-5 mb-5' dangerouslySetInnerHTML={createBlog()} />\r\n                        </div>\r\n                        <div className=\"blog__content\">\r\n                        <div className=\"blog__comments\">\r\n                            {!blog?.comments?.length ? (\r\n                                    <p>No comments</p>\r\n                                ) : (\r\n                                <div className=\"blog__comment\">\r\n                                    {blog?.comments.map((comment) => (\r\n                                    <div key={comment?.id}>\r\n                                        <p className='blog__comment__name'>{comment?.name}</p>          \r\n                                        <p className=\"blog__comment__date\"><i>{comment?.dateCreated.substring(0, 10)}</i></p>\r\n                                        <p className=\"blog__comment__comment\">{comment?.comment}</p>\r\n                                    </div> \r\n                                    ))}\r\n                                </div>\r\n                                )}\r\n                        </div>\r\n                            {blogCommentLoading && <Loader />}\r\n                            {blogCommentSuccess && <Message variant='success'></Message>}\r\n                            {blogCommentError && <Message variant='info'>Please login before adding a comment</Message>}\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label className=\"blog__add-comment\">Leave a comment</Form.Label> {/* The label called review is named comment in the database(backend)*/}\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        rows={10}\r\n                                        value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' variant='primary' className=\"blog__comment__button\">Comment</Button>\r\n                            </Form>\r\n                    </div>\r\n                    </Col>\r\n                    <Col sm={4}></Col>\r\n            </Row>\r\n                )\r\n            }\r\n            \r\n            \r\n        </Container>\r\n        <Footer />\r\n    </>   \r\n   \r\n    );\r\n};\r\n\r\nexport default BlogDetailsScreen;","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\blogscreen\\BlogCategoryScreen.js",["534","535","536","537"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\nimport {Button, Container, Image} from 'react-bootstrap'\r\nimport { getBlogCategory } from '../../redux/actions/blogActions'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\n\r\nconst BlogCategoryScreen = ({match}) => {\r\n    const [currentCategory, setCurrentCategory] = useState('');\r\n\r\n    const blogCategory = useSelector(state => state.blogCategory)\r\n    const { error, loading, blogs } = blogCategory\r\n    console.log(blogs)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const id = match.params.id\r\n        const category = match.params.id\r\n        setCurrentCategory(category);\r\n        dispatch(getBlogCategory(id))\r\n\r\n    }, [])\r\n\r\n\r\n    const getCategoryBlogs = () => {\r\n        let list = [];\r\n        let result = [];\r\n\r\n        blogs.map(blog => {\r\n            return list.push(\r\n                <div>\r\n                    <h2 className=\"blog__category__header\"><span className=\"d-inline-block mb-2\">Blog Category: <strong> {blog.category}</strong></span></h2>\r\n                    <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative\">\r\n                        \r\n                        <div className=\"col p-4 d-flex flex-column position-static\">\r\n                           {/* <Image className=\"post__img\" src={`${process.env.REACT_APP_API_URL}${blog.image}`} alt={blog.title} fluid/> */}\r\n                            <Image className=\"post__img\" src={blog.image} alt={blog.title} fluid/>\r\n                            <h3 className=\"mb-0\">{blog.title}</h3>\r\n                            <p className=\" mb-auto\">{blog.introduction}</p>\r\n                            <Link to={`/post/${blog.slug}`} className=\"stretched-link\"><Button className=\"blog__category__btn\">Read More</Button></Link>\r\n                        </div>\r\n                        <div className=\"col-auto d-none d-lg-block\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < list.length; i += 2) {\r\n            result.push(\r\n                <div key={i} className='row mb-2'>\r\n                    <div className='col-md-6'>\r\n                        {list[i]}\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        {list[i+1] ? list[i+1] : null}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Container className='content'>\r\n            <Helmet>\r\n             <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Health related blog content\" />\r\n                <title>Blog categories</title>\r\n            </Helmet>\r\n            {/*\r\n            <div className='container mt-3'>\r\n            <h3 className='display-4'>Category: {currentCategory} </h3>\r\n            <div className=\"nav-scroller py-1 mb-2\">\r\n                <nav className=\"nav d-flex justify-content-between\">\r\n                    <Link className=\"p-2 text-muted\" to='/blog/category/medications'>Medications</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/blog/category/diseases/'>Diseases</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/health_news'>Health News</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/medications'>Medications</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/medical_equipment'>Medical Equipment</Link>\r\n                </nav>\r\n            </div>\r\n           \r\n        </div>\r\n            */}\r\n            {getCategoryBlogs()}\r\n        </Container>\r\n        <Footer />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default BlogCategoryScreen\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\blogReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\cartReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\reducers\\authReducers.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\LoginScreen.js",["538","539","540","541","542","543","544","545"],"import React, { useState} from 'react'\r\nimport {Container, Row, Col, Form, Button, Toast} from 'react-bootstrap'\r\nimport { Link, Redirect, useLocation } from 'react-router-dom'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AuthNavigation from '../../components/global/_authNavigation'\r\nimport AuthFooter from '../../components/global/_authFooter'\r\nimport swal from 'sweetalert';\r\nimport {Helmet} from \"react-helmet\";\r\nimport Loader from '../../components/Loader'\r\nimport Message from '../../components/Message'\r\nimport { login } from '../../redux/actions/authActions'\r\n\r\nfunction LoginScreen({ isAuthenticated }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const {state: {from = \"/\"} = {} } = useLocation();\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const { error, loading } = auth\r\n    console.log(error)\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    const notify =toast('Unable to login, please use valid email and password')\r\n\r\n    if (isAuthenticated){\r\n        return <Redirect to={from} />\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n        <AuthNavigation />\r\n            <Container className='' style={{marginTop:'10rem'}}>\r\n                <div className=\"auth__form__wrapper__login p-5\">\r\n                <div className=' auth-header text-center'>\r\n                    \r\n                {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n                {error && \r\n                    <div>\r\n                        <ToastContainer\r\n                            position='top-center'\r\n                            limit={1}\r\n                            draggableDirection='x'\r\n                            hideProgressBar={true}\r\n                            theme='light'\r\n                        >\r\n                            {notify}\r\n                        </ ToastContainer>\r\n                    </div>\r\n                }\r\n                {loading && <Loader />}\r\n\r\n                <div className=\"auth__header\">\r\n                    <h2 className=\"\">Sign-In Information</h2>\r\n                </div>\r\n                </div>\r\n                    <Form className=\"auth__form\" onSubmit={submitHandler}>\r\n                        <Form.Group className=\"\" controlId=\"formGroupPassword\">\r\n                        <Form.Label className='auth__form__label' >Email Address</Form.Label>\r\n                            <Form.Control \r\n                                className=\"auth__form__control\" \r\n                                variant=\"lg\"\r\n                                type=\"email\" \r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-3\" controlId=\"formGroupPassword\">\r\n                            <Form.Label className='auth__form__label' >Password</Form.Label>\r\n                            <Form.Control \r\n                                className=\"auth__form__control\" \r\n                                type=\"password\" \r\n                                variant=\"lg\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                \r\n                                />\r\n                        </Form.Group>\r\n                        <div className='auth__login__terms d-flex justify-content-between'>\r\n                            <Form.Group>\r\n                                <Form.Check\r\n                                    label='Remember me'\r\n                                    type='checkbox'\r\n                                />\r\n                            </Form.Group>\r\n                            <p className=''>Forgotten password? <Link to=\"/reset-password\" className='router-link'>Reset Password</Link></p>\r\n                        </div>\r\n                        <div className='auth__btnwrapper'>\r\n                            <Button className='auth__bt mx-auto' type=\"submit\">Sign In</Button>\r\n                            <p> Don't have an account? <Link to=\"/register\" className='router-link'>Create an account</Link></p>\r\n                        </div>\r\n                        \r\n                    </Form>\r\n            </div>\r\n               \r\n        </Container>\r\n        <AuthFooter />\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {login}) (LoginScreen)\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\PasswordReset.js",["546"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { reset_password } from '../../redux/actions/authActions';\r\nimport AuthNavigation from '../../components/global/_authNavigation'\r\nimport AuthFooter from '../../components/global/_authFooter'\r\n\r\nconst PasswordReset = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [email, setEmail] = useState('')\r\n\r\n\r\n    //const dispatch = useDispatch()\r\n    \r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        reset_password(email)\r\n        //dispatch(reset_password(email));\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <AuthNavigation />\r\n        <Container className='auth-container' style={{marginTop:'10rem'}}>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Reset Password</title>\r\n            </Helmet>\r\n            <div className=' auth-header text-center'>\r\n                <p className=\"auth-base\"> Reset password</p>\r\n            </div>\r\n            <Form className=\"auth-form\" onSubmit={e => submitHandler(e)}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\r\n                    <Form.Control \r\n                        className=\"auth__form__control\" \r\n                        type=\"email\" \r\n                        variant=\"lg\"\r\n                        placeholder=\"Enter account email\" \r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        />\r\n                </Form.Group>\r\n                <Button className=\"auth-button btn btn-block w-100\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n            \r\n        </Container>\r\n        <AuthFooter />\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password })(PasswordReset);\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\orderScreens\\PlaceOrderScreen.js",["547","548","549","550"],"import React, { useEffect } from 'react'\r\nimport Header from '../../components/global/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector, connect } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { createOrder } from '../../redux/actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../../constants/orderConstants'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction PlaceOrderScreen({ history, isAuthenticated }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order.id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        if (!isAuthenticated) {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: location\r\n                }\r\n            })\r\n        } else{\r\n            dispatch(createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n            }))\r\n        }  \r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"description\" content=\"Africa's Healthcare No. 1 Wholesale E-marketplace and Logistics Solution\" />\r\n                <title>order summary</title>\r\n            </Helmet>\r\n            <Header />\r\n            <Container className=\"content\">\r\n                <Row>\r\n                <Col md={8}>\r\n                        <div> \r\n                            <div>\r\n                                <h2>Order Summary</h2>\r\n                                {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                    No Product in the Cart\r\n                                </Message> : (\r\n                                    <div>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <div key={index}>\r\n                                            <Table striped bordered hover>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                    <th>Product Name</th>\r\n                                                    <th>Image</th>\r\n                                                    <th>Unit Price</th>\r\n                                                    <th>Quantity</th>\r\n                                                    <th>Amount</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                    <td><Link to={`/product/${item.product}`}>{item.name}</Link></td>\r\n                                                    <td><Image style={{height:\"4rem\"}} src={item.image} alt={item.name} fluid rounded /></td>\r\n                                                    <td>&#8358; {item.price}</td>\r\n                                                    <td>{item.qty}</td>\r\n                                                    <td>&#8358; {(item.qty * item.price).toFixed(2)}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                </Table>\r\n                                            </div>\r\n                                            \r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <p>Sub Total: &#8358; {cart.itemsPrice}</p>\r\n                    </Col>\r\n                    <Col xs={4}>\r\n                        \r\n                    </Col>\r\n                    \r\n                </Row>\r\n        <div className='mt-5'>\r\n            <h2>Shipment Details</h2>\r\n            <div >\r\n                <p>Address ............... {cart.shippingAddress.address},  {cart.shippingAddress.city}{'  '}</p>\r\n                <p>Postal Code ............... {cart.shippingAddress.postalCode},{'  '} </p>\r\n                <p>Country ............... {cart.shippingAddress.country}</p>\r\n                <p><Link to='/shipping'>Edit Details</Link></p>\r\n            </div>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n\r\n            <div className=\"auth__btnwrapper\">\r\n                <Button\r\n                    type='button'\r\n                    size=\"lg\"\r\n                    disabled={cart.cartItems === 0}\r\n                    onClick={placeOrder}\r\n                >\r\n                    Place Order\r\n                </Button>\r\n            </div>\r\n        </div>\r\n       \r\n        </Container>\r\n        <Footer />\r\n    </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {createOrder }) ( PlaceOrderScreen )","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Header.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\FloatingAction.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Footer.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Carousel.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Message.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\types.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\prescriptionAction.js",[],["551","552"],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Loader.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\_authFooter.js",["553","554","555","556","557"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst AuthFooter = () =>{\r\n    return(\r\n        <div className='mt-5 footer__auth'>\r\n        <div className=\"footer__divider\"></div>\r\n            <div className=\"footer__items footer__items__auth\">\r\n                    <p><Link to=\"/\">Home</Link></p>\r\n                    <p><Link to=\"/about\">About Us</Link></p>\r\n                    <p><Link to=\"/emergency/request\">EMS</Link></p>\r\n                    <p><Link to=\"/privacy-policy\">Privacy Policy</Link></p>\r\n                    <p><Link to=\"/terms-conditions\">Terms and Conditions</Link></p>\r\n            </div>\r\n            <div>\r\n                    <div className='d-flex justify-content-center' style={{backgroundColor:\"#0467a4\"}}>\r\n                        <p><a href=\"https://www.facebook.com/florixhealthcare\" target=\"_blank\" rel='noreferrer'><span className=\"footer__media__icons\" style={{color:\"#fff\"}}><i className=\"fab fa-facebook\"></i></span></a></p>\r\n                        <p><a href=\"http://instagram.com/flo_log.hq\" target=\"_blank\" rel='noreferrer'><span className=\"footer__media__icons\"  style={{color:\"#e95950\"}}><i className=\"fab fa-instagram\"></i></span></a></p>\r\n                        <p><a href=\"/\"><span className=\"footer__media__icons\" style={{color:\"#fff\"}}><i className=\"fab fa-twitter\"></i></span></a></p>\r\n                    </div>\r\n                </div>\r\n        <div className='footer'> \r\n\r\n        </div>\r\n        <p className=\"footer2 text-center py-3\">&copy; 2022 Florix Healthcare Ltd. All Rights Reserved. </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthFooter\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\_authNavigation.js",["558","559","560","561"],"import React, { Fragment } from 'react';\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions/authActions';\r\nimport {NavDropdown} from 'react-bootstrap';\r\n\r\n\r\nconst AuthNavigation = ({ toggleSidebar, isAuthenticated, logout }) => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const { error, loading, user } = auth\r\n  \r\n\r\n    const guestLinks = () => (\r\n\r\n        <Fragment>\r\n            <LinkContainer to='/login'>\r\n                <li className=\"navbar__auth-link\"><i class=\"fa fa-sign-in-alt\"></i> Sign In</li>\r\n            </LinkContainer>\r\n        </Fragment>\r\n    );\r\n  \r\n    const authLinks = () => (\r\n        <Fragment>\r\n            <li className=\"navbar__auth-link\" onClick={logout}><i class=\"fa fa-sign-out-alt\"></i> Logout</li>\r\n        </Fragment>\r\n    );\r\n\r\n    return(\r\n        <nav className='navbar fixed-top shadow-sm'>\r\n            <div className=\"navbar__logobtn\">\r\n        \r\n                <Link className='navbar__logo' exact to='/'>\r\n                    <img className='navbar__flolog-logo'  src='/assets/images/icons/flolog-logo.png' alt=\"flolog-logo\" />\r\n                </Link>\r\n            </div>\r\n            <ul className='navbar__list ms-auto'>\r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' exact to='/'>\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className='navbar__list__item'>\r\n                    <NavLink className='navbar__link' to='/about'>\r\n                        About \r\n                    </NavLink>\r\n                </li>\r\n\r\n                    {isAuthenticated ? authLinks() : guestLinks()}\r\n        \r\n            </ul>\r\n     \r\n            <div className='navbar__button' onClick={toggleSidebar}>\r\n               \r\n            </div>\r\n            <div>\r\n            </div>  \r\n         \r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n  \r\nexport default connect(mapStateToProps, { logout })(AuthNavigation);","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\orderActions.js",["562","563","564","565","566","567","568","569","570"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from './types'\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/${order.id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `JWT ${localStorage.getItem('access')}`,\r\n                //Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `${process.env.REACT_APP_API_URL}/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\blogActions.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\contactAction.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\spinners\\LoadingMain.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\blog\\Blog.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\spinners\\StoreSpinner.js",["571"],"import { Children } from \"react\"\r\n\r\nconst StoreSpinner = ({children}) => {\r\n    return (\r\n      <div className='storespinner'>\r\n        {children}\r\n        <div className='storespinner__loading'></div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default StoreSpinner","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\index\\indexSlider.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\partnership.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\blog\\BlogCarousel.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Terms.js",["572"],"import React, { useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { termsAction } from '../redux/actions/baseActions';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingMain from './spinners/LoadingMain';\r\nimport Message from './Message';\r\n\r\nconst Terms = (props) => {\r\n\r\n    const termsDetails = useSelector(state => state.termsDetails)\r\n    const { loading, error, terms } = termsDetails\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(termsAction())\r\n    }, [dispatch])\r\n    \r\n    const termsStatement = () => {\r\n        return {__html: terms[1]?.body}\r\n    };\r\n  return (\r\n    <>\r\n      {loading ? <LoadingMain /> :\r\n        error? <Message variant='danger'>{error}</Message> :\r\n          (\r\n            <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n              <Modal.Body>\r\n                <div>\r\n                    {/* <h2>{policy?.title}</h2> */}\r\n                    <div className='' dangerouslySetInnerHTML={termsStatement()} ></div>\r\n                </div>\r\n                    <p>\r\n                      <a href='/'>Back to Home</a>\r\n                    </p>\r\n                {/* <Button onClick={props.onHide, ()=>{}} variant='light'>Close</Button> */}\r\n              </Modal.Body>\r\n            </Modal>\r\n          )\r\n      }\r\n    </> \r\n  );\r\n}\r\n\r\nexport default Terms","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\SearchProduct.js",["573"],"import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nconst SearchProduct = () => {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            console.log(keyword)\r\n            history.push(`/products?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"shop__bar__form\" onSubmit={submitHandler}>\r\n        <Form.Group className='shop__bar___form__group' controlId='searchbox' inline>\r\n            <Form.Control\r\n                variant=\"lg\"\r\n                className=\"shop__bar__form__control\"\r\n                type='text'\r\n                placeholder=\"Search\"\r\n                name='q'\r\n                style={{backgroundColor:\"white\"}}\r\n                onChange={(e) => { \r\n                    setKeyword(e.target.value)\r\n                }}\r\n            >\r\n            </Form.Control>\r\n        </Form.Group>\r\n        {/*}\r\n        <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n            */}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchProduct\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\cartActions.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\multivitamins.js",["574","575","576"],"import React, { useEffect } from 'react'\r\nimport { Navigation, Pagination, A11y, Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport {Image} from 'react-bootstrap'\r\nimport { getMultivitamins } from '../../../redux/actions/productActions';\r\n\r\nimport 'swiper/swiper.min.css';\r\n//import 'swiper/css/navigation';\r\n//import 'swiper/css/pagination';\r\n//import 'swiper/modules/free-mode/free-mode.min.css\r\nimport 'swiper/modules/navigation/navigation.min.css'\r\nimport 'swiper/modules/pagination/pagination.min.css'\r\nimport 'swiper/modules/autoplay/autoplay.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst data = [\r\n  {id:1, name:\"Hematogen Forte\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"},\r\n  {id:2, name:\"Astymin\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"},\r\n  {id:3, name:\"Astyfer\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"},\r\n  {id:4, name:\"Ideos\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"},\r\n  {id:6, name:\"Phatonic\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"},\r\n  {id:7, name:\"Lycofer\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/booster.jpg\"}\r\n]\r\n\r\n// <SwiperSlide><Image src='assets/images/Image1.png' height={300}/></SwiperSlide>\r\n//<SwiperSlide><Image src='assets/images/Image2.png' height={300}/></SwiperSlide>\r\n\r\nconst Multivitamins = () => {\r\n  const dispatch = useDispatch()\r\n  const listMultivitamins = useSelector(state => state.multivitamins)\r\n  const { error, loading, products,} = listMultivitamins\r\n  // const data = products\r\n\r\n  useEffect(() => {\r\n      dispatch(getMultivitamins())\r\n   \r\n  }, [dispatch])\r\n  return (\r\n    <div>\r\n      <Swiper\r\n          modules={[Navigation, Pagination, A11y, Autoplay]}\r\n          spaceBetween={20}\r\n          breakpoints={{\r\n            //when window with is >= 640\r\n            360: {\r\n              width: 360,\r\n              slidesPerView: 2,\r\n            },\r\n              //when window with is >= 768\r\n            768: {\r\n              width: 768,\r\n              slidesPerView: 3,\r\n            }\r\n          }}\r\n          // autoplay={{delay: \"5000\"}}\r\n          // navigation\r\n          // pagination={{ clickable: true }}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n          onSlideChange={() => console.log('slide change')}\r\n          className=\"analgesics\"\r\n      >\r\n        {products.map(drug =>(\r\n      <div className=\"analgesics__slider\">\r\n        <SwiperSlide key={drug.id} className=\"analgesics__slider__container p-4\">\r\n          <div className='analgesics__slider__content'>\r\n           <Link to={`/product/${drug.id}`}>\r\n                  {/* src={`${process.env.REACT_APP_API_URL}${drug.image}`} */}\r\n              <Image className='analgesics__slider__content__image' src={drug.image} /> \r\n             <div className='analgesics__slider__content__text px-4'>\r\n                <p className='analgesics__slider__content__name'>{drug.name}</p>\r\n                <p className='analgesics__slider__content__label'>{drug.label}</p>\r\n                <div className='d-md-flex justify-content-between'>\r\n                  <p className='analgesics__slider__content__price'>&#8358; {drug.price}</p>\r\n                  <p className='analgesics__slider__content__button text-center'><Link to={`/product/${drug.id}`}><img src=\"/assets/icons/Store.png\" alt=\"\" style={{height:\"25px\", marginRight:\"2px\"}}/>Add to cart</Link></p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n         \r\n        </SwiperSlide>\r\n      </div>\r\n        ))}\r\n\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multivitamins","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Product.js",["577","578"],"import React from 'react'\r\nimport { Card, Image } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n    <>\r\n        <Link to={`/product/${product.id}`}>\r\n            <div  className='product__class__container'> \r\n                <div className=\"product__class__file__wrapper\">\r\n                    <Image className=\"product__class__file__wrapper__img\" src={product.image} fluid/> \r\n                </div>\r\n\r\n                {/*Adding ${process.env.REACT_APP_API_URL} to image src doesn't work in production \r\n                <Image className=\"product__img shadow-sm\" src={`${process.env.REACT_APP_API_URL}${product.image}`} fluid/> \r\n                */}\r\n            \r\n                <div className='product__class__text'>\r\n                    <h2>{product.name}</h2>\r\n                    <p> &#8358; {product.price}</p>\r\n                    <p>Dosage form: {product.dosageForm}</p>\r\n                    <p>Strength: {product.strength}</p>\r\n                    {/*\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Paginate.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\Rating.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\RegisterDetailsVerify.js",["579","580","581","582","583"],"import React from 'react'\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../../../components/Loader';\r\nimport Message from '../../../components/Message';\r\nimport { signup } from '../../../redux/actions/authActions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst RegisterDetailsVerify = ({values, history}) => {\r\n  const auth = useSelector(state => state.auth)\r\n  const { error, loading, userInfo } = auth\r\n\r\n    const {\r\n        firstName,\r\n        lastName,\r\n        gender,\r\n        dateOfBirth,\r\n        address,\r\n        country,\r\n        state,\r\n        city,\r\n        username,\r\n        email,\r\n        profession,\r\n        telephone,\r\n        password,\r\n        re_password\r\n      } = values\r\n\r\n  const notify =toast('Registration was successful! Please check your email')\r\n  const dispatch = useDispatch()\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(\r\n          signup(\r\n            firstName, lastName, gender,\r\n             dateOfBirth, address, \r\n             country, state, city, \r\n             username, email,  \r\n             profession, telephone, \r\n             password, re_password\r\n          ))\r\n          .then(() => {\r\n            <div>\r\n              <ToastContainer position='top-center'>\r\n                {notify}\r\n              </ ToastContainer>\r\n            </div>\r\n          })\r\n        \r\n    };\r\n\r\n  return (\r\n    <Container className='auth-container'>\r\n        <div className='auth__btnwrapper ' style={{marginTop:\"1rem\"}}>\r\n          {/* {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />} */}\r\n          <Button onClick={submitHandler} className='auth__bt'>CLICK TO CREATE ACCOUNT</Button>\r\n          <p className='text-center'> Already have an account? <Link to=\"/login\" className='ruter-link'>Sign In</Link></p>\r\n        </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\n const mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {signup}) (RegisterDetailsVerify)","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\baseScreens\\EmergencyOrderVerifyScreen.js",["584"],"import React, { useState } from 'react'\r\nimport { emergency_order } from '../../redux/actions/emergencyorderAction'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst EmergencyOrderVerifyScreen = ({values}) => {\r\n\r\n  const [chat, setChat] = useState(false)\r\n\r\n  const {\r\n    tel,\r\n    extraInfo,\r\n    recipientName, \r\n    recipientTel, \r\n    pickUpAddress, \r\n    deliveryAddress, \r\n    location,\r\n    orderCategory, \r\n    productName, \r\n    image,  \r\n    dosageForm, \r\n    brand, \r\n    strength,  \r\n    storageSystem, \r\n    packSize,\r\n  } = values\r\n\r\n  \r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e)=>{\r\n  e.preventDefault()\r\n  dispatch(emergency_order(\r\n    tel,\r\n    extraInfo,\r\n    recipientName, \r\n    recipientTel, \r\n    pickUpAddress, \r\n    deliveryAddress, \r\n    location,\r\n    orderCategory, \r\n    productName, \r\n    image,  \r\n    dosageForm, \r\n    brand, \r\n    strength,  \r\n    storageSystem, \r\n    packSize,\r\n    ))\r\n  setChat(true)\r\n}\r\n\r\nif(chat){\r\n  window.location.assign(\"https://tinyurl.com/2p98zk2h\");\r\n}\r\n  return (\r\n    <>\r\n      <div className='content'>\r\n      <div className='emergency__header'>\r\n        <h2>Please verify the information provided</h2>\r\n      </div>\r\n      \r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              {/* <p>Username: </p>\r\n              <p>Email: </p> */}\r\n              <p>Recipient Name: {recipientName}</p>\r\n              <p>Recipient Phone Number: {recipientTel}</p>\r\n              <p>Pick-Up Address: {pickUpAddress}</p>\r\n              <p>Delivery Address: {deliveryAddress}</p>\r\n              <p>Location: {location}</p>\r\n            </Col>\r\n\r\n            <Col>\r\n              <p>Product Ordered: {productName}</p>\r\n              {/* <p>Image: {image}</p> */}\r\n              <p>Category: {orderCategory}</p>\r\n              <p>Brand: {brand}</p>\r\n              <p>Dosage Form: {dosageForm}</p>\r\n              <p>Dose/Strength: {strength}</p>\r\n              <p>Quantity: {packSize}</p>\r\n              {/* <p>Complaints: {extraInfo}</p> */}\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n          <div className='mt-5'>\r\n            <p style={{color:'#808080'}}>Click the Button below to complete Request with FLO-LOG Whatsapp Admin</p>\r\n          </div>\r\n          <Button onClick={submitHandler} className='emergency__btn emergency__btn__next'>Submit</Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmergencyOrderVerifyScreen","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\_AccountData.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\register\\_BioData.js",["585","586","587"],"import React, { useState } from 'react'\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport countries from \"i18n-iso-countries\";\r\n// Import the languages you want to use\r\nimport enLocale from \"i18n-iso-countries/langs/en.json\";\r\nimport itLocale from \"i18n-iso-countries/langs/it.json\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst BioData = ({values, handleChange, handleErrors}) => {\r\n  \r\n    // Have to register the languages you want to use\r\n    countries.registerLocale(enLocale);\r\n    countries.registerLocale(itLocale);\r\n  \r\n    // Returns an object not a list\r\n    const countryObj = countries.getNames(\"en\", { select: \"official\" });\r\n  \r\n    const countryArr = Object.entries(countryObj).map(([key, value]) => {\r\n      return {\r\n        label: value,\r\n        value: key\r\n      };\r\n    });\r\n  \r\n    \r\n  return (\r\n    <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Create your Flolog Account</title>\r\n            </Helmet>\r\n            <Container className='auth-container'>\r\n                <div className=\"auth__header text-center\">\r\n                    <h2 className=\"\">Create Account</h2>\r\n                    <p>Individual Account</p>\r\n                </div>\r\n                        <Form className=\"auth-form\">\r\n                        <Row>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='name'>\r\n                                        <Form.Label className='auth__form__label'>First Name</Form.Label>\r\n                                        <Form.Control \r\n                                            className=\"auth__form__control\" \r\n                                            size='lg'\r\n                                            required\r\n                                            minLength='6'\r\n                                            type=\"text\" \r\n                                            onChange={handleChange('firstName')} \r\n                                            value={values.firstName}\r\n                                            isInvalid={!!handleErrors.firstName}\r\n                                            />\r\n                                        <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.firstName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='name'>\r\n                                        <Form.Label className='auth__form__label'>Last Name</Form.Label>\r\n                                        <Form.Control\r\n                                            required \r\n                                            size='lg'\r\n                                            className=\"auth__form__control\" \r\n                                            type=\"text\" \r\n                                            value={values.lastName}\r\n                                            onChange={handleChange('lastName')} \r\n                                            isInvalid={!!handleErrors.lastName}\r\n                                        />\r\n                                        <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.lastName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='gender'>\r\n                                        <Form.Label className='auth__form__label'>Gender</Form.Label>\r\n                                        <Form.Control\r\n                                        required \r\n                                        size='lg'\r\n                                        className=\"auth__form__control form-select\" \r\n                                        as='select'\r\n                                        value={values.gender}\r\n                                        onChange={handleChange('gender')} \r\n                                        isInvalid={!!handleErrors.gender}\r\n                                    >\r\n                                         <option>--Select Gender--</option>\r\n                                        <option value='Male'>Male</option>\r\n                                        <option value='Female'>Female</option>\r\n                                    </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='dateOfBirth'>\r\n                                        <Form.Label className='auth__form__label'>Date of Birth</Form.Label>\r\n                                        {/* <DatePicker\r\n                                          isClearable\r\n                                          dateFormat=\"yyyy-mm-dd\"\r\n                                          type='Number'\r\n                                        /> */}\r\n                                        <Form.Control\r\n                                            required \r\n                                            size='lg'\r\n                                            className=\"auth__form__control\" \r\n                                            type=\"date\" \r\n                                            dateFormat='yyyy-mm-dd'\r\n                                            value={values.dateOfBirth}\r\n                                            onChange={handleChange('dateOfBirth')}\r\n                                            isInvalid={!!handleErrors.dateOfBirth}\r\n                                            \r\n                                        />\r\n                                        <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.dateOfBirth}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='address'>\r\n                                        <Form.Label className='auth__form__label'>Address</Form.Label>\r\n                                        <Form.Control \r\n                                            className=\"auth__form__control\" \r\n                                            size='lg'\r\n                                            required\r\n                                            minLength=''\r\n                                            type=\"text\" \r\n                                            value={values.address}\r\n                                            onChange={handleChange('address')} \r\n                                            isInvalid={!!handleErrors.address}\r\n                                            />\r\n                                            <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.address}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='country'>\r\n                                        <Form.Label className='auth__form__label'>Country</Form.Label>\r\n                                        <Form.Control\r\n                                            placeholder='Nigeria'\r\n                                            size='lg'\r\n                                            className=\"auth__form__control form-select\" \r\n                                            type=\"text\" \r\n                                            as=\"select\"\r\n                                            value={values.country}\r\n                                            onChange={handleChange('country')} \r\n                                            \r\n                                            // isInvalid={!!handleErrors.country}\r\n                                        >\r\n                                            {!!countryArr?.length &&\r\n                                                countryArr.map(({ label, value }) => (\r\n                                                    <option key={value} value={value}>\r\n                                                    {label}\r\n                                                    </option>\r\n                                                ))}\r\n                                                \r\n                                                </Form.Control>\r\n                                        {/* <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.country}</Form.Control.Feedback> */}\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='state'>\r\n                                        <Form.Label className='auth__form__label'>State</Form.Label>\r\n                                        <Form.Control \r\n                                            className=\"auth__form__control\" \r\n                                            size='lg'\r\n                                            required\r\n                                            minLength=''\r\n                                            type=\"text\" \r\n                                            value={values.state}\r\n                                            onChange={handleChange('state')} \r\n                                            isInvalid={!!handleErrors.state}\r\n                                            />\r\n                                            <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.state}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} md={6}>\r\n                                    <Form.Group className=\"mb-3\" controlId='city'>\r\n                                        <Form.Label className='auth__form__label'>City</Form.Label>\r\n                                        <Form.Control\r\n                                            required \r\n                                            size='lg'\r\n                                            className=\"auth__form__control\" \r\n                                            type=\"text\" \r\n                                            value={values.city}\r\n                                            onChange={handleChange('city')} \r\n                                            isInvalid={!!handleErrors.city}\r\n                                        />\r\n                                        <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.city}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <p className='text-center'> Already have an account? <Link to=\"/login\" className='ruter-link'>Sign In</Link></p>\r\n                        </Form>\r\n                        \r\n        </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BioData","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\analgesics.js",["588","589","590","591","592","593"],"import React, { useEffect } from 'react'\r\nimport { Navigation, Pagination, A11y, Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport {Button, Image} from 'react-bootstrap'\r\nimport { getAnalgesics } from '../../../redux/actions/productActions';\r\n\r\nimport 'swiper/swiper.min.css';\r\n//import 'swiper/css/navigation';\r\n//import 'swiper/css/pagination';\r\n//import 'swiper/modules/free-mode/free-mode.min.css\r\nimport 'swiper/modules/navigation/navigation.min.css'\r\nimport 'swiper/modules/pagination/pagination.min.css'\r\nimport 'swiper/modules/autoplay/autoplay.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductClass } from '../../../redux/actions/productActions';\r\nimport { listProducts } from '../../../redux/actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst data = [\r\n  {id:1, name:\"Paracetamol\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:2, name:\"Ibuprofen\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:3, name:\"Diclofenac Potassium\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:4, name:\"Ketoprofen\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:6, name:\"Celecoxib\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:7, name:\"Naproxen\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"}\r\n]\r\n\r\n// <SwiperSlide><Image src='assets/images/Image1.png' height={300}/></SwiperSlide>\r\n//<SwiperSlide><Image src='assets/images/Image2.png' height={300}/></SwiperSlide>\r\n\r\nconst Analgesics = () => {\r\n  const dispatch = useDispatch()\r\n  const listAnalgesics = useSelector(state => state.analgesics)\r\n  const { error, loading, products,} = listAnalgesics\r\n  // const data = products\r\n\r\n  useEffect(() => {\r\n      dispatch(getAnalgesics())\r\n   \r\n  }, [dispatch])\r\n  return (\r\n    <div>\r\n      <Swiper\r\n          modules={[Navigation, Pagination, A11y, Autoplay]}\r\n          spaceBetween={10}\r\n          breakpoints={{\r\n            //when window with is >= 640\r\n            360: {\r\n              width: 360,\r\n              slidesPerView: 2,\r\n            },\r\n              //when window with is >= 768\r\n            768: {\r\n              width: 768,\r\n              slidesPerView: 3,\r\n            }\r\n          }}\r\n          // autoplay={{delay: \"5000\"}}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n          onSlideChange={() => console.log('slide change')}\r\n          className=\"analgesics\"\r\n      >\r\n        {products.map(product =>(\r\n          <div className=\"analgesics__slider\">\r\n            <SwiperSlide key={product?.id} className=\"analgesics__slider__container p-4\">\r\n              <div className='analgesics__slider__content'>\r\n                <Link to={`/product/${product.id}`}>\r\n                  <Image className='analgesics__slider__content__image' src={product.image} />\r\n                <div className='analgesics__slider__content__text px-4'>\r\n                  <p className='analgesics__slider__content__name'>{product?.name}</p>\r\n                  <p className='analgesics__slider__content__label'>{product?.label}</p>\r\n                  <div className='d-md-flex justify-content-between'>\r\n                    <p className='analgesics__slider__content__price'>&#8358; {product?.price}</p>\r\n                    <p className='analgesics__slider__content__button text-center'><img src=\"/assets/icons/Store.png\" alt=\"\" style={{height:\"2rem\", marginRight:\"2px\"}}/>Add to cart</p>\r\n                  </div>\r\n                  \r\n                </div>\r\n                </Link>\r\n              </div>\r\n            \r\n            </SwiperSlide>\r\n          </div>\r\n        ))}\r\n\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analgesics","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\shop\\antibiotics.js",["594","595","596"],"import React, { useEffect } from 'react'\r\nimport { Navigation, A11y, Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport {Image} from 'react-bootstrap'\r\nimport { getAntibiotics } from '../../../redux/actions/productActions';\r\n\r\nimport 'swiper/swiper.min.css';\r\n//import 'swiper/css/navigation';\r\n//import 'swiper/css/pagination';\r\n//import 'swiper/modules/free-mode/free-mode.min.css\r\nimport 'swiper/modules/navigation/navigation.min.css'\r\nimport 'swiper/modules/autoplay/autoplay.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst data = [\r\n  {id:1, name:\"Amoxicillin\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:2, name:\"Ciprofloxacin\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:3, name:\"Cefuroxime\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:4, name:\"Cefixime\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:6, name:\"Imipenem\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"},\r\n  {id:7, name:\"Meropenem\", brand:\"emzor\", preamble: \"lorem ipsum lorem ipsum\", price: \"5000\", image: \"/assets/images/drugs/covonia.jpg\"}\r\n]\r\n// <SwiperSlide><Image src='assets/images/Image1.png' height={300}/></SwiperSlide>\r\n//<SwiperSlide><Image src='assets/images/Image2.png' height={300}/></SwiperSlide>\r\n\r\nconst Antibiotics = () => {\r\n  const dispatch = useDispatch()\r\n  const listAntibiotics = useSelector(state => state.antibiotics)\r\n  const { error, loading, products,} = listAntibiotics\r\n  // const data = products\r\n\r\n  useEffect(() => {\r\n      dispatch(getAntibiotics())\r\n   \r\n  }, [dispatch])\r\n  return (\r\n    <div>\r\n      <Swiper\r\n          modules={[Navigation, A11y, Autoplay]}\r\n          spaceBetween={15}\r\n          breakpoints={{\r\n            //when window with is >= 640\r\n            360: {\r\n              width: 360,\r\n              slidesPerView: 1,\r\n            },\r\n              //when window with is >= 768\r\n            768: {\r\n              width: 768,\r\n              slidesPerView: 2,\r\n            }\r\n          }}\r\n          autoplay={{delay: \"5000\"}}\r\n          onSwiper={(swiper) => console.log(swiper)}\r\n          onSlideChange={() => console.log('slide change')}\r\n          className=\"antibiotics\"\r\n      >\r\n        {products.map(drug =>(\r\n          <div className=\"antibiotics__slider\">\r\n            <SwiperSlide key={drug.id} className=\"antibiotics__slider__container p-4\">\r\n              <div className=\"antibiotics__slider__content\">\r\n                  <Image src={drug.image} className=\"antibiotics__slider__content__image\" thumbnail/>\r\n                <div className=\"antibiotics__slider__content__text\">\r\n                  <p className=\"antibiotics__slider__content__name\">{drug.name}</p>\r\n                  <p className=\"antibiotics__slider__content__label\">{drug.label}</p>\r\n                  <p className='analgesics__slider__content__label mb-0 mt-auto'><Link to={`/product/${drug.id}`} className='router-link'>Shop Now</Link></p>\r\n                </div>\r\n              </div>\r\n            \r\n            </SwiperSlide>\r\n          </div>\r\n        ))}\r\n\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Antibiotics","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\productActions.js",["597","598","599"],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    \r\n    PRODUCT_CLASS_REQUEST,\r\n    PRODUCT_CLASS_SUCCESS,\r\n    PRODUCT_CLASS_FAIL,\r\n\r\n    GET_ANALGESICS_REQUEST,\r\n    GET_ANALGESICS_SUCCESS,\r\n    GET_ANALGESICS_FAIL,\r\n\r\n    GET_ANTIBIOTICS_REQUEST,\r\n    GET_ANTIBIOTICS_SUCCESS,\r\n    GET_ANTIBIOTICS_FAIL,\r\n\r\n    GET_MULTIVITAMINS_REQUEST,\r\n    GET_MULTIVITAMINS_SUCCESS,\r\n    GET_MULTIVITAMINS_FAIL,\r\n\r\n} from './types'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `${process.env.REACT_APP_API_URL}/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${process.env.REACT_APP_API_URL}/api/products/update/${product.id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n        \r\n\r\n        const { data } = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// ACTION FOR PRODUCT CLASS FOR POST REQUEST API\r\nexport const getProductClass = (productClass) => async dispatch => {\r\n    \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }; \r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_CLASS_REQUEST })\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/products/class/`, {productClass}, config);\r\n        console.log(res)\r\n        dispatch({\r\n            type: PRODUCT_CLASS_SUCCESS,\r\n            payload: res.data\r\n\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CLASS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n// GET analgesic products\r\n\r\nexport const getAnalgesics = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ANALGESICS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/product-class/?productClass=analgesics`)\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: GET_ANALGESICS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ANALGESICS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// GET antibiotics\r\nexport const getAntibiotics = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ANTIBIOTICS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/product-class/?productClass=antibiotics`)\r\n\r\n        dispatch({\r\n            type: GET_ANTIBIOTICS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ANTIBIOTICS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// GET Multivitamins\r\nexport const getMultivitamins = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_MULTIVITAMINS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/products/product-class/?productClass=multivitamins`)\r\n\r\n        dispatch({\r\n            type: GET_MULTIVITAMINS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MULTIVITAMINS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\AxiosIntercept.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Navigation.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Navbar.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\screens\\authScreens\\_TextInput.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\baseActions.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\emergency\\RequestForm.js",["600","601","602","603","604","605","606","607","608"],"import React, { useState } from 'react'\r\nimport {Button, Col, Form, Modal, Row} from 'react-bootstrap'\r\nimport { MdCloudUpload } from 'react-icons/md'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport Monnify from '../../utils/Monnify'\r\n\r\n\r\nconst RequestForm = ({values, handleChange, handleErrors}) => {\r\n  const [premium, setPremium] = useState(false)\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  \r\n  // console.log(values)\r\n  // console.log(handleChange)\r\n  const premiumHandler = () =>{\r\n    swal('Subscribe to premium verson to unlock this feature')\r\n  }\r\n  return (\r\n    <>\r\n      <div className='emergency__header text-center'>\r\n        <h2>Place Request</h2>\r\n        <p>Please fill in accurate information and provide much detail as possible where necessary</p>\r\n      </div>\r\n    \r\n    <div className='emergency__form-container'>\r\n      <Form>\r\n          <div>\r\n            <Form.Group className='emergency__formgroup mt-5'>\r\n                <Form.Control \r\n                  className='emergency__forminput form-select' \r\n                  onChange={handleChange('orderCategory')} \r\n                  value={values.orderCategory} as=\"select\" \r\n                  aria-label=\"Default select example\"\r\n                  isInvalid={!!handleErrors.orderCategory}\r\n                  >\r\n                  <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.orderCategory}</Form.Control.Feedback>\r\n                  <option className='emergency__formgroup__option input-field'>--Select Request--</option>\r\n                  <option className='emergency__formgroup__option input-field' value=\"Medications\">Medications</option>\r\n                  {/* <option className='emergency__formgroup__option input-field' value=\"Laboratory Specimen\">Medical Items</option> */}\r\n                </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n          <div className='p-2 d-flex justify-content-center' style={{backgroundColor:'#F1F0F0'}}>\r\n            <div className=''>\r\n                <label className='emergency__formgroup__upload-image mx-2 text-center'>\r\n                  <div>\r\n                    <MdCloudUpload className='emergency__formgroup__upload-image__icon'  />\r\n                    <p>Click to Upload File</p>\r\n                  </div>\r\n                  <input \r\n                    id='upload-image'\r\n                    type=\"file\" \r\n                    className='input-field' \r\n                    name='image-upload'\r\n                    onChange={handleChange('image')} value={values.image}\r\n                    \r\n                  />\r\n                </label>\r\n              </div>\r\n             \r\n          </div>\r\n          <div>\r\n            <div className=\"emergency__pickup__container pt-md-5 pt-sm-3\">\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Generic Name<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control \r\n                    onChange={handleChange('productName')} \r\n                    value={values.productName} \r\n                    className='emergency__formgroup__input emergency__forminput input-field' \r\n                    placeholder='e.g Paracetamol' \r\n                    isInvalid={!!handleErrors.productName}\r\n                    />\r\n                  <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.productName}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__wrapper mt-4'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Brand<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control \r\n                    onChange={handleChange('brand')} \r\n                    value={values.brand} className='emergency__formgroup__input emergency__forminput input-field' \r\n                    placeholder='e.g. Emzor' \r\n                    isInvalid={!!handleErrors.brand}\r\n                    />\r\n                  <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.brand}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <div className='my-4'>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className='emergency__formgroup__wrapper'>\r\n                        <Form.Label className='formlabel'>Dosage Form<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                        <Form.Control \r\n                          className='emergency__formgroup__input__annex emergency__forminput form-select'  \r\n                          onChange={handleChange('dosageForm')} \r\n                          value={values.dosageForm} \r\n                          as=\"select\" \r\n                          aria-label=\"Default select example\"\r\n                          isInvalid={!!handleErrors.dosageForm}\r\n                          >\r\n                            \r\n                          <option className='emergency__formgroup__option'>Select</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Tablets/Capsules\">Tablets/Capsules</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Syrups/Suspensions/Emulsions/Solutions\">Syrups/Suspensions/Emulsions/Solutions</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Eye/ear Drops*\">Eye/ear Drops*</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Creams/Ointments/Pastes\">Creams/Ointments/Pastes</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Injections/Infusions*\">Injections/Infusions*</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Aerosols/Sprays\">Aerosols/Sprays</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Pessaries/Suppositories\">Inserts (Pessaries/Suppositories)</option>\r\n                            <option className='emergency__formgroup__option input-field' value=\"Consumables\">Cosumables (e.g. Plasters, Bandages, Cotton Wool)*</option>\r\n                            \r\n                          <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.dosageForm}</Form.Control.Feedback>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group className='emergency__formgroup__wrapper'>\r\n                        <Form.Label className='formlabel'>Dose/strength<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                        <Form.Control \r\n                          onChange={handleChange('strength')} \r\n                          value={values.strength} \r\n                          className='emergency__formgroup__input__annex emergency__forminput input-field' \r\n                          placeholder='e.g 500 mg or 125mg/5ml'\r\n                          isInvalid={!!handleErrors.strength}\r\n                          />\r\n                          <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.strength}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <Form.Group className='emergency__formgroup__wrapper'>\r\n                  <Form.Label className='emergency__formgroup__text formlabel'>Quantity<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control \r\n                    onChange={handleChange('packSize')} \r\n                    style={{width:\"35%\"}} \r\n                    value={values.packSize} \r\n                    className='emergency__forminput input-field' \r\n                    placeholder='e.g 1 Pack' \r\n                    isInvalid={!!handleErrors.packSize}\r\n                    />\r\n                    <Form.Control.Feedback type='invalid' className='ms-2'>{handleErrors.packSize}</Form.Control.Feedback>\r\n                </Form.Group>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n\r\n        </Form>\r\n        {!premium ? \r\n         <div className='emergency__premium__container'>\r\n            <h2>OR</h2>\r\n            <p><a href='#' onClick={()=>{setShowModal(true)}}>Chat with a Pharmacist</a></p>\r\n          </div> :\r\n\r\n              <div className='emergency__premium__container'>\r\n                <h2>OR</h2>\r\n                <p><a href=\"https://wa.me/2347014868950\" target='_blank' rel=\"noreferrer\">Chat with a Pharmacist</a></p>\r\n              </div>\r\n        }\r\n\r\n          <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n            <Modal.Body className='emergency__premium__modal w-70' style={{backgroundColor:'#5d8181', color:'white'}}>\r\n              <p>You are about to visit Flo-Log admin WhatsApp page</p>\r\n              <span><i class=\"fas fa-arrow-right\"></i> <a href=\"https://wa.me/2347014868950\">Click to Continue</a></span>\r\n            </Modal.Body>\r\n            \r\n        </Modal>      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RequestForm","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\emergency\\DeliveyForm.js",["609","610"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nconst DeliveyForm = ({values, handleChange, handleErrors}) => {\r\n  console.log(handleChange)\r\n  return (\r\n    <div>\r\n        <div className='emergency__header text-center'>\r\n          <h2>Delivery Details</h2>\r\n          <p>Please fill-in this form with much detail as possible</p>\r\n        </div>\r\n        <Form>\r\n            <div className='emergency__formgroup__wrapper'>\r\n                <Form.Group className='emergency__formgroup__first-half'>\r\n                  <Form.Label className='formlabel'>Recipient Full Name<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control \r\n                    required \r\n                    className='emergency__forminput' \r\n                    onChange={handleChange('recipientName')} \r\n                    value={values.recipientName} \r\n                    placeholder='Full Name' \r\n                    isInvalid={!!handleErrors.recipientName}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className='emergency__formgroup__second-half'>\r\n                  <Form.Label className='formlabel'>Recipient Phone Number<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                  <Form.Control \r\n                    className='emergency__forminput' \r\n                    required \r\n                    onChange={handleChange('recipientTel')} \r\n                    value={values.recipientTel} \r\n                    placeholder='Phone Number' \r\n                    isInvalid={!!handleErrors.recipientTel}\r\n                    />\r\n                </Form.Group>\r\n            </div>\r\n            <Form.Group className='emergency__formgroup'>\r\n                <Form.Label className='formlabel'>Delivery Address<strong style={{color:\"red\"}}>*</strong></Form.Label>\r\n                <Form.Control \r\n                  className='emergency__forminput' \r\n                  required \r\n                  onChange={handleChange('deliveryAddress')} \r\n                  value={values.deliveryAddress} \r\n                  isInvalid={!!handleErrors.deliveryAddress}\r\n                  />\r\n            </Form.Group>        \r\n        </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nDeliveyForm.propTypes = {}\r\n\r\nexport default DeliveyForm","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\redux\\actions\\emergencyorderAction.js",["611"],"import axios from 'axios';\r\nimport {EMERGENCY_ORDER_REQUEST, \r\n    EMERGENCY_ORDER_SUCCESS,\r\n    EMERGENCY_ORDER_FAIL\r\n\r\n} from './types'\r\n\r\n\r\nexport const emergency_order = (\r\n    tel,\r\n    extraInfo,\r\n    recipientName, \r\n    recipientTel, \r\n    pickUpAddress, \r\n    deliveryAddress, \r\n    location,\r\n    orderCategory, \r\n    productName, \r\n    image,  \r\n    dosageForm, \r\n    brand, \r\n    strength,  \r\n    storageSystem, \r\n    packSize,\r\n    ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `JWT ${localStorage.getItem('access')}`,\r\n        }\r\n    };\r\n    const body = JSON.stringify({ \r\n        tel,\r\n        extraInfo,\r\n        recipientName, \r\n        recipientTel, \r\n        pickUpAddress, \r\n        deliveryAddress, \r\n        location,\r\n        orderCategory, \r\n        productName, \r\n        image,  \r\n        dosageForm, \r\n        brand, \r\n        strength,  \r\n        storageSystem, \r\n        packSize,\r\n    });\r\n    console.log(packSize)\r\n    try {\r\n    \r\n        const {data} = await axios.post(`${process.env.REACT_APP_API_URL}/api/emergency/order/`, body, config);\r\n        \r\n        console.log(body)\r\n        dispatch({\r\n            type: EMERGENCY_ORDER_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EMERGENCY_ORDER_FAIL,\r\n            payload: err.response && err.response.data.detail\r\n                ? err.response.data.detail\r\n                : err.message,\r\n        })\r\n    }\r\n};","C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\global\\Sidebar.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\sliders\\index\\packageSlider.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\CoreInfoCard.js",[],"C:\\Users\\user\\Desktop\\Projects\\MyProjects\\FLO_LOG\\florix-frontend\\src\\components\\TeamMember.js",[],{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","severity":1,"message":"617","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"620","severity":1,"message":"621","line":12,"column":8,"nodeType":"622","endLine":12,"endColumn":10,"suggestions":"623"},{"ruleId":"616","severity":1,"message":"617","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"624","line":1,"column":27,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"625","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":18},{"ruleId":"616","severity":1,"message":"626","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":18},{"ruleId":"616","severity":1,"message":"627","line":10,"column":13,"nodeType":"618","messageId":"619","endLine":10,"endColumn":18},{"ruleId":"616","severity":1,"message":"628","line":10,"column":20,"nodeType":"618","messageId":"619","endLine":10,"endColumn":27},{"ruleId":"616","severity":1,"message":"629","line":13,"column":12,"nodeType":"618","messageId":"619","endLine":13,"endColumn":20},{"ruleId":"616","severity":1,"message":"630","line":14,"column":11,"nodeType":"618","messageId":"619","endLine":14,"endColumn":19},{"ruleId":"616","severity":1,"message":"631","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"616","severity":1,"message":"632","line":14,"column":12,"nodeType":"618","messageId":"619","endLine":14,"endColumn":17},{"ruleId":"616","severity":1,"message":"627","line":17,"column":13,"nodeType":"618","messageId":"619","endLine":17,"endColumn":18},{"ruleId":"616","severity":1,"message":"628","line":17,"column":20,"nodeType":"618","messageId":"619","endLine":17,"endColumn":27},{"ruleId":"616","severity":1,"message":"633","line":17,"column":29,"nodeType":"618","messageId":"619","endLine":17,"endColumn":38},{"ruleId":"616","severity":1,"message":"634","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"635","line":3,"column":16,"nodeType":"618","messageId":"619","endLine":3,"endColumn":19},{"ruleId":"616","severity":1,"message":"636","line":3,"column":21,"nodeType":"618","messageId":"619","endLine":3,"endColumn":30},{"ruleId":"616","severity":1,"message":"637","line":3,"column":32,"nodeType":"618","messageId":"619","endLine":3,"endColumn":37},{"ruleId":"616","severity":1,"message":"638","line":3,"column":39,"nodeType":"618","messageId":"619","endLine":3,"endColumn":42},{"ruleId":"616","severity":1,"message":"639","line":2,"column":29,"nodeType":"618","messageId":"619","endLine":2,"endColumn":33},{"ruleId":"616","severity":1,"message":"640","line":55,"column":77,"nodeType":"618","messageId":"619","endLine":55,"endColumn":90},{"ruleId":"616","severity":1,"message":"641","line":55,"column":92,"nodeType":"618","messageId":"619","endLine":55,"endColumn":104},{"ruleId":"616","severity":1,"message":"642","line":55,"column":106,"nodeType":"618","messageId":"619","endLine":55,"endColumn":121},{"ruleId":"616","severity":1,"message":"643","line":82,"column":7,"nodeType":"618","messageId":"619","endLine":82,"endColumn":21},{"ruleId":"616","severity":1,"message":"624","line":1,"column":27,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"644","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":14},{"ruleId":"616","severity":1,"message":"645","line":3,"column":21,"nodeType":"618","messageId":"619","endLine":3,"endColumn":27},{"ruleId":"616","severity":1,"message":"646","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":14},{"ruleId":"616","severity":1,"message":"647","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":15},{"ruleId":"616","severity":1,"message":"648","line":19,"column":10,"nodeType":"618","messageId":"619","endLine":19,"endColumn":17},{"ruleId":"616","severity":1,"message":"627","line":24,"column":11,"nodeType":"618","messageId":"619","endLine":24,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":24,"column":18,"nodeType":"618","messageId":"619","endLine":24,"endColumn":25},{"ruleId":"616","severity":1,"message":"649","line":24,"column":27,"nodeType":"618","messageId":"619","endLine":24,"endColumn":35},{"ruleId":"616","severity":1,"message":"645","line":2,"column":21,"nodeType":"618","messageId":"619","endLine":2,"endColumn":27},{"ruleId":"616","severity":1,"message":"644","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":14},{"ruleId":"616","severity":1,"message":"646","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":14},{"ruleId":"616","severity":1,"message":"647","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":15},{"ruleId":"616","severity":1,"message":"627","line":21,"column":13,"nodeType":"618","messageId":"619","endLine":21,"endColumn":18},{"ruleId":"616","severity":1,"message":"628","line":21,"column":20,"nodeType":"618","messageId":"619","endLine":21,"endColumn":27},{"ruleId":"616","severity":1,"message":"650","line":5,"column":19,"nodeType":"618","messageId":"619","endLine":5,"endColumn":30},{"ruleId":"616","severity":1,"message":"651","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"645","line":4,"column":37,"nodeType":"618","messageId":"619","endLine":4,"endColumn":43},{"ruleId":"616","severity":1,"message":"644","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"616","severity":1,"message":"652","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":33},{"ruleId":"616","severity":1,"message":"647","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":15},{"ruleId":"616","severity":1,"message":"646","line":8,"column":8,"nodeType":"618","messageId":"619","endLine":8,"endColumn":14},{"ruleId":"616","severity":1,"message":"653","line":18,"column":12,"nodeType":"618","messageId":"619","endLine":18,"endColumn":19},{"ruleId":"616","severity":1,"message":"654","line":19,"column":12,"nodeType":"618","messageId":"619","endLine":19,"endColumn":17},{"ruleId":"616","severity":1,"message":"648","line":22,"column":12,"nodeType":"618","messageId":"619","endLine":22,"endColumn":19},{"ruleId":"616","severity":1,"message":"655","line":22,"column":21,"nodeType":"618","messageId":"619","endLine":22,"endColumn":31},{"ruleId":"616","severity":1,"message":"656","line":25,"column":11,"nodeType":"618","messageId":"619","endLine":25,"endColumn":19},{"ruleId":"616","severity":1,"message":"627","line":31,"column":14,"nodeType":"618","messageId":"619","endLine":31,"endColumn":19},{"ruleId":"616","severity":1,"message":"628","line":31,"column":21,"nodeType":"618","messageId":"619","endLine":31,"endColumn":28},{"ruleId":"616","severity":1,"message":"657","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":12},{"ruleId":"616","severity":1,"message":"639","line":2,"column":29,"nodeType":"618","messageId":"619","endLine":2,"endColumn":33},{"ruleId":"616","severity":1,"message":"637","line":2,"column":35,"nodeType":"618","messageId":"619","endLine":2,"endColumn":40},{"ruleId":"616","severity":1,"message":"658","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":34},{"ruleId":"616","severity":1,"message":"644","line":9,"column":10,"nodeType":"618","messageId":"619","endLine":9,"endColumn":14},{"ruleId":"616","severity":1,"message":"656","line":18,"column":9,"nodeType":"618","messageId":"619","endLine":18,"endColumn":17},{"ruleId":"616","severity":1,"message":"649","line":20,"column":27,"nodeType":"618","messageId":"619","endLine":20,"endColumn":35},{"ruleId":"616","severity":1,"message":"659","line":49,"column":27,"nodeType":"618","messageId":"619","endLine":49,"endColumn":43},{"ruleId":"616","severity":1,"message":"660","line":98,"column":11,"nodeType":"618","messageId":"619","endLine":98,"endColumn":29},{"ruleId":"616","severity":1,"message":"643","line":109,"column":11,"nodeType":"618","messageId":"619","endLine":109,"endColumn":25},{"ruleId":"616","severity":1,"message":"661","line":114,"column":11,"nodeType":"618","messageId":"619","endLine":114,"endColumn":24},{"ruleId":"616","severity":1,"message":"662","line":8,"column":8,"nodeType":"618","messageId":"619","endLine":8,"endColumn":14},{"ruleId":"620","severity":1,"message":"663","line":52,"column":8,"nodeType":"622","endLine":52,"endColumn":47,"suggestions":"664"},{"ruleId":"620","severity":1,"message":"663","line":41,"column":8,"nodeType":"622","endLine":41,"endColumn":27,"suggestions":"665"},{"ruleId":"616","severity":1,"message":"645","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":16},{"ruleId":"616","severity":1,"message":"627","line":14,"column":13,"nodeType":"618","messageId":"619","endLine":14,"endColumn":18},{"ruleId":"620","severity":1,"message":"666","line":24,"column":8,"nodeType":"622","endLine":24,"endColumn":10,"suggestions":"667"},{"ruleId":"616","severity":1,"message":"624","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"625","line":4,"column":16,"nodeType":"618","messageId":"619","endLine":4,"endColumn":24},{"ruleId":"616","severity":1,"message":"668","line":7,"column":20,"nodeType":"618","messageId":"619","endLine":7,"endColumn":29},{"ruleId":"616","severity":1,"message":"634","line":7,"column":52,"nodeType":"618","messageId":"619","endLine":7,"endColumn":56},{"ruleId":"616","severity":1,"message":"637","line":4,"column":35,"nodeType":"618","messageId":"619","endLine":4,"endColumn":40},{"ruleId":"616","severity":1,"message":"644","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":14},{"ruleId":"616","severity":1,"message":"625","line":6,"column":16,"nodeType":"618","messageId":"619","endLine":6,"endColumn":24},{"ruleId":"616","severity":1,"message":"624","line":1,"column":27,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"624","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":26},{"ruleId":"616","severity":1,"message":"650","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":21},{"ruleId":"616","severity":1,"message":"669","line":3,"column":23,"nodeType":"618","messageId":"619","endLine":3,"endColumn":34},{"ruleId":"616","severity":1,"message":"670","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":14},{"ruleId":"616","severity":1,"message":"671","line":5,"column":8,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"616","severity":1,"message":"647","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":15},{"ruleId":"616","severity":1,"message":"672","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":19},{"ruleId":"616","severity":1,"message":"645","line":9,"column":8,"nodeType":"618","messageId":"619","endLine":9,"endColumn":14},{"ruleId":"616","severity":1,"message":"637","line":2,"column":39,"nodeType":"618","messageId":"619","endLine":2,"endColumn":44},{"ruleId":"616","severity":1,"message":"644","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"646","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"657","line":13,"column":8,"nodeType":"618","messageId":"619","endLine":13,"endColumn":12},{"ruleId":"616","severity":1,"message":"629","line":20,"column":12,"nodeType":"618","messageId":"619","endLine":20,"endColumn":20},{"ruleId":"620","severity":1,"message":"663","line":100,"column":8,"nodeType":"622","endLine":100,"endColumn":62,"suggestions":"673"},{"ruleId":"616","severity":1,"message":"645","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":16},{"ruleId":"616","severity":1,"message":"645","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":16},{"ruleId":"616","severity":1,"message":"634","line":4,"column":18,"nodeType":"618","messageId":"619","endLine":4,"endColumn":22},{"ruleId":"616","severity":1,"message":"674","line":24,"column":11,"nodeType":"618","messageId":"619","endLine":24,"endColumn":15},{"ruleId":"616","severity":1,"message":"634","line":2,"column":18,"nodeType":"618","messageId":"619","endLine":2,"endColumn":22},{"ruleId":"616","severity":1,"message":"644","line":7,"column":10,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"675","line":8,"column":10,"nodeType":"618","messageId":"619","endLine":8,"endColumn":28},{"ruleId":"620","severity":1,"message":"676","line":35,"column":8,"nodeType":"622","endLine":35,"endColumn":38,"suggestions":"677"},{"ruleId":"616","severity":1,"message":"678","line":12,"column":12,"nodeType":"618","messageId":"619","endLine":12,"endColumn":27},{"ruleId":"616","severity":1,"message":"627","line":15,"column":13,"nodeType":"618","messageId":"619","endLine":15,"endColumn":18},{"ruleId":"616","severity":1,"message":"628","line":15,"column":20,"nodeType":"618","messageId":"619","endLine":15,"endColumn":27},{"ruleId":"620","severity":1,"message":"666","line":25,"column":8,"nodeType":"622","endLine":25,"endColumn":10,"suggestions":"679"},{"ruleId":"616","severity":1,"message":"638","line":2,"column":20,"nodeType":"618","messageId":"619","endLine":2,"endColumn":23},{"ruleId":"616","severity":1,"message":"635","line":2,"column":25,"nodeType":"618","messageId":"619","endLine":2,"endColumn":28},{"ruleId":"616","severity":1,"message":"680","line":2,"column":44,"nodeType":"618","messageId":"619","endLine":2,"endColumn":49},{"ruleId":"616","severity":1,"message":"657","line":9,"column":8,"nodeType":"618","messageId":"619","endLine":9,"endColumn":12},{"ruleId":"616","severity":1,"message":"681","line":10,"column":9,"nodeType":"618","messageId":"619","endLine":10,"endColumn":15},{"ruleId":"616","severity":1,"message":"647","line":12,"column":8,"nodeType":"618","messageId":"619","endLine":12,"endColumn":15},{"ruleId":"616","severity":1,"message":"648","line":18,"column":12,"nodeType":"618","messageId":"619","endLine":18,"endColumn":19},{"ruleId":"616","severity":1,"message":"655","line":18,"column":21,"nodeType":"618","messageId":"619","endLine":18,"endColumn":31},{"ruleId":"616","severity":1,"message":"650","line":4,"column":19,"nodeType":"618","messageId":"619","endLine":4,"endColumn":30},{"ruleId":"616","severity":1,"message":"668","line":4,"column":28,"nodeType":"618","messageId":"619","endLine":4,"endColumn":37},{"ruleId":"616","severity":1,"message":"634","line":4,"column":46,"nodeType":"618","messageId":"619","endLine":4,"endColumn":50},{"ruleId":"616","severity":1,"message":"682","line":8,"column":8,"nodeType":"618","messageId":"619","endLine":8,"endColumn":21},{"ruleId":"620","severity":1,"message":"683","line":36,"column":8,"nodeType":"622","endLine":36,"endColumn":26,"suggestions":"684"},{"ruleId":"612","replacedBy":"685"},{"ruleId":"614","replacedBy":"686"},{"ruleId":"616","severity":1,"message":"636","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":19},{"ruleId":"616","severity":1,"message":"638","line":3,"column":21,"nodeType":"618","messageId":"619","endLine":3,"endColumn":24},{"ruleId":"616","severity":1,"message":"635","line":3,"column":26,"nodeType":"618","messageId":"619","endLine":3,"endColumn":29},{"ruleId":"616","severity":1,"message":"639","line":3,"column":31,"nodeType":"618","messageId":"619","endLine":3,"endColumn":35},{"ruleId":"616","severity":1,"message":"645","line":3,"column":37,"nodeType":"618","messageId":"619","endLine":3,"endColumn":43},{"ruleId":"616","severity":1,"message":"687","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":20},{"ruleId":"616","severity":1,"message":"627","line":12,"column":13,"nodeType":"618","messageId":"619","endLine":12,"endColumn":18},{"ruleId":"616","severity":1,"message":"628","line":12,"column":20,"nodeType":"618","messageId":"619","endLine":12,"endColumn":27},{"ruleId":"616","severity":1,"message":"688","line":12,"column":29,"nodeType":"618","messageId":"619","endLine":12,"endColumn":33},{"ruleId":"616","severity":1,"message":"689","line":14,"column":5,"nodeType":"618","messageId":"619","endLine":14,"endColumn":20},{"ruleId":"616","severity":1,"message":"690","line":19,"column":5,"nodeType":"618","messageId":"619","endLine":19,"endColumn":24},{"ruleId":"616","severity":1,"message":"691","line":28,"column":5,"nodeType":"618","messageId":"619","endLine":28,"endColumn":24},{"ruleId":"616","severity":1,"message":"649","line":42,"column":26,"nodeType":"618","messageId":"619","endLine":42,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":90,"column":26,"nodeType":"618","messageId":"619","endLine":90,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":131,"column":26,"nodeType":"618","messageId":"619","endLine":131,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":172,"column":26,"nodeType":"618","messageId":"619","endLine":172,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":214,"column":26,"nodeType":"618","messageId":"619","endLine":214,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":254,"column":26,"nodeType":"618","messageId":"619","endLine":254,"endColumn":34},{"ruleId":"616","severity":1,"message":"692","line":1,"column":10,"nodeType":"618","messageId":"619","endLine":1,"endColumn":18},{"ruleId":"616","severity":1,"message":"645","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":14},{"ruleId":"616","severity":1,"message":"645","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":16},{"ruleId":"616","severity":1,"message":"693","line":17,"column":7,"nodeType":"618","messageId":"619","endLine":17,"endColumn":11},{"ruleId":"616","severity":1,"message":"627","line":32,"column":11,"nodeType":"618","messageId":"619","endLine":32,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":32,"column":18,"nodeType":"618","messageId":"619","endLine":32,"endColumn":25},{"ruleId":"616","severity":1,"message":"634","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":14},{"ruleId":"616","severity":1,"message":"662","line":3,"column":8,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"646","line":5,"column":8,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"616","severity":1,"message":"647","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":15},{"ruleId":"616","severity":1,"message":"627","line":12,"column":11,"nodeType":"618","messageId":"619","endLine":12,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":12,"column":18,"nodeType":"618","messageId":"619","endLine":12,"endColumn":25},{"ruleId":"616","severity":1,"message":"649","line":12,"column":27,"nodeType":"618","messageId":"619","endLine":12,"endColumn":35},{"ruleId":"616","severity":1,"message":"625","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":18},{"ruleId":"616","severity":1,"message":"694","line":1,"column":17,"nodeType":"618","messageId":"619","endLine":1,"endColumn":25},{"ruleId":"616","severity":1,"message":"695","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":16},{"ruleId":"616","severity":1,"message":"696","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":18},{"ruleId":"616","severity":1,"message":"645","line":4,"column":9,"nodeType":"618","messageId":"619","endLine":4,"endColumn":15},{"ruleId":"616","severity":1,"message":"697","line":15,"column":10,"nodeType":"618","messageId":"619","endLine":15,"endColumn":25},{"ruleId":"616","severity":1,"message":"698","line":16,"column":10,"nodeType":"618","messageId":"619","endLine":16,"endColumn":22},{"ruleId":"616","severity":1,"message":"693","line":19,"column":7,"nodeType":"618","messageId":"619","endLine":19,"endColumn":11},{"ruleId":"616","severity":1,"message":"627","line":34,"column":11,"nodeType":"618","messageId":"619","endLine":34,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":34,"column":18,"nodeType":"618","messageId":"619","endLine":34,"endColumn":25},{"ruleId":"616","severity":1,"message":"693","line":16,"column":7,"nodeType":"618","messageId":"619","endLine":16,"endColumn":11},{"ruleId":"616","severity":1,"message":"627","line":30,"column":11,"nodeType":"618","messageId":"619","endLine":30,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":30,"column":18,"nodeType":"618","messageId":"619","endLine":30,"endColumn":25},{"ruleId":"616","severity":1,"message":"693","line":134,"column":17,"nodeType":"618","messageId":"619","endLine":134,"endColumn":21},{"ruleId":"616","severity":1,"message":"649","line":204,"column":26,"nodeType":"618","messageId":"619","endLine":204,"endColumn":34},{"ruleId":"616","severity":1,"message":"649","line":248,"column":26,"nodeType":"618","messageId":"619","endLine":248,"endColumn":34},{"ruleId":"616","severity":1,"message":"645","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":15},{"ruleId":"616","severity":1,"message":"644","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"616","severity":1,"message":"699","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":15},{"ruleId":"616","severity":1,"message":"700","line":11,"column":19,"nodeType":"618","messageId":"619","endLine":11,"endColumn":29},{"ruleId":"616","severity":1,"message":"627","line":13,"column":11,"nodeType":"618","messageId":"619","endLine":13,"endColumn":16},{"ruleId":"616","severity":1,"message":"628","line":13,"column":18,"nodeType":"618","messageId":"619","endLine":13,"endColumn":25},{"ruleId":"616","severity":1,"message":"688","line":13,"column":27,"nodeType":"618","messageId":"619","endLine":13,"endColumn":31},{"ruleId":"616","severity":1,"message":"701","line":20,"column":9,"nodeType":"618","messageId":"619","endLine":20,"endColumn":23},{"ruleId":"702","severity":1,"message":"703","line":154,"column":16,"nodeType":"704","endLine":154,"endColumn":63},{"ruleId":"616","severity":1,"message":"705","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"645","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":16},{"ruleId":"616","severity":1,"message":"706","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":32},"no-native-reassign",["707"],"no-negated-in-lhs",["708"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["709"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'payOrder' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","'location' is assigned a value but never used.","'axios' is defined but never used.","'alert' is assigned a value but never used.","'contat_us' is assigned a value but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'recipientName' is assigned a value but never used.","'recipientTel' is assigned a value but never used.","'deliveryAddress' is assigned a value but never used.","'HandlePrevious' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'message' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'useDispatch' is defined but never used.","'Component' is defined but never used.","'LOAD_USER_PROFILE_RESET' is defined but never used.","'company' is assigned a value but never used.","'image' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'swal' is defined but never used.","'EmergencyOrderVerifyScreen' is defined but never used.","'setStepTwoErrors' is assigned a value but never used.","'stepTwoInputErrors' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'Rating' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isAuthenticated', and 'location'. Either include them or remove the dependency array.",["710"],["711"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["712"],"'ListGroup' is defined but never used.","'useSelector' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'LoadingMain' is defined but never used.",["713"],"'post' is assigned a value but never used.","'BLOG_COMMENT_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["714"],"'currentCategory' is assigned a value but never used.",["715"],"'Toast' is defined but never used.","'Helmet' is defined but never used.","'CheckoutSteps' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order.id'. Either include them or remove the dependency array.",["716"],["707"],["708"],"'NavDropdown' is defined but never used.","'user' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'Children' is defined but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'Calendar' is defined but never used.","'DatePicker' is defined but never used.","'getProductClass' is defined but never used.","'listProducts' is defined but never used.","'Monnify' is defined but never used.","'setPremium' is assigned a value but never used.","'premiumHandler' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","'EMERGENCY_ORDER_REQUEST' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"723","fix":"729"},{"desc":"730","fix":"731"},"Update the dependencies array to be: [history]",{"range":"732","text":"733"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, location, match, successProductReview]",{"range":"734","text":"735"},"Update the dependencies array to be: [dispatch, history, isAuthenticated, keyword, location]",{"range":"736","text":"737"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"738","text":"739"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]",{"range":"740","text":"741"},"Update the dependencies array to be: [dispatch, blogCommentSuccess, match.params.id]",{"range":"742","text":"743"},{"range":"744","text":"739"},"Update the dependencies array to be: [success, history, order.id, dispatch]",{"range":"745","text":"746"},[311,313],"[history]",[1963,2002],"[dispatch, history, isAuthenticated, location, match, successProductReview]",[1439,1458],"[dispatch, history, isAuthenticated, keyword, location]",[947,949],"[dispatch, match.params.id]",[3886,3940],"[dispatch, order, orderId, successPay, successDeliver, isAuthenticated, history, location]",[1316,1346],"[dispatch, blogCommentSuccess, match.params.id]",[894,896],[1327,1345],"[success, history, order.id, dispatch]"]